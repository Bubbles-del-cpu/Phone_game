<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GUPS.Obfuscator.Editor</name>
    </assembly>
    <members>
        <member name="T:GUPS.Editor.Gui.AContainer">
            <summary>
            Abstract base class for UI containers in the obfuscator editor.
            Provides a structured layout with header, description, and content sections.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContainer.#ctor(GUPS.Editor.Gui.AHeader,GUPS.Editor.Gui.ADescription,GUPS.Editor.Gui.AContent)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.AContainer"/> class.
            </summary>
            <param name="_Header">The header section of the container.</param>
            <param name="_Description">The description section of the container.</param>
            <param name="_Content">The content section of the container.</param>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.Header">
            <summary>
            Render the header.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.ShowHeader">
            <summary>
            Render the header or dont.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.EnableHeader">
            <summary>
            Enable the header or dont.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.Description">
            <summary>
            Render the description.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.ShowDescription">
            <summary>
            Render the description or dont.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.EnableDescription">
            <summary>
            Enable the description or dont.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.Content">
            <summary>
            Render the content.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.ShowContent">
            <summary>
            Render the content or dont.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContainer.EnableContent">
            <summary>
            Enable the content or dont.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContainer.Gui">
            <summary>
            Rendering of the gui.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContainer.GuiHeader">
            <summary>
            Renders the header section of the container.
            Can be overridden in derived classes to customize header rendering.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContainer.GuiDescription">
            <summary>
            Renders the description section of the container.
            Can be overridden in derived classes to customize description rendering.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContainer.GuiContent">
            <summary>
            Renders the content section of the container.
            Can be overridden in derived classes to customize content rendering.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.Checkbox">
            <summary>
            Custom checkbox UI element for the obfuscator editor.
            Provides a styled checkbox with on/off states and custom textures.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Checkbox.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Checkbox"/> class.
            </summary>
            <param name="_Header">Determines if this checkbox is used in a header (affects sizing).</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Checkbox.header">
            <summary>
            Indicates whether this checkbox is used in a header.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Checkbox.texture_On">
            <summary>
            Texture used for the checkbox's "on" state.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Checkbox.texture_Off">
            <summary>
            Texture used for the checkbox's "off" state.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Checkbox.width">
            <summary>
            Width of the checkbox in pixels.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Checkbox.height">
            <summary>
            Height of the checkbox in pixels.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Checkbox.SetupGui">
            <summary>
            Initializes the GUI elements for the checkbox.
            Sets up textures and dimensions based on whether it's a header checkbox.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Checkbox.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Checkbox.OnGui(System.Boolean)">
            <summary>
            Renders the checkbox and handles user interaction.
            </summary>
            <param name="_CurrentValue">The current state of the checkbox.</param>
            <returns>The new state of the checkbox after user interaction.</returns>
        </member>
        <member name="T:GUPS.Editor.Gui.AContent">
            <summary>
            Abstract base class for content sections in the obfuscator editor UI.
            Manages a collection of UI rows and handles their rendering.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.AContent"/> class.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.AContent.RowList">
            <summary>
            Renderer rows in the content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.AddRow(GUPS.Editor.Gui.IRow)">
            <summary>
             Adds the _Row to the row list.
            </summary>
            <param name="_Row"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.OnAddRow(GUPS.Editor.Gui.IRow)">
            <summary>
            Called after _Row got add to the row list.
            </summary>
            <param name="_Row"></param>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.SetupGui">
            <summary>
            Setup the content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.OnSetupGui">
            <summary>
            Override for custom content setup.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.AContent.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.Gui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AContent.OnGui">
            <summary>
            Custom rendering of the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.DefaultContent">
            <summary>
            Default implementation of the content section in the obfuscator editor UI.
            Provides a standard layout for displaying rows of UI elements with proper spacing and borders.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultContent.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.DefaultContent.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultContent.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.DefaultContainer">
            <summary>
            Default implementation of the container UI element.
            Provides a standard container with header, description, and content sections.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultContainer.#ctor(GUPS.Editor.Gui.AHeader,GUPS.Editor.Gui.ADescription,GUPS.Editor.Gui.AContent)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.DefaultContainer"/> class.
            </summary>
            <param name="_Header">The header section of the container.</param>
            <param name="_Description">The description section of the container.</param>
            <param name="_Content">The content section of the container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.ADescription">
            <summary>
            Abstract base class for description sections in the obfuscator editor UI.
            Provides functionality for rendering descriptive text or elements.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ADescription.SetupGui">
            <summary>
            Setup the content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ADescription.OnSetupGui">
            <summary>
            Override for custom content setup.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.ADescription.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ADescription.Gui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ADescription.OnGui">
            <summary>
            Custom rendering of the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.DefaultDescription">
            <summary>
            Default implementation of the description section in the obfuscator editor UI.
            Displays a text description with proper styling and layout.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.DefaultDescription"/> class.
            </summary>
            <param name="_Text">The descriptive text to display.</param>
        </member>
        <member name="P:GUPS.Editor.Gui.DefaultDescription.Text">
            <summary>
            Gets the descriptive text to display.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.DefaultDescription.Height">
            <summary>
            Gets the height of the description area in pixels.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultDescription.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.DefaultDescription.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultDescription.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.EmptyDescription">
            <summary>
            An empty implementation of the description section that renders nothing.
            Used when a description is required by the container but should not be visible.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.EmptyDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.EmptyDescription"/> class.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.EmptyDescription.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.AHeader">
            <summary>
            Abstract base class for header sections in the obfuscator editor UI.
            Provides functionality for rendering header elements like titles and controls.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AHeader.SetupGui">
            <summary>
            Setup the content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AHeader.OnSetupGui">
            <summary>
            Override for custom content setup.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.AHeader.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AHeader.Gui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.AHeader.OnGui">
            <summary>
            Custom rendering of the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.DefaultHeader">
            <summary>
            Default implementation of the header section in the obfuscator editor UI.
            Displays a title text with proper styling and layout.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultHeader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.DefaultHeader"/> class.
            </summary>
            <param name="_HeaderText">The text to display in the header.</param>
        </member>
        <member name="P:GUPS.Editor.Gui.DefaultHeader.HeaderText">
            <summary>
            Text the header shows.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultHeader.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.DefaultHeader.Height">
            <summary>
            Height of the header.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.DefaultHeader.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.EmptyHeader">
            <summary>
            An empty implementation of the header section that renders nothing.
            Used when a header is required by the container but should not be visible.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.EmptyHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.EmptyHeader"/> class.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.EmptyHeader.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.ARow`1">
            <summary>
            Abstract base class for row elements in the obfuscator editor UI.
            Provides common functionality for displaying and managing row content of type T.
            </summary>
            <typeparam name="T">The type of content this row will manage.</typeparam>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.ARow`1"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text for this row.</param>
            <param name="_RowContent">The content to display and manage in this row.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.#ctor(System.String,GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.ARow`1"/> class with content from settings.
            </summary>
            <param name="_Text">The descriptive text for this row.</param>
            <param name="_Settings">The settings object to load/save row content from/to.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.ARow`1.settings">
            <summary>
            The settings object used to load and save row content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            If no row content got assigned, but a setting, you can use it here to load the row content.
            </summary>
            <param name="_Settings"></param>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.Save(GUPS.Editor.Settings.File.ASettings,`0)">
            <summary>
            Store row content to settings.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.Enabled">
            <summary>
            Is this Row enabled or disabled.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.Notification_Error">
            <summary>
            Error notification.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.Notification_Warning">
            <summary>
            Warning notification.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.Notification_Info">
            <summary>
            Info notification.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.MinHeight">
            <summary>
            Min Height of this row.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.SetupGui">
            <summary>
            Setup the row.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.OnSetupGui">
            <summary>
            Override for custom row setup.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.Text">
            <summary>
            Gets the text describing the row.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.Bold">
            <summary>
            Gets or sets a value indicating whether the text should be displayed in bold.
            When true, the text will use the larger, bold label style.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.GUPS#Editor#Gui#IRow#RowContent">
            <summary>
            The row content.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.ARow`1.RowContent">
            <summary>
            The row content as T.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.ARow`1.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.Gui(System.Int32)">
            <summary>
            Render the row with _RowIndex.
            </summary>
            <param name="_RowIndex"></param>
        </member>
        <member name="M:GUPS.Editor.Gui.ARow`1.OnGui(System.Int32)">
            <summary>
            Override to change how the row content will be rendered.
            </summary>
            <param name="_RowIndex"></param>
        </member>
        <member name="T:GUPS.Editor.Gui.IRow">
            <summary>
            Interface for row elements in the obfuscator editor UI.
            Defines the contract for all row types that can be displayed in content sections.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.IRow.Enabled">
            <summary>
            Is this Row enabled or disabled.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.IRow.RowContent">
            <summary>
            The row content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.IRow.Gui(System.Int32)">
            <summary>
            Render the row with the specified index.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container, used for alternating background colors.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_Array">
            <summary>
            Row element for editing arrays of string values with add/remove functionality.
            Provides a dynamic list editor with buttons to add and remove string entries.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Array.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Array"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_RowArray">The initial array of strings to display and manage.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Array.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Array"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the string array from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this array.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Array.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Array.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the string array from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The string array stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Array.Save(GUPS.Editor.Settings.File.ASettings,System.String[])">
            <summary>
            Saves the string array to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The string array to save.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Array.OnGui(System.Int32)">
            <summary>
            Renders the array editor with text fields for each entry and add/remove buttons.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_Boolean">
            <summary>
            Row element for displaying and editing boolean values using a custom checkbox.
            Provides a checkbox UI control for boolean settings and content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Boolean.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Boolean"/> class with direct boolean content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_RowContent">The initial boolean value to display and manage.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Boolean.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Boolean"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the boolean value from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this boolean value.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Boolean.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Boolean.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the boolean value from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The boolean value stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Boolean.Save(GUPS.Editor.Settings.File.ASettings,System.Boolean)">
            <summary>
            Saves the boolean value to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The boolean value to save.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Boolean.checkbox">
            <summary>
            The checkbox control used to display and interact with the boolean value.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Boolean.OnSetupGui">
            <summary>
            Sets up the row by initializing the checkbox control.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Boolean.OnGui(System.Int32)">
            <summary>
            Renders the row content with the checkbox control.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_Button">
            <summary>
            Row element that displays a clickable button with customizable text and action.
            Used for triggering actions or commands from within the UI.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Button.#ctor(System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Button"/> class.
            </summary>
            <param name="_Text">The text to display on the button.</param>
            <param name="_OnButtonPress">The action to execute when the button is clicked.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Button.buttonText">
            <summary>
            The text displayed on the button.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Button.buttonPress">
            <summary>
            The action to execute when the button is clicked.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Button.OnGui(System.Int32)">
            <summary>
            Renders the button and handles click interactions.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_DropDown">
            <summary>
            Row element that displays a dropdown/popup menu for selecting from a list of string values.
            Supports both direct value setting and settings-backed persistence.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.#ctor(System.String,System.String[],System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_DropDown"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_DropDownValues">Array of available options for the dropdown.</param>
            <param name="_ActiveValue">The initially selected value from the dropdown options.</param>
            <param name="_OnValueChanged">Action to execute when the selected value changes.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.#ctor(System.String,System.String[],GUPS.Editor.Settings.File.ASettings,System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_DropDown"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_DropDownValues">Array of available options for the dropdown.</param>
            <param name="_Settings">The settings object to load/save the selected value from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this dropdown value.</param>
            <param name="_OnValueChanged">Action to execute when the selected value changes.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_DropDown.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.Save(GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Store in settings as string.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.OnSetupGui">
            <summary>
            Sets up the dropdown row and triggers the initial value changed notification.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Row_DropDown.Selected">
            <summary>
            Selected Index in DropDownValues.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Row_DropDown.DropDownValues">
            <summary>
            Valid options for the DropDown.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_DropDown.onValueChanged">
            <summary>
            Action when the drop down value changed.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.CallOnValueChanged">
            <summary>
            Call onValueChanged if it is not null!
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.OnGui(System.Int32)">
            <summary>
            Renders the dropdown control and handles value changes.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.GetStringById(System.Int32)">
            <summary>
            Gets the string value at the specified index from the dropdown options.
            </summary>
            <param name="_Id">The index of the desired option.</param>
            <returns>The string value at the specified index.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown.GetIdByString(System.String)">
            <summary>
            Gets the index of the specified string value in the dropdown options.
            </summary>
            <param name="_Value">The string value to find the index for.</param>
            <returns>The index of the specified value, or 0 if not found.</returns>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_DropDown_Enum`1">
            <summary>
            Generic row element that displays a dropdown for selecting enum values.
            Provides a type-safe way to select from enumeration values with settings persistence.
            </summary>
            <typeparam name="TEnum">The enumeration type to display options for.</typeparam>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.#ctor(System.String,`0,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_DropDown_Enum`1"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_DropDownValue">The initial enum value to select.</param>
            <param name="_OnValueChanged">Action to execute when the selected enum value changes.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_DropDown_Enum`1"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the enum value from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this enum value.</param>
            <param name="_OnValueChanged">Action to execute when the selected enum value changes.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_DropDown_Enum`1.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the enum value from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The enum value stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.Save(GUPS.Editor.Settings.File.ASettings,`0)">
            <summary>
            Saves the enum value to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The enum value to save.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.OnSetupGui">
            <summary>
            Sets up the enum dropdown row and triggers the initial value changed notification.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_DropDown_Enum`1.onValueChanged">
            <summary>
            Action when the drop down value changed.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.CallOnValueChanged">
            <summary>
            Calls the value changed action if it is not null.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_DropDown_Enum`1.OnGui(System.Int32)">
            <summary>
            Renders the enum dropdown control and handles value changes.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_Multi_Boolean">
            <summary>
            Row element that displays multiple boolean values in a table-like layout with checkboxes.
            Each boolean has an associated text label and can be managed as a group.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Multi_Boolean.#ctor(System.String,System.String[],System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Multi_Boolean"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Text_Array">Array of text labels for each boolean value.</param>
            <param name="_Value_Array">Array of initial boolean values to display and manage.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Multi_Boolean.#ctor(System.String,System.String[],GUPS.Editor.Settings.File.ASettings,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Multi_Boolean"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Text_Array">Array of text labels for each boolean value.</param>
            <param name="_Settings">The settings object to load/save the boolean values from/to.</param>
            <param name="_SettingsElementKey_Array">Array of keys in the settings object for each boolean value.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Multi_Boolean.settingsElementKey_Array">
            <summary>
            Key array for the settings elements.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Multi_Boolean.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the boolean array from the settings object using the associated keys.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The boolean array stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Multi_Boolean.Save(GUPS.Editor.Settings.File.ASettings,System.Boolean[])">
            <summary>
            Saves the boolean array to the settings object using the associated keys.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The boolean array to save.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Multi_Boolean.tableHeaderGUIStyle">
            <summary>
            The GUI style used for table header labels.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Multi_Boolean.tableTextWidth">
            <summary>
            Width of each table text column in pixels.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Multi_Boolean.tableTextHeight">
            <summary>
            Height of each table text row in pixels.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Multi_Boolean.tableTextArray">
            <summary>
            Array of text labels for each boolean value in the table.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_Multi_Boolean.tableCheckboxArray">
            <summary>
            Array of checkbox controls for each boolean value in the table.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Multi_Boolean.OnSetupGui">
            <summary>
            Sets up the multi-boolean row by configuring table styles and initializing checkbox controls.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Multi_Boolean.OnGui(System.Int32)">
            <summary>
            Renders the table of boolean values with their labels and checkbox controls.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_OpenFileSelect">
            <summary>
            Row element that provides file path selection for opening files.
            Combines a text field for manual entry with a button that opens a file browser dialog.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_OpenFileSelect.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_OpenFileSelect"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Value">The initial file path value.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_OpenFileSelect.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_OpenFileSelect"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the file path from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this file path.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_OpenFileSelect.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_OpenFileSelect.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the file path from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The file path stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_OpenFileSelect.Save(GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Saves the file path to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The file path to save.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_OpenFileSelect.OnGui(System.Int32)">
            <summary>
            Renders the file path text field and file browser button.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_SaveFileSelect">
            <summary>
            Row element that provides file path selection for saving files.
            Combines a text field for manual entry with a button that opens a save file dialog.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_SaveFileSelect.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_SaveFileSelect"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Value">The initial file path value.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_SaveFileSelect.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_SaveFileSelect"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the file path from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this file path.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_SaveFileSelect.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_SaveFileSelect.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the file path from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The file path stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_SaveFileSelect.Save(GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Saves the file path to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The file path to save.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_SaveFileSelect.OnGui(System.Int32)">
            <summary>
            Renders the file path text field and save file dialog button.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_Section">
            <summary>
            Row element that displays a section header with bold text styling.
            Used for creating visual separations and organizing content into logical groups.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Section.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Section"/> class.
            </summary>
            <param name="_Text">The section title text to display in bold.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Section.OnSetupGui">
            <summary>
            Sets up the row with bold text styling for section headers.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Section.OnGui(System.Int32)">
            <summary>
            Renders the section header with no interactive controls.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_Text">
            <summary>
            Row element for displaying plain text content without any interactive controls.
            Used for showing informational text or section labels in the UI.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Text.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_Text"/> class.
            </summary>
            <param name="_Text">The text content to display in this row.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Text.OnSetupGui">
            <summary>
            Sets up the row with default configuration for text display.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_Text.OnGui(System.Int32)">
            <summary>
            Renders the row as a text-only element with no interactive controls.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_TextArea">
            <summary>
            Row element that displays a multi-line text area for editing string values.
            Provides a larger text editor suitable for longer text content.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextArea.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_TextArea"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Value">The initial string value to display in the text area.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextArea.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_TextArea"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the text value from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this text value.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_TextArea.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextArea.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the string value from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The string value stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextArea.Save(GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Saves the string value to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The string value to save.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextArea.OnGui(System.Int32)">
            <summary>
            Renders the multi-line text area control for text editing.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_TextBox">
            <summary>
            Row element that displays a text input field for editing string values.
            Provides a single-line text editor with settings persistence support.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBox.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_TextBox"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Value">The initial string value to display in the text box.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBox.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_TextBox"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the text value from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this text value.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_TextBox.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBox.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the string value from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The string value stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBox.Save(GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Saves the string value to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The string value to save.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBox.OnGui(System.Int32)">
            <summary>
            Renders the text input field and handles text editing.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.Row_TextBoxAndButton">
            <summary>
            Row element that combines a text input field with an adjacent action button.
            Provides text editing capabilities alongside a customizable button for related actions.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBoxAndButton.#ctor(System.String,System.String,System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_TextBoxAndButton"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Value">The initial string value to display in the text box.</param>
            <param name="_ButtonText">The text to display on the button.</param>
            <param name="_OnButtonPress">The action to execute when the button is clicked.</param>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBoxAndButton.#ctor(System.String,GUPS.Editor.Settings.File.ASettings,System.String,System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Gui.Row_TextBoxAndButton"/> class with settings-backed content.
            </summary>
            <param name="_Text">The descriptive text label for this row.</param>
            <param name="_Settings">The settings object to load/save the text value from/to.</param>
            <param name="_SettingsElementKey">The key in the settings object for this text value.</param>
            <param name="_ButtonText">The text to display on the button.</param>
            <param name="_OnButtonPress">The action to execute when the button is clicked.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_TextBoxAndButton.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBoxAndButton.Load(GUPS.Editor.Settings.File.ASettings)">
            <summary>
            Loads the string value from the settings object.
            </summary>
            <param name="_Settings">The settings object to load from.</param>
            <returns>The string value stored in settings.</returns>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBoxAndButton.Save(GUPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Saves the string value to the settings object.
            </summary>
            <param name="_Settings">The settings object to save to.</param>
            <param name="_RowContent">The string value to save.</param>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_TextBoxAndButton.buttonText">
            <summary>
            The text displayed on the button.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Row_TextBoxAndButton.buttonPress">
            <summary>
            The action to execute when the button is clicked.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.Row_TextBoxAndButton.OnGui(System.Int32)">
            <summary>
            Renders the text input field and button side by side.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container.</param>
        </member>
        <member name="T:GUPS.Editor.Gui.TextureHelper">
            <summary>
            Helper class providing utility methods for texture generation and manipulation.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Gui.TextureHelper.MakeTexture(System.Int32,System.Int32,UnityEngine.Color)">
            <summary>
            Creates a solid color texture with the specified dimensions and color.
            </summary>
            <param name="_Width">Width of the texture in pixels.</param>
            <param name="_Height">Height of the texture in pixels.</param>
            <param name="_Color">Color to fill the texture with.</param>
            <returns>A new Texture2D filled with the specified color.</returns>
        </member>
        <member name="T:GUPS.Editor.Gui.Style.AGuiStyle">
            <summary>
            Abstract base class defining the GUI styling system for the obfuscator editor.
            Provides access to all UI element styles used throughout the application.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.ActiveStyle">
            <summary>
            Gets or sets the currently active GUI style implementation.
            Defaults to DefaultStyle.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Container_Header_Background">
            <summary>
            Gets the background style for container headers.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Container_Header_Label">
            <summary>
            Gets the label style for container headers.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Container_Description_Background">
            <summary>
            Gets the background style for container descriptions.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Container_Description_Label">
            <summary>
            Gets the label style for container descriptions.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Container_Content_Background">
            <summary>
            Gets the background style for container content areas.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Container_Content_Label">
            <summary>
            Gets the label style for container content text.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Row_Background_Light">
            <summary>
            Gets the light background style for rows.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Row_Background_Dark">
            <summary>
            Gets the dark background style for rows.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Row_Label">
            <summary>
            Gets the standard label style for rows.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Row_Label_Big">
            <summary>
            Gets the larger label style for rows.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Button">
            <summary>
            Gets the style for buttons.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.Toolbar">
            <summary>
            Gets the style for toolbar elements.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.CheckBox_On">
            <summary>
            Gets the texture for checked checkboxes.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.CheckBox_Off">
            <summary>
            Gets the texture for unchecked checkboxes.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.FoldOut_In">
            <summary>
            Gets the texture for folded-in (collapsed) foldout controls.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.AGuiStyle.FoldOut_Out">
            <summary>
            Gets the texture for folded-out (expanded) foldout controls.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Gui.Style.DefaultStyle">
            <summary>
            Default implementation of the GUI styling system.
            Provides standard styling for all UI elements in the obfuscator editor.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.Container_Header_Background_Texture">
            <summary>
            Cached texture for the container header background to avoid repeated creation.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Container_Header_Background">
            <summary>
            Gets the background style for container headers.
            Creates a semi-transparent white background.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Container_Header_Label">
            <summary>
            Gets the label style for container headers.
            Creates a label with increased font size.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.Container_Description_Background_Texture">
            <summary>
            Cached texture for the container description background to avoid repeated creation.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Container_Description_Background">
            <summary>
            Gets the background style for container descriptions.
            Creates a semi-transparent white background.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Container_Description_Label">
            <summary>
            Gets the label style for container descriptions.
            Creates a label with medium-large font size.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.Container_Content_Background_Texture">
            <summary>
            Cached texture for the container content background to avoid repeated creation.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Container_Content_Background">
            <summary>
            Gets the background style for container content areas.
            Creates a semi-transparent white background.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Container_Content_Label">
            <summary>
            Gets the label style for container content text.
            Creates a standard-sized label.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.Row_Background_Light_Texture">
            <summary>
            Cached texture for the light row background to avoid repeated creation.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Row_Background_Light">
            <summary>
            Gets the light background style for rows.
            Creates a slightly transparent white background.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.Row_Background_Dark_Texture">
            <summary>
            Cached texture for the dark row background to avoid repeated creation.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Row_Background_Dark">
            <summary>
            Gets the dark background style for rows.
            Creates a more opaque white background than the light version.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Row_Label">
            <summary>
            Gets the standard label style for rows.
            Creates a standard-sized label.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Row_Label_Big">
            <summary>
            Gets the larger label style for rows.
            Creates a bold, larger-sized label.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Button">
            <summary>
            Gets the style for buttons.
            Creates a button that looks like a label with no background.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.Toolbar">
            <summary>
            Gets the style for toolbar elements.
            Creates a large button suitable for toolbar usage.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.CheckBox_On_Texture">
            <summary>
            Cached texture for the checked checkbox state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.CheckBox_On">
            <summary>
            Gets the texture for checked checkboxes.
            Loads the custom "On" button texture from resources.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.CheckBox_Off_Texture">
            <summary>
            Cached texture for the unchecked checkbox state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.CheckBox_Off">
            <summary>
            Gets the texture for unchecked checkboxes.
            Loads the custom "Off" button texture from resources.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.FoldOut_In_Texture">
            <summary>
            Cached texture for the collapsed foldout state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.FoldOut_In">
            <summary>
            Gets the texture for folded-in (collapsed) foldout controls.
            Loads the custom foldout collapsed state texture from resources.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Gui.Style.DefaultStyle.FoldOut_Out_Texture">
            <summary>
            Cached texture for the expanded foldout state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Gui.Style.DefaultStyle.FoldOut_Out">
            <summary>
            Gets the texture for folded-out (expanded) foldout controls.
            Loads the custom foldout expanded state texture from resources.
            </summary>
        </member>
        <member name="T:GUPS.Editor.IO.FileHelper">
            <summary>
            Provides utilities for working with the file system.
            </summary>
        </member>
        <member name="M:GUPS.Editor.IO.FileHelper.GetAllRelativePaths(System.String)">
            <summary>
            Recursively retrieves all directories and files under the specified root path,
            and returns their paths relative to the root.
            </summary>
            <param name="_RootPath">The root directory to search.</param>
            <returns>
            A list of relative paths (to the rootPath) including all subdirectories and files.
            </returns>
            <exception cref="T:System.ArgumentException">Thrown when the rootPath is null or empty.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the specified rootPath does not exist.</exception>
        </member>
        <member name="M:GUPS.Editor.IO.FileHelper.GetRelativePath(System.String,System.String)">
            <summary>
            Converts an absolute path to a relative path based on the specified base path.
            </summary>
            <param name="_BasePath">The base path to which the path should be made relative.</param>
            <param name="_Path">The full path to convert.</param>
            <returns>The relative path from the basePath to the specified path.</returns>
        </member>
        <member name="T:GUPS.Editor.IO.File.IFileReference">
            <summary>
            Represents a reference to a file in the file system.
            This interface provides a standardized way to access file paths across the obfuscator.
            </summary>
        </member>
        <member name="P:GUPS.Editor.IO.File.IFileReference.FilePath">
            <summary>
            Gets the path to the referenced file. 
            This can be either a relative or absolute path depending on the implementation.
            </summary>
        </member>
        <member name="T:GUPS.Editor.IO.Version.IVersionAble">
            <summary>
            Make a class version able and allow to load from a different version.
            </summary>
        </member>
        <member name="P:GUPS.Editor.IO.Version.IVersionAble.Version">
            <summary>
            The version of this object.
            </summary>
        </member>
        <member name="M:GUPS.Editor.IO.Version.IVersionAble.LoadFromVersion``1(``0)">
            <summary>
            Loads data from a different version of the same object type into the current object.
            Implementations should handle version differences and migrate data appropriately.
            </summary>
            <typeparam name="TVersionAble">The type of the versioned object to load from.</typeparam>
            <param name="_VersionAble">The versioned object instance to load data from.</param>
            <returns>True if the data was successfully loaded and migrated; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.AProject">
            <summary>
            Base implementation of the <see cref="T:GUPS.Editor.Project.IProject"/> interface.
            Provides functionality for executing a sequence of steps, passing output from one step as input to the next,
            and tracking the overall execution status.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.AProject.ActiveReport">
            <summary>
            Gets or sets the active report for the project.
            This report is used for logging information, warnings, and errors during project execution.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.AProject.SomeStepFailed">
            <summary>
            Gets a value indicating whether any of the executed steps have failed.
            This flag is set to true when any step in the project execution sequence returns a failure status.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Project.AProject.lastStepOutput">
            <summary>
            Stores the output from the most recently executed step.
            This output is passed as input to the next step in the sequence.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.AProject.RunStep(GUPS.Editor.Project.Step.IStep)">
            <summary>
            Executes a single step in the project.
            Handles the complete lifecycle of the step: loading, processing, and unloading.
            Stores the step's output to pass as input to the next step.
            Updates the SomeStepFailed flag if any part of the step execution fails.
            </summary>
            <param name="_Step">The step to execute.</param>
            <returns>True if the step executed successfully; false if it failed.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Step is null.</exception>
        </member>
        <member name="T:GUPS.Editor.Project.Component.IComponent">
            <summary>
            Defines the basic contract for components in the obfuscator project system.
            Components are identifiable elements with descriptive information that can be used in various parts of the project.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Component.IComponent.Name">
            <summary>
            Gets the name of the component.
            Used for identification and display purposes.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Component.IComponent.Description">
            <summary>
            Gets the detailed description of the component.
            Provides comprehensive information about the component's purpose and functionality.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Component.IComponent.ShortDescription">
            <summary>
            Gets a brief description of the component.
            Used for tooltips, summaries, and other contexts where space is limited.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Project.DataContainer.ADataContainer">
            <summary>
            Concrete implementation of the <see cref="T:GUPS.Editor.Project.DataContainer.IDataContainer"/> interface.
            Provides a dictionary-based storage for key-value pairs with support for different data types.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.DataContainer.ADataContainer.Data">
            <summary>
            Gets the underlying dictionary that stores the container's data.
            Keys are strings and values can be any object type.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.DataContainer.ADataContainer.Has(System.String)">
            <summary>
            Determines whether the container has data associated with the specified key.
            </summary>
            <param name="_Key">The key to check for existence.</param>
            <returns>True if data exists for the specified key; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.DataContainer.ADataContainer.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Adds or updates data in the container for the specified key.
            </summary>
            <typeparam name="TDataType">The type of data to store.</typeparam>
            <param name="_Key">The key to associate with the data.</param>
            <param name="_Data">The data to store.</param>
            <param name="_Override">When true, overwrites any existing data with the same key; when false, preserves existing data.</param>
            <returns>True if the data was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.DataContainer.ADataContainer.Get``1(System.String,``0)">
            <summary>
            Retrieves data associated with the specified key.
            </summary>
            <typeparam name="TDataType">The expected type of the data.</typeparam>
            <param name="_Key">The key of the data to retrieve.</param>
            <param name="_Default">The default value to return if the key is not found or the data cannot be cast to the expected type.</param>
            <returns>The data associated with the key if found and of the correct type; otherwise, the default value.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.DataContainer.IDataContainer">
            <summary>
            Defines a generic key-value data storage container for the obfuscator project system.
            Provides methods to store, retrieve, and check for the existence of typed data values.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.DataContainer.IDataContainer.Has(System.String)">
            <summary>
            Determines whether the container has data associated with the specified key.
            </summary>
            <param name="_Key">The key to check for existence.</param>
            <returns>True if data exists for the specified key; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.DataContainer.IDataContainer.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Adds or updates data in the container for the specified key.
            </summary>
            <typeparam name="TDataType">The type of data to store.</typeparam>
            <param name="_Key">The key to associate with the data.</param>
            <param name="_Data">The data to store.</param>
            <param name="_Override">When true, overwrites any existing data with the same key; when false, preserves existing data.</param>
            <returns>True if the data was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.DataContainer.IDataContainer.Get``1(System.String,``0)">
            <summary>
            Retrieves data associated with the specified key.
            </summary>
            <typeparam name="TDataType">The expected type of the data.</typeparam>
            <param name="_Key">The key of the data to retrieve.</param>
            <param name="_Default">The default value to return if the key is not found or the data cannot be cast to the expected type.</param>
            <returns>The data associated with the key if found and of the correct type; otherwise, the default value.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.IProject">
            <summary>
            Defines the contract for project execution in the obfuscator.
            A project manages a sequence of steps, executing them in order and passing outputs from one step as inputs to the next.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.IProject.ActiveReport">
            <summary>
            Gets the active report for the project.
            This report is used for logging information, warnings, and errors during project execution.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.IProject.SomeStepFailed">
            <summary>
            Gets a value indicating whether any of the executed steps have failed.
            This flag is set to true when any step in the project execution sequence returns a failure status.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.IProject.RunStep(GUPS.Editor.Project.Step.IStep)">
            <summary>
            Executes a single step in the project.
            Handles the complete lifecycle of the step: loading, processing, and unloading.
            </summary>
            <param name="_Step">The step to execute.</param>
            <returns>True if the step executed successfully; false if it failed.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Pipeline.APipeline">
            <summary>
            Abstract base implementation of the <see cref="T:GUPS.Editor.Project.Pipeline.IPipeline"/> interface.
            Provides common functionality for managing pipeline components and executing the pipeline process.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.APipeline.#ctor(GUPS.Editor.Project.Step.IStep)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Project.Pipeline.APipeline"/> class.
            </summary>
            <param name="_Step">The parent step that owns this pipeline.</param>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.APipeline.Step">
            <summary>
            Gets the parent step that owns this pipeline.
            The pipeline executes as part of this step's processing.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.APipeline.ComponentList">
            <summary>
            Gets the list of components that make up this pipeline.
            Components are executed in sequence during pipeline processing.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.APipeline.GetPipelineComponents``1">
            <summary>
            Gets all pipeline components of a specific type.
            </summary>
            <typeparam name="TPipelineComponent">The type of components to retrieve.</typeparam>
            <returns>A list of pipeline components that are of the specified type or inherit from it.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.APipeline.AddPipelineComponent(GUPS.Editor.Project.Pipeline.Component.IPipelineComponent)">
            <summary>
            Adds a component to the pipeline.
            Associates the component with this pipeline and adds it to the component list.
            </summary>
            <param name="_PipelineComponent">The component to add to the pipeline.</param>
            <returns>True if the component was successfully added; false if the component list is null.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.APipeline.ProcessPipeline(GUPS.Editor.Project.Step.IStepInput,GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Processes the pipeline by executing all components in sequence.
            The processing is divided into three phases: pre-process, custom process, and post-process.
            </summary>
            <param name="_StepInput">The input data for the pipeline processing.</param>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if the pipeline processed successfully; false if any component or phase failed.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.APipeline.OnProcessPipeline">
            <summary>
            Performs the custom processing logic for this pipeline.
            This method is called between the pre-process and post-process phases.
            Derived classes must implement this method to provide pipeline-specific processing.
            </summary>
            <returns>True if the custom processing succeeded; false if it failed.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Pipeline.Component.APipelineComponent">
            <summary>
            Abstract base implementation of the <see cref="T:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent"/> interface.
            Provides common functionality for pipeline components and default implementations of interface methods.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.Pipeline">
            <summary>
            Gets the pipeline that this component belongs to.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.AssignToPipeline(GUPS.Editor.Project.Pipeline.IPipeline)">
            <summary>
            Associates this component with a pipeline.
            Called when the component is added to a pipeline.
            </summary>
            <param name="_Pipeline">The pipeline to associate this component with.</param>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.Name">
            <summary>
            Gets the name of the component.
            Used for identification and display purposes.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.Description">
            <summary>
            Gets the detailed description of the component.
            Provides comprehensive information about the component's purpose and functionality.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.ShortDescription">
            <summary>
            Gets a brief description of the component.
            Used for tooltips, summaries, and other contexts where space is limited.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.IsActive">
            <summary>
            Gets a value indicating whether this component is active and should be processed.
            By default, returns true. Override this property to implement conditional activation.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Called at the beginning of the pipeline process before any other processing occurs.
            Override this method to read data from the step input and prepare for processing.
            Default implementation returns true without performing any actions.
            </summary>
            <param name="_StepInput">The input data from the previous step.</param>
            <returns>True if pre-processing succeeded; false if it failed.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.OnPostPipelineProcess(GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Called at the end of the pipeline process after all other processing is complete.
            Override this method to write data to the step output for the next step to use.
            Default implementation returns true without performing any actions.
            </summary>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if post-processing succeeded; false if it failed.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.APipelineComponent.ToString">
            <summary>
            Returns a string representation of this component.
            Uses the component's name as its string representation.
            </summary>
            <returns>The name of the component.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent">
            <summary>
            Defines a component that can be executed as part of a pipeline process.
            Pipeline components handle specific processing tasks and can be combined to create complex workflows.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent.Pipeline">
            <summary>
            Gets the pipeline that this component belongs to.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent.AssignToPipeline(GUPS.Editor.Project.Pipeline.IPipeline)">
            <summary>
            Associates this component with a pipeline.
            Called when the component is added to a pipeline.
            </summary>
            <param name="_Pipeline">The pipeline to associate this component with.</param>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent.IsActive">
            <summary>
            Gets a value indicating whether this component is active and should be processed.
            Inactive components are skipped during pipeline processing.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Called at the beginning of the pipeline process before any other processing occurs.
            Use this method to read data from the step input and prepare for processing.
            </summary>
            <param name="_StepInput">The input data from the previous step.</param>
            <returns>True if pre-processing succeeded; false if it failed.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.Component.IPipelineComponent.OnPostPipelineProcess(GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Called at the end of the pipeline process after all other processing is complete.
            Use this method to write data to the step output for the next step to use.
            </summary>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if post-processing succeeded; false if it failed.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Pipeline.IPipeline">
            <summary>
            Defines a processing pipeline that executes a series of components in sequence.
            A pipeline takes input data, processes it through components, and produces output.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.IPipeline.Step">
            <summary>
            Gets the parent step that owns this pipeline.
            The pipeline executes as part of this step's processing.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Pipeline.IPipeline.ComponentList">
            <summary>
            Gets the list of components that make up this pipeline.
            Components are executed in sequence during pipeline processing.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Pipeline.IPipeline.ProcessPipeline(GUPS.Editor.Project.Step.IStepInput,GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Processes the pipeline by executing all components in sequence.
            Components can modify the input and output data during processing.
            </summary>
            <param name="_StepInput">The input data for the pipeline processing.</param>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if the pipeline processed successfully; false if any component failed.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Step.AStep`2">
            <summary>
            Abstract base implementation of the <see cref="T:GUPS.Editor.Project.Step.IStep"/> interface.
            Provides common functionality for step processing with strongly-typed input and output.
            </summary>
            <typeparam name="TStepInput">The specific type of input data for this step.</typeparam>
            <typeparam name="TStepOutput">The specific type of output data this step produces.</typeparam>
        </member>
        <member name="P:GUPS.Editor.Project.Step.AStep`2.Name">
            <summary>
            Gets the name of this step.
            Used for identification and logging purposes.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.AStep`2.Settings">
            <summary>
            Gets or sets the settings associated with this step.
            Contains configuration values that control the step's behavior.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.AStep`2.Pipeline">
            <summary>
            Gets or sets the pipeline that this step executes.
            The pipeline contains components that perform the actual processing work.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.AStep`2.DataContainer">
            <summary>
            Gets or sets the data container shared between this step and its pipeline.
            Provides storage for data that needs to be accessible across components.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.Load">
            <summary>
            Loads and initializes the step.
            Checks if the step is already loaded, and if not, calls OnLoad to perform the actual loading.
            </summary>
            <returns>True if the step loaded successfully or was already loaded; false otherwise.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.OnLoad">
            <summary>
            Performs the actual loading and initialization of the step.
            Derived classes must implement this method to set up their specific resources.
            </summary>
            <returns>True if the step loaded successfully; false otherwise.</returns>
        </member>
        <member name="P:GUPS.Editor.Project.Step.AStep`2.GotLoaded">
            <summary>
            Gets a value indicating whether this step has been successfully loaded.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.GUPS#Editor#Project#Step#IStep#Process(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Explicit interface implementation of the Process method.
            Delegates to the strongly-typed Process method.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
            <returns>The output data to be passed to the next step.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.PreProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Performs pre-processing operations before the pipeline is executed.
            Override this method to prepare data or resources needed by the pipeline.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.Process(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Processes the step using the provided input data.
            Creates a new output instance, executes the pipeline, and handles pre/post processing.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
            <returns>The strongly-typed output data to be passed to the next step.</returns>
            <exception cref="T:System.Exception">Thrown when the Pipeline property is null.</exception>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.PostProcess(`1)">
            <summary>
            Performs post-processing operations after the pipeline has executed.
            Override this method to modify the output or perform cleanup operations.
            </summary>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.Unload">
            <summary>
            Unloads the step and releases any resources.
            Calls OnUnload to perform the actual unloading and updates the GotLoaded flag.
            </summary>
            <returns>True if the step was unloaded successfully; false otherwise.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Step.AStep`2.OnUnload">
            <summary>
            Performs the actual unloading and resource cleanup for the step.
            Derived classes must implement this method to release their specific resources.
            </summary>
            <returns>True if the step unloaded successfully; false otherwise.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Step.IStep">
            <summary>
            Defines a processing step within a project.
            Steps are the fundamental units of work in the obfuscator, each responsible for a specific phase of processing.
            Each step has its own pipeline of components that perform the actual work.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.IStep.Name">
            <summary>
            Gets the name of this step.
            Used for identification and logging purposes.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.IStep.Settings">
            <summary>
            Gets the settings associated with this step.
            Contains configuration values that control the step's behavior.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.IStep.Pipeline">
            <summary>
            Gets the pipeline that this step executes.
            The pipeline contains components that perform the actual processing work.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.IStep.DataContainer">
            <summary>
            Gets the data container shared between this step and its pipeline.
            Provides storage for data that needs to be accessible across components.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Step.IStep.Load">
            <summary>
            Loads and initializes the step.
            Prepares any resources needed for processing.
            </summary>
            <returns>True if the step loaded successfully; false otherwise.</returns>
        </member>
        <member name="P:GUPS.Editor.Project.Step.IStep.GotLoaded">
            <summary>
            Gets a value indicating whether this step has been successfully loaded.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Project.Step.IStep.Process(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Processes the step using the provided input data.
            Executes the step's pipeline and produces output data.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
            <returns>The output data to be passed to the next step.</returns>
        </member>
        <member name="M:GUPS.Editor.Project.Step.IStep.Unload">
            <summary>
            Unloads the step and releases any resources.
            Called after processing is complete.
            </summary>
            <returns>True if the step was unloaded successfully; false otherwise.</returns>
        </member>
        <member name="T:GUPS.Editor.Project.Step.IStepInput">
            <summary>
            Defines the input data for a step in the project processing pipeline.
            Extends <see cref="T:GUPS.Editor.Project.DataContainer.IDataContainer"/> to provide key-value data storage capabilities.
            Step inputs contain data passed from previous steps that the current step can use.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Project.Step.IStepOutput">
            <summary>
            Defines the output data from a step in the project processing pipeline.
            Extends <see cref="T:GUPS.Editor.Project.Step.IStepInput"/> because each step's output becomes the input for the next step.
            Adds failure tracking to the data container functionality.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Project.Step.IStepOutput.Failed">
            <summary>
            Gets or sets a value indicating whether the step processing failed.
            When set to true, indicates that the step encountered an error and could not complete successfully.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Report.AReport">
            <summary>
            Abstract base class for report generation and logging.
            Provides functionality to record, format, and save log messages with different severity levels.
            Implements <see cref="T:GUPS.Editor.IO.File.IFileReference"/> to support saving reports to files.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Report.AReport.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Report.AReport"/> class.
            </summary>
            <param name="_ReportName">The name of the report.</param>
            <param name="_ReportDescription">A description of the report's purpose.</param>
            <param name="_FilePath">The file path where the report will be saved.</param>
        </member>
        <member name="P:GUPS.Editor.Report.AReport.Name">
            <summary>
            Gets the name of the report.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Report.AReport.Description">
            <summary>
            Gets the description of the report's purpose.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Report.AReport.ReportLevel">
            <summary>
            Gets the minimum severity level for messages to be included in the report.
            Messages with lower severity levels will be ignored.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Report.AReport.Header">
            <summary>
            Gets the header text that appears at the beginning of each log entry.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Report.AReport.SetHeader(System.String)">
            <summary>
            Sets the header text that appears at the beginning of each log entry.
            </summary>
            <param name="_Header">The header text to set.</param>
        </member>
        <member name="P:GUPS.Editor.Report.AReport.FilePath">
            <summary>
            Gets the file path where the report will be saved.
            Implements the <see cref="P:GUPS.Editor.IO.File.IFileReference.FilePath"/> property.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Report.AReport.reportStringBuilder">
            <summary>
            StringBuilder used to accumulate report entries before saving to file.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Report.AReport.GetReportLinePrefix">
            <summary>
            Gets the prefix for each report line, which includes the header in square brackets.
            </summary>
            <returns>A formatted string containing the header prefix.</returns>
        </member>
        <member name="M:GUPS.Editor.Report.AReport.Append(GUPS.Editor.Report.EReportLevel,System.String,System.Boolean)">
            <summary>
            Appends a log message to the report with the specified severity level.
            </summary>
            <param name="_ReportLevel">The severity level of the message.</param>
            <param name="_Text">The message text to append.</param>
            <param name="_ForceDisplay">When true, forces the message to be displayed in the Unity console regardless of severity level.</param>
        </member>
        <member name="M:GUPS.Editor.Report.AReport.Append(GUPS.Editor.Report.EReportLevel,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Appends a log message with a list of items to the report.
            </summary>
            <param name="_ReportLevel">The severity level of the message.</param>
            <param name="_Text">The message text to append.</param>
            <param name="_ItemList">A list of items to be included in the message, each on a new line.</param>
            <param name="_ForceDisplay">When true, forces the message to be displayed in the Unity console regardless of severity level.</param>
        </member>
        <member name="M:GUPS.Editor.Report.AReport.SaveToFile(System.Boolean)">
            <summary>
            Saves the accumulated report content to the specified file.
            </summary>
            <param name="_Append">When true, appends to the existing file; when false, overwrites the file.</param>
        </member>
        <member name="T:GUPS.Editor.Report.EReportLevel">
            <summary>
            Defines severity levels for report messages.
            Higher numeric values represent more severe issues.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Report.EReportLevel.Debug">
            <summary>
            Debug-level information, typically only relevant during development.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Report.EReportLevel.Info">
            <summary>
            General information that may be useful for understanding system operation.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Report.EReportLevel.Warning">
            <summary>
            Potential issues that don't prevent operation but may indicate problems.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Report.EReportLevel.Error">
            <summary>
            Critical issues that prevent proper operation or indicate failures.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Report.ProjectReport">
            <summary>
            A specialized report implementation for project-specific logging.
            Includes company and product information in the log entries.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Report.ProjectReport.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Report.ProjectReport"/> class.
            </summary>
            <param name="_Company">The company name associated with the project.</param>
            <param name="_Product">The product name associated with the project.</param>
            <param name="_ReportName">The name of the report.</param>
            <param name="_ReportDescription">A description of the report's purpose.</param>
            <param name="_FilePath">The file path where the report will be saved.</param>
        </member>
        <member name="P:GUPS.Editor.Report.ProjectReport.Company">
            <summary>
            Gets the company name associated with the project.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Report.ProjectReport.Product">
            <summary>
            Gets the product name associated with the project.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Report.ProjectReport.GetReportLinePrefix">
            <summary>
            Gets the prefix for each report line, which includes company and product information.
            Overrides the base implementation to include company and product in the prefix.
            </summary>
            <returns>A formatted string containing the company, product, and header prefix.</returns>
        </member>
        <member name="T:GUPS.Editor.Settings.File.ASettings">
            <summary>
            Abstract base class for JSON-serializable settings.
            Provides functionality to store and retrieve settings as key-value pairs with type information.
            Supports various data types including strings, booleans, integers, enums, and string arrays.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Settings.File.ASettings"/> class.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.ParseToBool(System.String)">
            <summary>
            Helper: Parse String to bool.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.ParseToString(System.Boolean)">
            <summary>
            Helper: Parse bool to String.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.ParseToInt(System.String)">
            <summary>
            Helper: Parse String to Int32.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.ParseToString(System.Int32)">
            <summary>
            Helper: Parse Int32 to String.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Editor.Settings.File.ASettings.settingsElement_Array">
            <summary>
            Array of settings elements that store key-value pairs with type information.
            This is the primary storage for all settings managed by this class.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Contains_SettingElement(System.String)">
            <summary>
            Returns true if the SettingElementArray contains an element with _Key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Get_SettingElement(System.String)">
            <summary>
            Returns the SettingElement belonging to _Key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Add_SettingElement(GUPS.Editor.Settings.File.SettingsElement)">
            <summary>
            Does not check if the element is already added. Just appends it to the array!
            </summary>
            <param name="_SettingsElement"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.String)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.Boolean)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.Int32)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.Enum)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.String[])">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Values"></param>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Get_Setting_AsString(System.String,System.String)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Get_Setting_AsBool(System.String,System.Boolean)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Get_Setting_AsInt(System.String,System.Int32)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Get_Setting_AsEnum``1(System.String,``0)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ASettings.Get_Setting_AsArray(System.String)">
            <summary>
            Get a setting. If setting with _Key does not exist, an empty array will be returned.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Editor.Settings.File.ComponentSettings">
            <summary>
            Settings container for a component in the obfuscator.
            Provides storage for component-specific configuration values.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ComponentSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Settings.File.ComponentSettings"/> class.
            Creates settings with no name.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.ComponentSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Settings.File.ComponentSettings"/> class.
            </summary>
            <param name="_Settings_Name">The name to identify these component settings.</param>
        </member>
        <member name="P:GUPS.Editor.Settings.File.ComponentSettings.Settings_Name">
            <summary>
            Gets or sets the name that identifies these component settings.
            Used to distinguish between different component settings in a project.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Settings.File.ESettingsElementType">
            <summary>
            Defines the data types that can be stored in a settings element.
            Used to determine how to serialize, deserialize, and interpret setting values.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.File.ESettingsElementType.String">
            <summary>
            String value type.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.File.ESettingsElementType.Bool">
            <summary>
            Boolean value type (true/false).
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.File.ESettingsElementType.Number">
            <summary>
            Numeric value type (integer).
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.File.ESettingsElementType.Enum">
            <summary>
            Enumeration value type.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.File.ESettingsElementType.Array_String">
            <summary>
            Array of string values.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Settings.File.SettingsElement">
            <summary>
            Represents a single key-value setting within an <see cref="T:GUPS.Editor.Settings.File.ASettings"/> instance.
            Stores the setting's key, value, and type information.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.SettingsElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Settings.File.SettingsElement"/> class.
            Creates an empty settings element.
            </summary>
        </member>
        <member name="M:GUPS.Editor.Settings.File.SettingsElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Settings.File.SettingsElement"/> class with a string value.
            </summary>
            <param name="_Key">The key that identifies this setting.</param>
            <param name="_Value">The string value of the setting.</param>
        </member>
        <member name="M:GUPS.Editor.Settings.File.SettingsElement.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Editor.Settings.File.SettingsElement"/> class with an array of string values.
            </summary>
            <param name="_Key">The key that identifies this setting.</param>
            <param name="_Values">The array of string values for the setting.</param>
        </member>
        <member name="P:GUPS.Editor.Settings.File.SettingsElement.Type">
            <summary>
            Gets or sets the data type of this setting element.
            Determines how the value should be interpreted and serialized.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.File.SettingsElement.Key">
            <summary>
            Gets or sets the key that uniquely identifies this setting within its parent settings object.
            Used to retrieve the setting value.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.File.SettingsElement.Value">
            <summary>
            Gets or sets the value of this setting as a string.
            For non-string types (bool, number, enum), this contains the string representation of the value.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.File.SettingsElement.Values">
            <summary>
            Gets or sets the array of string values for this setting.
            Only used when Type is Array_String.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Settings.File.ISettingsOwner">
            <summary>
            Interface for classes that own and manage settings.
            Implementing classes are responsible for providing access to their settings instance.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.File.ISettingsOwner.Settings">
            <summary>
            Gets the settings instance associated with this owner.
            The settings contain configuration values that control the behavior of the owner.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Settings.Unity.Build.ABuildSettings">
            <summary>
            Abstract base class for Unity build settings.
            Provides common properties and configuration options for building Unity projects.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.Unity.Build.ABuildSettings.BuildTarget">
            <summary>
            Gets or sets the target platform for the build.
            Specifies the platform (e.g., Windows, Android, iOS) that the build will target.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.Unity.Build.ABuildSettings.BuildTargetGroup">
            <summary>
            Gets or sets the target platform group for the build.
            Specifies the platform group (e.g., Standalone, Mobile) that the build will target.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.Unity.Build.ABuildSettings.UnityBuildReport">
            <summary>
            Gets or sets the active Unity build report.
            Contains detailed information about the build process and results.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.Unity.Build.ABuildSettings.IsIL2CPPBuild">
            <summary>
            Gets or sets a value indicating whether the build uses IL2CPP scripting backend.
            When true, the build will use IL2CPP; when false, it will use Mono.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.Unity.Build.ABuildSettings.IsMonoBuild">
            <summary>
            Gets or sets a value indicating whether the build uses Mono scripting backend.
            This is the inverse of IsIL2CPPBuild property.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.Unity.Build.ABuildSettings.Compression">
            <summary>
            Gets or sets the compression type to use for the build.
            Determines how assets and data are compressed in the final build.
            </summary>
        </member>
        <member name="P:GUPS.Editor.Settings.Unity.Build.ABuildSettings.BuildIntoProject">
            <summary>
            Gets or sets a value indicating whether to build into a project rather than a standalone executable.
            When true, builds to an IDE project (e.g., Xcode for macOS, Visual Studio solution for Windows/Linux).
            </summary>
        </member>
        <member name="T:GUPS.Editor.Settings.Unity.Build.CompressionType">
            <summary>
            Defines the supported compression types available in Unity builds.
            Different compression types offer trade-offs between compression ratio, decompression speed, and build time.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.Unity.Build.CompressionType.None">
            <summary>
            No compression is applied.
            Results in faster build times but larger file sizes.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.Unity.Build.CompressionType.Lzma">
            <summary>
            LZMA (Lempel-Ziv-Markov chain Algorithm) compression.
            Provides high compression ratios but slower decompression speed.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.Unity.Build.CompressionType.Lz4">
            <summary>
            LZ4 compression.
            Provides fast compression and decompression with moderate compression ratios.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.Unity.Build.CompressionType.Lz4HC">
            <summary>
            LZ4HC (High Compression) variant.
            Better compression ratio than standard LZ4 but slower compression speed.
            </summary>
        </member>
        <member name="F:GUPS.Editor.Settings.Unity.Build.CompressionType.Lzham">
            <summary>
            LZHAM compression.
            Similar compression ratio to LZMA but with faster decompression.
            </summary>
        </member>
        <member name="T:GUPS.Editor.Settings.Unity.Editor.AEditorSettings">
            <summary>
            Abstract base class for Unity editor-specific settings.
            Provides a foundation for storing and managing configuration options that affect the Unity editor's behavior.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.IO.PathHelper">
            <summary>
            Internal path helper for the obfuscator.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_Project_Directory">
            <summary>
            Returns the Unity ObfuscationProject Path (e.g., C:\XYZ\MyUnityProject\)
            </summary>
            <returns>The full path to the Unity project directory.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_GUPS_Directory">
            <summary>
            Returns the full path to the GUPS directory.
            </summary>
            <returns>The full path to the GUPS directory within the Unity project.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Directory">
            <summary>
            Returns the full path to the GUPS Obfuscator directory. 
            </summary>
            <returns>The full path to the GUPS Obfuscator directory.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Editor_Directory">
            <summary>
            Returns the full path to the GUPS Obfuscator Editor directory. 
            </summary>
            <returns>The full path to the GUPS Obfuscator Editor directory.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Editor_Temp_Directory">
            <summary>
            Returns the full path to the GUPS Obfuscator Editor Temp directory. 
            </summary>
            <returns>The full path to the GUPS Obfuscator Editor Temp directory.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Log_Directory">
            <summary>
            Returns the full path to the GUPS Obfuscator Log directory. 
            </summary>
            <returns>The full path to the GUPS Obfuscator Log directory.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Settings_Directory">
            <summary>
            Returns the full path to the GUPS Obfuscator Settings directory. 
            </summary>
            <returns>The full path to the GUPS Obfuscator Settings directory.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.DotNet.Helper.AssemblyHelper">
            <summary>
            Helper class for working with .NET assemblies in the obfuscator.
            Provides utility methods to safely retrieve types from assemblies even when some types cannot be loaded.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Helper.AssemblyHelper.GetLoadableTypes(System.Reflection.Assembly)">
            <summary>
            Retrieves all types that can be loaded from the specified assembly.
            Safely handles ReflectionTypeLoadException by filtering out null types.
            </summary>
            <param name="_Assembly">The assembly to retrieve types from.</param>
            <returns>An enumerable collection of all loadable types in the assembly.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Assembly is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Helper.AssemblyHelper.GetLoadableTypes">
            <summary>
            Retrieves all types that can be loaded from all assemblies in the current application domain.
            Combines types from all loaded assemblies into a single collection.
            </summary>
            <returns>An enumerable collection of all loadable types across all assemblies in the current domain.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension">
            <summary>
            Provides extension methods for the <see cref="T:System.Type"/> class.
            These methods enhance the functionality of the Type class with additional checks and operations
            commonly needed during obfuscation processing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.IsArrayOrList(System.Type)">
            <summary>
            Determines whether the specified type is an array or a List&lt;T&gt;.
            </summary>
            <param name="_Type">The type to check.</param>
            <returns>True if the type is an array or a List&lt;T&gt;; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.GetArrayOrListElementType(System.Type)">
            <summary>
            Gets the element type of an array or List&lt;T&gt;.
            </summary>
            <param name="_Type">The array or list type to get the element type from.</param>
            <returns>The element type if the input is an array or List&lt;T&gt;; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.IsEnumerable(System.Type)">
            <summary>
            Determines whether the specified type implements IEnumerable.
            </summary>
            <param name="_Type">The type to check.</param>
            <returns>True if the type implements IEnumerable; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.IsCollection(System.Type)">
            <summary>
            Determines whether the specified type implements ICollection.
            </summary>
            <param name="_Type">The type to check.</param>
            <returns>True if the type implements ICollection; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.GetAllFieldsInHierarchy(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Extension method that gets all fields from a type and its base types, including private fields from parent classes.
            </summary>
            <param name="_Type">The type to get fields from</param>
            <param name="bindingFlags">Binding flags to apply (Instance/Static, Public/NonPublic)</param>
            <returns>Array containing all fields throughout the inheritance hierarchy</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MemberInfoHelper">
            <summary>
            Helper class for working with member information in reflection.
            Provides utility methods to extract and manipulate member names and other metadata.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MemberInfoHelper.GetMemberName(System.String)">
            <summary>
            Extracts the simple member name from a fully qualified member name.
            Handles methods with parameters, generic types, and removes any extraneous spaces.
            </summary>
            <param name="_FullName">The fully qualified member name (e.g., "Namespace.ClassName.MemberName").</param>
            <returns>The simple member name without namespace and class prefixes.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _FullName is null.</exception>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MethodInfoHelper">
            <summary>
            Helper class for working with method information and signatures.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MethodInfoHelper.RemoveMethodParameter(System.String)">
            <summary>
            Removes the parameter list from a method name if present.
            </summary>
            <param name="_Name">The method name, possibly with parameters (e.g., "MyMethod(int, string)").</param>
            <returns>The method name without parameters (e.g., "MyMethod").</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MethodInfoHelper.TryGetMethodParameterStartIndex(System.String,System.Int32@)">
            <summary>
            Attempts to find the starting index of the parameter list in a method name.
            </summary>
            <param name="_Name">The method name to check for parameters.</param>
            <param name="_ParameterIndex">When this method returns, contains the index of the first character after the opening parenthesis if found; otherwise, -1.</param>
            <returns>True if the method name contains parameters (has an opening parenthesis); otherwise, false.</returns>
            <example>
            For "MyMethod(int, string)", returns true and sets _ParameterIndex to 9 (the position after the opening parenthesis).
            </example>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper">
            <summary>
            Helper class for working with Type information in reflection.
            Provides utility methods for manipulating type names and accessing type members.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper.RemoveMemberName(System.String)">
            <summary>
            Removes the member name and any parameters from a fully qualified member name.
            </summary>
            <param name="_Name">The fully qualified member name (e.g., "System.String MyNamespace.MyType.MyMethod(...)").</param>
            <returns>The type name without the member name (e.g., "System.String MyNamespace.MyType").</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper.TryGetMemberNameStartIndex(System.String,System.Int32@)">
            <summary>
            Attempts to find the starting index of a member name in a fully qualified name.
            </summary>
            <param name="_Name">The fully qualified name to check.</param>
            <param name="_MemberIndex">When this method returns, contains the index of the first character after the last dot if found; otherwise, -1.</param>
            <returns>True if the name contains a member (has a dot separator); otherwise, false.</returns>
            <example>
            For "System.String MyNamespace.MyType.MyMethod(...)", returns true and sets _MemberIndex to the position after the last dot.
            </example>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper.GetAllFieldsInHierarchy(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all fields from a type and its base types, including private fields from parent classes.
            </summary>
            <param name="type">The type to get fields from</param>
            <param name="bindingFlags">Binding flags to apply (Instance/Static, Public/NonPublic)</param>
            <returns>Array containing all fields throughout the inheritance hierarchy</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo">
            <summary>
            Represents a loaded assembly and provides access to its metadata.
            Contains the Mono.Cecil AssemblyDefinition and provides methods to work with its types.
            Includes caching and sorting functionality for efficient type processing during obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.AssemblyLoadInfo">
            <summary>
            Gets or sets the associated AssemblyLoadInfo.
            Contains configuration information about how to process the assembly during obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.AssemblyWriterParameters">
            <summary>
            Gets the parameters used when writing the assembly back to disk.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.AssemblyDefinition">
            <summary>
            Gets or sets the Mono.Cecil AssemblyDefinition that represents the loaded assembly.
            This is the core object that provides access to all assembly metadata.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.SortTypes(System.Collections.Generic.IEnumerable{GUPS.Mono.Cecil.TypeDefinition})">
            <summary>
            Sorts a list of TypeDefinitions in an order optimized for obfuscation processing.
            Ensures that nested types are processed before their containing types.
            </summary>
            <param name="_UnsortedList">The unsorted collection of TypeDefinitions.</param>
            <returns>A sorted list of TypeDefinitions where nested types appear before their containing types.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.RecursiveSortTypes(GUPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{GUPS.Mono.Cecil.TypeDefinition})">
            <summary>
            Recursively adds types to the sorted list, ensuring nested types are added before their containing types.
            Skips special types like &lt;Module&gt; and &lt;PrivateImplementationDetails&gt;.
            </summary>
            <param name="_CurrentType">The current type being processed.</param>
            <param name="_SortedList">The list to add the sorted types to.</param>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.cachedTypes">
            <summary>
            Cached collection of sorted types in this assembly.
            Used to avoid repeatedly retrieving and sorting types.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.ResortTypes">
            <summary>
            Retrieves all types from the assembly, sorts them, and updates the cache.
            Called when the type collection needs to be refreshed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.GetAllTypeDefinitions">
            <summary>
            Gets all TypeDefinitions in this assembly in a sorted order optimized for obfuscation.
            Results are cached for performance after the first call.
            </summary>
            <returns>A sorted collection of all TypeDefinitions in the assembly.</returns>
            <exception cref="T:System.Exception">Thrown when there is an error retrieving the type definitions.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.HasTypeDefinition(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines whether this assembly contains the specified TypeDefinition.
            </summary>
            <param name="_TypeDefinition">The TypeDefinition to check for.</param>
            <returns>True if the assembly contains the specified type; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.HasTypeDefinition(System.String,System.String)">
            <summary>
            Determines whether this assembly contains a type with the specified namespace and name.
            </summary>
            <param name="_Namespace">The namespace of the type to check for.</param>
            <param name="_Name">The name of the type to check for.</param>
            <returns>True if the assembly contains a type with the specified namespace and name; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.AddTypeDefinition(GUPS.Mono.Cecil.ModuleDefinition,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Adds a TypeDefinition to the specified ModuleDefinition and refreshes the type cache.
            </summary>
            <param name="_ModuleDefinition">The module to add the type to.</param>
            <param name="_TypeDefinition">The type to add to the module.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.Name">
            <summary>
            Gets the name of the assembly.
            This is the simple name without version, culture, or public key information.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.Equals(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Determines whether the specified AssemblyInfo is equal to the current AssemblyInfo.
            </summary>
            <param name="_Other">The AssemblyInfo to compare with the current AssemblyInfo.</param>
            <returns>true if the specified AssemblyInfo is equal to the current AssemblyInfo; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current AssemblyInfo.
            </summary>
            <param name="obj">The object to compare with the current AssemblyInfo.</param>
            <returns>true if the specified object is equal to the current AssemblyInfo; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.op_Equality(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Determines whether two AssemblyInfo instances are equal.
            </summary>
            <param name="a">The first AssemblyInfo to compare.</param>
            <param name="b">The second AssemblyInfo to compare.</param>
            <returns>true if the specified AssemblyInfo instances are equal; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.op_Inequality(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Determines whether two AssemblyInfo instances are not equal.
            </summary>
            <param name="a">The first AssemblyInfo to compare.</param>
            <param name="b">The second AssemblyInfo to compare.</param>
            <returns>true if the specified AssemblyInfo instances are not equal; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyInfo.GetHashCode">
            <summary>
            Returns the hash code for this AssemblyInfo.
            </summary>
            <returns>A hash code for the current AssemblyInfo.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo">
            <summary>
            Contains configuration information for loading and processing assemblies.
            Specifies how an assembly should be handled during the obfuscation process.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo"/> class with default settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.FilePath">
            <summary>
            Gets or sets the full file path to the assembly on disk.
            Used to locate and load the assembly for processing.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.IsUnityAssembly">
            <summary>
            Gets or sets a value indicating whether this is an assembly built by Unity.
            Unity-built assemblies don't require backup during the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.IsThirdPartyAssembly">
            <summary>
            Gets a value indicating whether this is a third-party assembly imported into Unity.
            Third-party assemblies require backup during the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.IsHelperAssembly">
            <summary>
            Gets or sets a value indicating whether this is a helper assembly.
            Helper assemblies are not obfuscated but are referenced and may be used by obfuscation components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.AssemblyReadParameters">
            <summary>
            Gets the assembly read parameters.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.Obfuscate">
            <summary>
            Gets or sets a value indicating whether this assembly should be obfuscated.
            When true, the assembly will undergo the obfuscation process.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.AssemblyResolver">
            <summary>
            Custom assembly resolver for the obfuscator.
            Extends the Mono.Cecil DefaultAssemblyResolver to provide additional assembly resolution capabilities.
            Used to locate and load referenced assemblies during the obfuscation process.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.AssemblyResolver.RegisterAssembly(GUPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Registers an assembly with the resolver to make it available for resolution.
            This allows the resolver to find the assembly when it's referenced by other assemblies.
            </summary>
            <param name="_Assembly">The assembly to register with the resolver.</param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper">
            <summary>
            Helper class for working with Mono.Cecil assemblies in the obfuscator.
            Provides functionality for loading, saving, and analyzing assemblies,
            as well as locating assemblies in the Unity project structure.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.FindAssemblyLocation(System.String)">
            <summary>
            Locates an assembly file in the Unity project structure.
            Checks if the provided path is a direct file path, then searches in common Unity build directories.
            </summary>
            <param name="_Assembly">The assembly name or path to locate.</param>
            <returns>The full file path to the assembly if found; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetLocationInTempStagingArea(System.String,System.String@)">
            <summary>
            Attempts to locate an assembly file in the Unity Temp/StagingArea/Data/Managed directory.
            </summary>
            <param name="_Assembly">The assembly name to locate.</param>
            <param name="_AssemblyLocation">When this method returns, contains the full path to the assembly if found; otherwise, null.</param>
            <returns>True if the assembly was found in the staging area; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetLocationInBeeStagingArea(System.String,System.String@)">
            <summary>
            Attempts to locate an assembly file in the Unity Library/Bee/PlayerScriptAssemblies directory.
            </summary>
            <param name="_Assembly">The assembly name to locate.</param>
            <param name="_AssemblyLocation">When this method returns, contains the full path to the assembly if found; otherwise, null.</param>
            <returns>True if the assembly was found in the Bee staging area; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetReaderParameters(System.String)">
            <summary>
            Creates appropriate ReaderParameters for loading an assembly.
            Detects and configures symbol reading based on the presence of MDB or PDB files.
            </summary>
            <param name="_AssemblyFilePath">The file path of the assembly to create parameters for.</param>
            <returns>A ReaderParameters object configured for the specified assembly.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetWriterParameters(System.String)">
            <summary>
            Creates appropriate WriterParameters for saving an assembly.
            Detects and configures symbol writing based on the presence of MDB or PDB files.
            </summary>
            <param name="_AssemblyFilePath">The file path of the assembly to create parameters for.</param>
            <returns>A WriterParameters object configured for the specified assembly.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.LoadAssembly(System.String,GUPS.Obfuscator.Editor.Assembly.AssemblyResolver,GUPS.Obfuscator.Editor.Assembly.Mono.Params.AssemblyReaderParameters,UnityEditor.BuildTarget)">
            <summary>
            Loads an assembly from disk into a Mono.Cecil AssemblyDefinition object.
            Configures appropriate reader parameters and registers the loaded assembly with the resolver.
            </summary>
            <param name="_AssemblyFilePath">The file path of the assembly to load.</param>
            <param name="_AssemblyResolver">The resolver to use for resolving assembly references.</param>
            <param name="_AssemblyReaderParameters">Parameters for reading the assembly.</param>
            <param name="_BuildTarget">The Unity build target, which may affect how the assembly is loaded.</param>
            <returns>The loaded AssemblyDefinition.</returns>
            <exception cref="T:System.Exception">Thrown when the assembly cannot be found or loaded.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.SaveAssembly(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Params.AssemblyWriterParameters,System.String)">
            <summary>
            Saves an AssemblyDefinition to disk.
            Attempts to save with appropriate symbol writer parameters, falling back to basic parameters if that fails.
            </summary>
            <param name="_AssemblyDefinition">The AssemblyDefinition to save.</param>
            <param name="_AssemblyWriterParameters">Parameters for writing the assembly.</param>
            <param name="_AssemblyFilePath">The file path where the assembly should be saved.</param>
            <returns>True if the assembly was saved successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.RemoveAssemblyFromBuild(System.String)">
            <summary>
            Removes an assembly from the Unity build by deleting it from the staging area.
            This method can only be called after the assembly has been built and placed in the staging area.
            </summary>
            <param name="_Assembly">The name of the assembly to remove.</param>
            <returns>True if the assembly was found and removed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetAllTypes(GUPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Retrieves all types from an assembly, including nested types.
            Types are collected from all modules in the assembly.
            </summary>
            <param name="_AssemblyDefinition">The assembly to retrieve types from.</param>
            <returns>A list of all types in the assembly, including nested types.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetAllNestedTypes(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Recursively retrieves all nested types from a type definition.
            Nested types of nested types are also included in the result.
            </summary>
            <param name="_TypeDefinition">The type to retrieve nested types from.</param>
            <returns>A list of all nested types, including nested types of nested types.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllTypes(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,System.Boolean)">
            <summary>
            Counts the total number of types in an assembly.
            </summary>
            <param name="_AssemblyInfo">The assembly to count types in.</param>
            <param name="_Nested">When true, includes nested types in the count; otherwise, excludes them.</param>
            <returns>The total number of types in the assembly.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllTypes(System.Collections.Generic.IEnumerable{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo},System.Boolean)">
            <summary>
            Returns the count of all types. Include _Nested in count via true/false.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <param name="_Nested"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllMethods(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all methods in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllMethods(System.Collections.Generic.IEnumerable{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all methods in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllFields(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all fields in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllFields(System.Collections.Generic.IEnumerable{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all fields in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllProperties(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all properties in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllProperties(System.Collections.Generic.IEnumerable{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all properties in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllEvents(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all events in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllEvents(System.Collections.Generic.IEnumerable{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all events in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel">
            <summary>
            Represents the different accessibility levels for members in .NET.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Public">
            <summary>
            Access is not restricted.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Protected">
            <summary>
            Access is limited to the containing class or types derived from the containing class.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Protected_And_Internal">
            <summary>
            Access is limited to the current assembly and types derived from the containing class.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Protected_Or_Private">
            <summary>
            Access is limited to the containing class, types derived from the containing class, or classes within the same body.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Internal">
            <summary>
            Access is limited to the current assembly.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Private">
            <summary>
            Access is limited to the containing type.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper">
            <summary>
            Provides helper methods for determining accessibility levels of various member types.
            Converts Mono.Cecil member attributes to standardized accessibility enumeration values.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Type(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines the accessibility level of a TypeDefinition.
            Handles both top-level and nested type accessibility rules.
            </summary>
            <param name="_TypeDefinition">The type to evaluate for accessibility level.</param>
            <returns>The accessibility level of the specified type.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Method(GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Determines the accessibility level of a MethodDefinition.
            Evaluates method-specific accessibility attributes.
            </summary>
            <param name="_MethodDefinition">The method to evaluate for accessibility level.</param>
            <returns>The accessibility level of the specified method.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Field(GUPS.Mono.Cecil.FieldDefinition)">
            <summary>
            Determines the accessibility level of a FieldDefinition.
            Evaluates field-specific accessibility attributes.
            </summary>
            <param name="_FieldDefinition">The field to evaluate for accessibility level.</param>
            <returns>The accessibility level of the specified field.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Property(GUPS.Mono.Cecil.PropertyDefinition)">
            <summary>
            Determines the accessibility level of a PropertyDefinition.
            Evaluates the accessibility of both getter and setter methods to determine the most accessible level.
            </summary>
            <param name="_PropertyDefinition">The property to evaluate for accessibility level.</param>
            <returns>The accessibility level of the specified property.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Event(GUPS.Mono.Cecil.EventDefinition)">
            <summary>
            Determines the accessibility level of an EventDefinition.
            Evaluates the accessibility of both add and remove methods to determine the most accessible level.
            </summary>
            <param name="_EventDefinition">The event to evaluate for accessibility level.</param>
            <returns>The accessibility level of the specified event.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.FieldReferenceHelper">
            <summary>
            Provides helper methods for working with Mono.Cecil field references during obfuscation.
            Offers functionality for creating generic field references and manipulating field reference
            declarations to support generic type scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.FieldReferenceHelper.MakeFieldDeclaringTypeGeneric(GUPS.Mono.Cecil.FieldReference,GUPS.Mono.Cecil.TypeReference[])">
            <summary>
            Creates a new field reference with a generic declaring type.
            Constructs a field reference where the declaring type is made generic using the provided type arguments.
            </summary>
            <param name="_FieldReference">The original field reference to base the generic version on.</param>
            <param name="_GenericArguments">The type arguments to apply to the declaring type.</param>
            <returns>A new field reference with a generic declaring type.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper">
            <summary>
            Provides comprehensive helper methods for working with member definitions during obfuscation.
            Offers functionality for name parsing, generic parameter handling, return type extraction,
            and extended name formatting for various member types including namespaces, types, methods,
            fields, properties, and events.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetMemberName(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Extracts the specific member name from a full member name string based on the member type.
            Handles complex name parsing including return types, declaring types, and member-specific formatting.
            Generic parameters are preserved in the extracted name.
            </summary>
            <param name="_MemberType">The type of member to extract the name for.</param>
            <param name="_FullName">The full member name string to parse.</param>
            <returns>The extracted member name, or null if extraction fails.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _FullName is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetExtendedFullName(GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Creates an extended full name representation of a member definition including assembly context.
            The format is '[AssemblyName] FullName' which provides complete identification information.
            </summary>
            <param name="_MemberDefinition">The member definition to create extended name for.</param>
            <returns>A string in the format '[AssemblyName] FullName' identifying the member.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetExtendedOriginalFullName(GUPS.Mono.Cecil.IMemberDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache)">
            <summary>
            Creates an extended full name using the original member key from the cache.
            Uses the member's original name before obfuscation, providing the pre-obfuscation identifier.
            The format is '[AssemblyName] Original FullName'.
            </summary>
            <param name="_MemberDefinition">The member definition to get original name for.</param>
            <param name="_BelongingCache">The member cache containing original member keys.</param>
            <returns>A string with original member name, or null if no original key is found.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.TryGetGenericParameter(System.String,System.Int32@)">
            <summary>
            Determines if a member name contains generic parameters and extracts the parameter count.
            Parses the generic parameter syntax (e.g., 'MyMethod`2') to identify generic members.
            </summary>
            <param name="_FullName">The member name to check for generic parameters.</param>
            <param name="_GenericParameterCount">When this method returns, contains the count of generic parameters if found; otherwise, 0.</param>
            <returns>True if the member has generic parameters; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.RemoveGenericParameter(System.String)">
            <summary>
            Removes generic parameter information from a member name.
            Converts names like 'MyMethod`2' to 'MyMethod' by removing the generic parameter suffix.
            </summary>
            <param name="_Name">The member name that may contain generic parameters.</param>
            <returns>The simplified member name without generic parameter information.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetReturnType(System.String)">
            <summary>
            Extracts the return type from a member's full name string.
            Parses member signatures to identify and extract return type information for methods and properties.
            </summary>
            <param name="_Name">The member name or full name to extract return type from.</param>
            <returns>The return type string if present; otherwise, null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Name is null.</exception>
            <exception cref="T:System.Exception">Thrown when the name format is invalid with multiple spaces.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.RemoveReturnType(System.String)">
            <summary>
            Removes the return type portion from a member's name or full name.
            Cleanly extracts just the member identifier by removing return type information.
            </summary>
            <param name="_Name">The member name or full name to remove return type from.</param>
            <returns>The member name without return type information.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Name is null.</exception>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MemberReferenceHelper">
            <summary>
            Provides helper methods for working with Mono.Cecil member references during obfuscation.
            Offers functionality for resolving member references to their definitions, creating extended
            names, and handling various types of member references safely.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MemberReferenceHelper.GetExtendedFullName(GUPS.Mono.Cecil.MemberReference)">
            <summary>
            Creates an extended full name for a member reference including assembly context.
            The format is '[AssemblyName] FullName' which provides complete identification information.
            Requires successful resolution of the member reference to its definition.
            </summary>
            <param name="_MemberReference">The member reference to create extended name for.</param>
            <returns>A string in the format '[AssemblyName] FullName', or null if resolution fails.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MemberReferenceHelper.TryToResolve``1(GUPS.Mono.Cecil.MemberReference,``0@)">
            <summary>
            Attempts to resolve a member reference to its corresponding member definition.
            Provides safe resolution with error handling for cases where resolution may fail.
            </summary>
            <typeparam name="TMemberDefinition">The expected type of member definition.</typeparam>
            <param name="_MemberReference">The member reference to resolve.</param>
            <param name="_MemberDefinition">When this method returns, contains the resolved member definition if successful; otherwise, the default value.</param>
            <returns>True if the member reference was successfully resolved; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodDefinitionHelper">
            <summary>
            Provides helper methods for working with method definitions in the obfuscation process.
            Offers functionality for method signature parsing, parameter extraction, and method analysis.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodDefinitionHelper.RemoveMethodParameter(System.String)">
            <summary>
            Removes the parameter list from a method name if present.
            Extracts the method name portion from a full method signature.
            </summary>
            <param name="_Name">The method name or signature to process.</param>
            <returns>The method name without parameters (e.g., "MyMethod(...) " becomes "MyMethod").</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodDefinitionHelper.TryGetMethodParameterStartIndex(System.String,System.Int32@)">
            <summary>
            Determines if a method name contains parameter information and locates the parameter start position.
            Searches for the opening parenthesis that indicates the beginning of method parameters.
            </summary>
            <param name="_Name">The method name or signature to examine.</param>
            <param name="_ParameterIndex">When this method returns, contains the index where parameters start after '(', or -1 if not found.</param>
            <returns>True if the method name contains parameters; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodReferenceHelper">
            <summary>
            Provides helper methods for working with Mono.Cecil method references during obfuscation.
            Offers functionality for creating generic method instances, handling generic declaring types,
            and manipulating method references to support complex generic scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodReferenceHelper.MakeMethodGeneric(GUPS.Mono.Cecil.MethodReference,GUPS.Mono.Cecil.TypeReference[])">
            <summary>
            Creates a generic instance method from a generic method definition.
            Constructs a method reference with specific type arguments applied to generic parameters.
            </summary>
            <param name="_MethodReference">The generic method definition to create an instance of.</param>
            <param name="_GenericArguments">The type arguments to apply to the method's generic parameters.</param>
            <returns>A generic instance method with the specified type arguments.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the number of arguments doesn't match the number of generic parameters.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodReferenceHelper.MakeMethodDeclaringTypeGeneric(GUPS.Mono.Cecil.MethodReference,GUPS.Mono.Cecil.TypeReference[])">
            <summary>
            Creates a method reference with a generic declaring type.
            Constructs a method reference where the declaring type is made generic using provided type arguments.
            The MethodReference itself has no custom generic parameter, but is in a generic type. So make TypeReference generic.
            </summary>
            <param name="_MethodReference">The original method reference to base the generic version on.</param>
            <param name="_GenericArguments">The type arguments to apply to the declaring type.</param>
            <returns>A new method reference with a generic declaring type.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper">
            <summary>
            Provides comprehensive helper methods for working with type definitions during obfuscation.
            Offers extensive functionality for type analysis, manipulation, and introspection including
            namespace handling, generic type processing, inheritance analysis, constructor management,
            member discovery, and various type classification operations.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.SplitFullName(System.String,System.String@,System.String@)">
            <summary>
            Outputs the _Namespace and _Name by _Fullname.
            If _Fullname is a nested type, namespace is empty.
            </summary>
            <param name="_FullName"></param>
            <param name="_Namespace"></param>
            <param name="_Name"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsNested(System.String)">
            <summary>
            Returns true if the _FullName is nested (Containing a '/').
            </summary>
            <param name="_FullName"></param>
            <returns></returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.System_Attribute_TypeKey">
            <summary>
            TypeKey of System.Attribute
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeAnAttribute(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is a System.Attribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeGeneric(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is a generic type.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TypeNameWithoutGenericSuffix(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a types name without the generic ` suffix.
            For example: MyType`2 => MyType
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TypeNameWithoutGenericSuffix(System.String)">
            <summary>
            Returns a types name without the generic ` suffix.
            For example: MyType`2 => MyType
            </summary>
            <param name="_TypeName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeAbstract(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is an abstract type.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeStatic(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is a static type.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeStruct(GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Determine if the given type is a struct (also known as "value type") and not a struct-alike (f.e. primitive).
            </summary>
            <param name="_TypeReference">The type to check.</param>
            <returns>True if the type is a struct, and not primitive or similar.</returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.System_Object_TypeKey">
            <summary>
            TypeKey of System.Object
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeSerializable(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The _TypeDefinition IsSerializable or has System.SerializableAttribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeOrBaseSerializable(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The _TypeDefinition or any base IsSerializable or has System.SerializableAttribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TypeHasSerializableAttribute(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: _TypeDefinition has System.SerializableAttribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.InheritsFrom(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey)">
            <summary>
            Returns if the type _Type inherits from type with original _TypeKey.
            </summary>
            <param name="_Type"></param>
            <param name="_TypeCache"></param>
            <param name="_TypeKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.InheritsFrom(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache,System.String)">
            <summary>
            Returns if the type _Type inherits from type with original fullname _FullName.
            </summary>
            <param name="_Type"></param>
            <param name="_TypeCache"></param>
            <param name="_FullName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsDelegate(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns if the type _Type is a delegate.
            </summary>
            <remarks>
            The code checks if a TypeDefinition is a delegate by examining its base type. In .NET, all delegates inherit 
            from either System.MulticastDelegate or System.Delegate (though in practice, most inherit from MulticastDelegate).
            </remarks>
            <param name="_Type">The type to check.</param>
            <returns>True if the type is a delegate; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.HasEmptyConstructor(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns if the _TypeDefinition has an empty constructor.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetEmptyConstructor(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Find the default constructor of a TypeDefinition.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.AddEmptyConstructor(GUPS.Mono.Cecil.ModuleDefinition,GUPS.Mono.Cecil.TypeDefinition,GUPS.Mono.Cecil.MethodReference)">
            <summary>
            Add an empty constructor to _TypeDefinition which exists / or will be added in / to _ModuleDefinition.
            </summary>
            <param name="_ModuleDefinition"></param>
            <param name="_TypeDefinition"></param>
            <param name="_BaseEmptyConstructor"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetAllConstructor(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns all constructor, but the static constructor.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetStaticConstructor(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns the staticc constructor.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.AddEmptyStaticConstructor(GUPS.Mono.Cecil.ModuleDefinition,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Create an empty static constructor for _TypeDefinition.
            </summary>
            <param name="_ModuleDefinition"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindMember``1(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache,System.String)">
            <summary>
             Returns a list of all members of type TMemberDefinition in _TypeDefinition, sharing the name _OriginalName searching base types.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_TypeDefinition"></param>
            <param name="_Cache"></param>
            <param name="_OriginalName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindMember``1(GUPS.Mono.Collections.Generic.Collection{``0},GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache,System.String)">
            <summary>
            Returns a list of all members of type TMemberDefinition sharing the name _OriginalName.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_MemberCollection"></param>
            <param name="_Cache"></param>
            <param name="_OriginalName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetMembers``1(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns the required members in _TypeDefinition.
            TMemberDefinition as TypeDefinition will return all nested types.
            TMemberDefinition as MethodDefinition will return all methods.
            TMemberDefinition as FieldDefinition will return all fields.
            TMemberDefinition as PropertyDefinition will return all properties.
            TMemberDefinition as EventDefinition will return all events.
            Else will return null!
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.RemoveMemberName(System.String)">
            <summary>
            Removes the member name and following parameters (if there are some, else returns _Name).
            Example: System.String MyNamespace.MyType::MyMethod(...), returns System.String MyNamespace.MyType.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TryGetMemberNameStartIndex(System.String,System.Int32@)">
            <summary>
            Returns true if _Name contains a member (method/field/property/event).
            _MemberIndex represents the index in _Name, where the member name after "::" starts.
            Example: System.String MyNamespace.MyType::MyMethod(...), returns true and _MemberIndex as 34.
            </summary>
            <param name="_Name"></param>
            <param name="_MemberIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindField(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,System.String)">
            <summary>
            Returns the FieldDefinition with the original name _OriginalFieldName.
            </summary>
            <param name="_TypeDefinition"></param>
            <param name="_FieldCache"></param>
            <param name="_OriginalFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindField(GUPS.Mono.Collections.Generic.Collection{GUPS.Mono.Cecil.FieldDefinition},GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,System.String)">
            <summary>
            Returns the FieldDefinition with the original name _OriginalFieldName.
            </summary>
            <param name="_Fields"></param>
            <param name="_FieldCache"></param>
            <param name="_OriginalFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetFieldBelongingToProperty(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,GUPS.Mono.Cecil.PropertyDefinition)">
            <summary>
            Returns the FieldDefinition to _PropertyDefinition if there is some.
            Else returns null.
            </summary>
            <param name="_FieldCache"></param>
            <param name="_PropertyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetFieldBelongingToEvent(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,GUPS.Mono.Cecil.EventDefinition)">
            <summary>
            Returns the FieldDefinition to _EventDefinition if there is some.
            Else returns null.
            </summary>
            <param name="_FieldCache"></param>
            <param name="_EventDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindProperty(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache,System.String)">
            <summary>
            Returns the PropertyDefinition with the original name _OriginalPropertyName.
            </summary>
            <param name="_TypeDefinition"></param>
            <param name="_PropertyCache"></param>
            <param name="_OriginalPropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindProperty(GUPS.Mono.Collections.Generic.Collection{GUPS.Mono.Cecil.PropertyDefinition},GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache,System.String)">
            <summary>
            Returns the PropertyDefinition with the original name _OriginalPropertyName.
            </summary>
            <param name="_Properties"></param>
            <param name="_PropertyCache"></param>
            <param name="_OriginalPropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetPropertyBelongingToField(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache,GUPS.Mono.Cecil.FieldDefinition)">
            <summary>
            Returns the PropertyDefinition belonging to _FieldDefinition if _FieldDefinition is created through a Property.
            If there is none returns null.
            </summary>
            <param name="_PropertyCache"></param>
            <param name="_FieldDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper">
            <summary>
            Helper for type references.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper.GetScopeName(GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Returns the Assembly name of _TypeReference.
            If the scope is null, returns null.
            </summary>
            <param name="_TypeReference"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper.ParseScopeName(GUPS.Mono.Cecil.IMetadataScope)">
            <summary>
            Parses the assembly name from a metadata scope.
            Handles different types of metadata scopes to extract the appropriate assembly identifier.
            </summary>
            <param name="metadataScope">The metadata scope to extract assembly name from.</param>
            <returns>The parsed assembly name from the metadata scope.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper.MakeTypeGeneric(GUPS.Mono.Cecil.TypeReference,GUPS.Mono.Cecil.TypeReference[])">
            <summary>
            Creates a generic instance type from a type reference with the specified type arguments.
            Constructs a parameterized generic type by applying type arguments to generic parameters.
            </summary>
            <param name="_TypeReference">The generic type definition to create an instance of.</param>
            <param name="_Arguments">The type arguments to apply to the generic type parameters.</param>
            <returns>A generic instance type with the specified type arguments applied.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the number of arguments doesn't match the number of generic parameters.</exception>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper">
            <summary>
            Provides helper methods for working with custom attributes in Mono.Cecil.
            Offers functionality for detecting, retrieving, and manipulating custom attributes on various member types.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.HasCustomAttribute(GUPS.Mono.Cecil.ICustomAttributeProvider,System.String)">
            <summary>
            Determines if the specified attribute provider has a custom attribute with the given name.
            Checks for both the exact name and the name with "Attribute" suffix.
            </summary>
            <param name="_AttributeProvider">The member that provides custom attributes to check.</param>
            <param name="_AttributeName">The name of the attribute to search for (with or without "Attribute" suffix).</param>
            <returns>True if a matching attribute is found; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.HasCustomAttributeOrParent(GUPS.Mono.Cecil.IMemberDefinition,System.String)">
            <summary>
            Determines if the specified member or any of its parent types has a custom attribute with the given name.
            Recursively searches up the type hierarchy until the attribute is found or the root is reached.
            </summary>
            <param name="_MemberDefinition">The member to check for the attribute.</param>
            <param name="_AttributeName">The name of the attribute to search for.</param>
            <returns>True if the member or any parent type has the specified attribute; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.TryGetCustomAttribute(GUPS.Mono.Cecil.ICustomAttributeProvider,System.String,GUPS.Mono.Cecil.CustomAttribute@)">
            <summary>
            Attempts to retrieve a custom attribute with the specified name from the attribute provider.
            Searches for both the exact name and the name with "Attribute" suffix.
            </summary>
            <param name="_AttributeProvider">The member that provides custom attributes to search.</param>
            <param name="_AttributeName">The name of the attribute to retrieve.</param>
            <param name="_CustomAttribute">When this method returns, contains the found attribute if successful; otherwise, null.</param>
            <returns>True if the attribute was found and retrieved; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.RemoveCustomAttributes(GUPS.Mono.Cecil.ICustomAttributeProvider,System.String)">
            <summary>
            Removes all custom attributes with the specified full name from the attribute provider.
            Uses exact string matching on the attribute's full name.
            </summary>
            <param name="_AttributeProvider">The member containing attributes to remove from.</param>
            <param name="_AttributeFullName">The full name of the attribute type to remove.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Get_ResolveAble_CustomAttributes(GUPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            Retrieves all custom attributes from the provider that can be resolved to their type definitions.
            Filters out attributes whose types cannot be resolved in the current context.
            </summary>
            <param name="_CustomAttributeProvider">The member containing custom attributes.</param>
            <returns>A collection of resolvable custom attributes.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeArguments(GUPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            Iterates through all custom attribute arguments from resolvable attributes, including nested arguments.
            Processes constructor arguments, field arguments, and property arguments recursively.
            </summary>
            <param name="_CustomAttributeProvider">The member containing custom attributes to process.</param>
            <returns>An enumerable of all custom attribute arguments, including nested ones.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeArguments(System.Collections.Generic.IEnumerable{GUPS.Mono.Cecil.CustomAttributeArgument})">
            <summary>
            Recursively iterates through custom attribute arguments, handling arrays and nested structures.
            Processes array-type arguments by expanding their contents.
            </summary>
            <param name="_CustomAttributeArgumentEnumerable">The collection of arguments to iterate through.</param>
            <returns>An enumerable of flattened custom attribute arguments.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeNamedArguments(GUPS.Mono.Cecil.ICustomAttributeProvider,System.Boolean)">
            <summary>
            Iterates through all named arguments (fields or properties) in custom attributes from resolvable attributes.
            Returns pairs of custom attributes and their associated named arguments.
            </summary>
            <param name="_CustomAttributeProvider">The member containing custom attributes to process.</param>
            <param name="_Field">True to iterate field arguments; false to iterate property arguments.</param>
            <returns>An enumerable of key-value pairs containing the custom attribute and its named argument.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeNamedArguments(System.Collections.Generic.IEnumerable{GUPS.Mono.Cecil.CustomAttributeNamedArgument})">
            <summary>
            Iterates through a collection of custom attribute named arguments.
            Helper method for processing named argument collections.
            </summary>
            <param name="_CustomAttributeNamedArgumentEnumerable">The collection of named arguments to iterate through.</param>
            <returns>An enumerable of the named arguments.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.TryGetAttributeValueByName``1(GUPS.Mono.Cecil.CustomAttribute,System.String,``0@)">
            <summary>
            Attempts to retrieve a named argument value from a custom attribute by its name.
            Searches both field and property arguments for the specified name.
            </summary>
            <typeparam name="TObject">The expected type of the attribute value.</typeparam>
            <param name="_CustomAttribute">The custom attribute to search within.</param>
            <param name="_Name">The name of the field or property to retrieve.</param>
            <param name="_Object">When this method returns, contains the value if found; otherwise, the default value.</param>
            <returns>True if the named argument was found and retrieved; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2">
            <summary>
            Contains all members in the project and its belonging group.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the AMemberCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.Step">
            <summary>
            The used Step.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.memberToKeyDictionary">
            <summary>
            TMemberDefinition, TMemberKey.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.keyToMemberDictionary">
            <summary>
            TMemberKey, TMemberDefinition.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.GetOriginalMemberKeyByMemberDefinition(`0)">
            <summary>
            Returns the original key for _MemberDefinition.
            If there is non, returns null!
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.GetMemberDefinitionByOriginalMemberKey(`1)">
            <summary>
            Returns the TMemberDefinition by its original key.
            If there is non, returns null!
            </summary>
            <param name="_OriginalMemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.AddTo_MemberKey_And_MemberDefinition_Cache(`0)">
            <summary>
            Add _MemberDefinition to the key to member dictionaries.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.On_AddTo_MemberKey_And_MemberDefinition_Cache(`0)">
            <summary>
            Override for custom action on add to member key and member cache.
            Return false if something went wrong!
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.Add_MemberDefinition(`0)">
            <summary>
            Add the _MemberDefinition only to the member cache.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.On_Add_MemberDefinition(`0)">
            <summary>
            Override for custom action on add to member.
            Return false if something went wrong!
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.ToString">
            <summary>
            Returns a string representation of the member cache, listing all member definitions and their keys.
            </summary>
            <returns>A string containing all member definitions and their corresponding keys.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2">
            <summary>
            Abstract base class for member caches that support grouping of related virtual members.
            Manages virtual member inheritance relationships and creates member groups for virtual method overrides,
            interface implementations, and other related members that must maintain consistent names during obfuscation.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the AMemberGroupCache class.
            Sets up the base member cache functionality without populating groups.
            </summary>
            <param name="_Step">The post-assembly build step containing assemblies to process.</param>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.memberGroups">
            <summary>
            Maps each virtual member definition to its associated member group.
            Only virtual members that participate in inheritance or interface implementation are tracked.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.types_Virtual_Member_Cache_Dictionary">
            <summary>
            Caches all virtual members (including inherited and interface members) for each type.
            Used to avoid repeatedly traversing type hierarchies when building member groups.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.IsVirtual(`0)">
            <summary>
            Determines whether the specified member definition is virtual and participates in inheritance.
            Must be implemented by derived classes to provide member-specific virtual detection logic.
            </summary>
            <param name="_MemberDefinition">The member definition to check for virtual behavior.</param>
            <returns>True if the member is virtual and can be overridden; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.MembersMatch(`0,`0)">
            <summary>
            Determines whether two member definitions have matching signatures for grouping purposes.
            Must be implemented by derived classes to provide member-specific matching logic.
            </summary>
            <param name="_Left">The first member to compare.</param>
            <param name="_Right">The second member to compare.</param>
            <returns>True if the members match and should be grouped together; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.GetVirtualMembers(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Retrieves all virtual members from the specified type, its base types, and implemented interfaces.
            Results are cached to improve performance for repeated lookups on the same type.
            </summary>
            <param name="_TypeDefinition">The type to collect virtual members from.</param>
            <returns>A list of all virtual members accessible through the type hierarchy.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.AddToMemberGroup(`0)">
            <summary>
            Adds a member definition to an appropriate member group based on its virtual relationships.
            Creates new groups as needed or merges existing groups when members are related.
            </summary>
            <param name="_MemberDefinition">The member definition to add to a group.</param>
            <returns>True if the member was successfully added to a group; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.AddToMemberGroup(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup,`0)">
            <summary>
            Adds a member definition to the specified member group, handling group merging when necessary.
            If the member is already in a different group, the groups are merged to maintain consistency.
            </summary>
            <param name="_MemberGroup">The target member group to add the member to.</param>
            <param name="_MemberDefinition">The member definition to add to the group.</param>
            <returns>The resulting member group (may be the original or a merged group).</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.UpdateMemberGroup(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Updates member group relationships for all virtual members in the specified type.
            This method should be called after adding members to ensure proper grouping across inheritance hierarchies.
            </summary>
            <param name="_TypeDefinition">The type whose virtual members should have their groups updated.</param>
            <returns>True if the group update was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.GetMemberGroup(`0)">
            <summary>
            Retrieves the member group associated with the specified member definition.
            Only virtual members that participate in inheritance relationships have associated groups.
            </summary>
            <param name="_MemberDefinition">The member definition to get the group for.</param>
            <returns>The member group if the member is part of one; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.On_Add_MemberDefinition(`0)">
            <summary>
            Override for custom action when adding a member definition.
            For virtual members, this adds them to appropriate member groups.
            </summary>
            <param name="_MemberDefinition">The member definition to add.</param>
            <returns>True if the member was successfully added; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.EventCache">
            <summary>
            Manages caching and grouping of event definitions during obfuscation.
            Handles virtual events and their inheritance relationships across the type hierarchy.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.EventCache.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the EventCache class.
            Populates the cache with all event definitions from obfuscated assemblies and establishes member groups.
            </summary>
            <param name="_Step">The post-assembly build step containing assemblies to process.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.EventCache.IsVirtual(GUPS.Mono.Cecil.EventDefinition)">
            <summary>
            Determines whether the specified event definition is virtual.
            An event is considered virtual if either its add or remove method is virtual.
            </summary>
            <param name="_MemberDefinition">The event definition to check.</param>
            <returns>True if the event has virtual add or remove methods; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.EventCache.MembersMatch(GUPS.Mono.Cecil.EventDefinition,GUPS.Mono.Cecil.EventDefinition)">
            <summary>
            Determines whether two event definitions have matching signatures for grouping purposes.
            Uses bidirectional event matching to ensure compatibility.
            </summary>
            <param name="_Left">The first event to compare.</param>
            <param name="_Right">The second event to compare.</param>
            <returns>True if the events match signatures and can be grouped together; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache">
            <summary>
            Manages caching of field definitions during obfuscation.
            Unlike other member caches, fields typically don't support grouping as they are not virtual by nature.
            Provides efficient lookup and management of field definitions across all obfuscated assemblies.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the FieldCache class.
            Populates the cache with all field definitions from obfuscated assemblies.
            Fields are cached individually without grouping since they typically don't participate in virtual inheritance.
            </summary>
            <param name="_Step">The post-assembly build step containing assemblies to process.</param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache">
            <summary>
            Interface for a MemberCache.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache.GetOriginalMemberKeyByMemberDefinition(GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the Key of _MemberDefinition.
            If _MemberDefinition is not part of the cache, returns null.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache.GetMemberDefinitionByOriginalMemberKey(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Returns the member by its _OriginalMemberKey.
            If there is no member with _OriginalMemberKey, returns null.
            </summary>
            <param name="_OriginalMemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache.Add_MemberDefinition(GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Add a member only to the cache.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2">
            <summary>
            Cache of all members of TMemberDefinition with TMemberKey.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <typeparam name="TMemberKey"></typeparam>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2.GetOriginalMemberKeyByMemberDefinition(`0)">
            <summary>
            Returns the Key of _MemberDefinition.
            If _MemberDefinition is not part of the cache, returns null.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2.GetMemberDefinitionByOriginalMemberKey(`1)">
            <summary>
            Returns the member by its _OriginalMemberKey.
            If there is no member with _OriginalMemberKey, returns null.
            </summary>
            <param name="_OriginalMemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2.Add_MemberDefinition(`0)">
            <summary>
            Add a member only to the cache.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup">
            <summary>
            Defines the contract for member groups that contain related member definitions.
            Member groups ensure that virtual members, interface implementations, and overrides
            maintain consistent naming during obfuscation to preserve inheritance relationships.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.GroupName">
            <summary>
            Gets the obfuscated name assigned to this member group.
            All members in the group will be renamed to this value during obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.GroupMemberDefinitionList">
            <summary>
            Gets the collection of all member definitions that belong to this group.
            These members share inheritance relationships and must maintain consistent names.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.GroupRootMemberDefinitionHashSet">
            <summary>
            Gets the collection of root member definitions in this group.
            Root members are typically interface declarations or base class virtual members
            that establish the fundamental contract for the group.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.AddToGroup(GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Adds a member definition to this group.
            The member will be included in group operations and receive the group's obfuscated name.
            </summary>
            <param name="_MemberDefinition">The member definition to add to the group.</param>
            <returns>True if the member was successfully added; otherwise, false.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.SomeGroupMemberDefinitionIsInExternalAssembly">
            <summary>
            Gets a value indicating whether any member in this group belongs to an external assembly.
            External assemblies are not being obfuscated, which constrains naming decisions for the group.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup">
            <summary>
            Represents a group of related member definitions that must maintain consistent naming during obfuscation.
            Groups are formed by virtual members that participate in inheritance relationships, interface implementations,
            or other scenarios where members must be renamed together to preserve functionality.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.GroupName">
            <summary>
            Gets or sets the obfuscated name assigned to this member group.
            All members in the group will be renamed to this value during obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.GroupMemberDefinitionList">
            <summary>
            Gets the list of all member definitions that belong to this group.
            These members will all receive the same obfuscated name to maintain inheritance relationships.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.GroupRootMemberDefinitionHashSet">
            <summary>
            Gets the set of root member definitions in this group.
            Root members are typically interface declarations or base class virtual members that define the member contract.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.AddToGroup(GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Adds a member definition to this group.
            The member will be included in group operations and receive the group's obfuscated name.
            </summary>
            <param name="_MemberDefinition">The member definition to add to the group.</param>
            <returns>True if the member was successfully added; otherwise, false.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.SomeGroupMemberDefinitionIsInExternalAssembly">
            <summary>
            Gets or sets a value indicating whether any member in this group belongs to an external assembly.
            External assemblies are not being obfuscated, which may affect naming decisions for the group.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.ToString">
            <summary>
            Returns a string representation of this member group, including group name, external status, and member list.
            Useful for debugging and logging member group relationships.
            </summary>
            <returns>A formatted string describing the member group and its contents.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache">
            <summary>
            Caches all method definitions in the project and manages their grouping for obfuscation.
            Extends AMemberGroupCache to provide method-specific functionality for virtual method handling and matching.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the MethodCache using assemblies from the specified build step.
            Populates the cache with all method definitions from obfuscated assemblies and establishes member groups.
            </summary>
            <param name="_Step">The post-assembly build step containing the assemblies to process.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache.IsVirtual(GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Determines whether the specified method is virtual.
            Used by the base class to establish virtual method inheritance chains.
            </summary>
            <param name="_MemberDefinition">The method definition to check.</param>
            <returns>True if the method is virtual; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache.MembersMatch(GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Determines whether two method definitions match based on their signatures.
            Uses bidirectional matching to ensure method compatibility for grouping.
            </summary>
            <param name="_Left">The first method to compare.</param>
            <param name="_Right">The second method to compare.</param>
            <returns>True if the methods match signatures; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache">
            <summary>
            Manages caching and grouping of property definitions during obfuscation.
            Handles virtual properties and their inheritance relationships across the type hierarchy.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the PropertyCache class.
            Populates the cache with all property definitions from obfuscated assemblies and establishes member groups.
            </summary>
            <param name="_Step">The post-assembly build step containing assemblies to process.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache.IsVirtual(GUPS.Mono.Cecil.PropertyDefinition)">
            <summary>
            Determines whether the specified property definition is virtual.
            A property is considered virtual if either its getter or setter method is virtual.
            </summary>
            <param name="_MemberDefinition">The property definition to check.</param>
            <returns>True if the property has virtual getter or setter methods; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache.MembersMatch(GUPS.Mono.Cecil.PropertyDefinition,GUPS.Mono.Cecil.PropertyDefinition)">
            <summary>
            Determines whether two property definitions have matching signatures for grouping purposes.
            Uses bidirectional property matching to ensure compatibility.
            </summary>
            <param name="_Left">The first property to compare.</param>
            <param name="_Right">The second property to compare.</param>
            <returns>True if the properties match signatures and can be grouped together; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache">
            <summary>
            A cache of all types in the obfuscated assemblies.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the TypeCache using the assemblies being obfuscated from _Step. Only builds the cache for the types and its base types in the obfuscated assemblies.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.fullNameToTypeKeyListDictionary">
            <summary>
            Maps the original full name of a type ([Namespace].[TypeName]) to a list of type keys that share the same full name but could be in different assemblies.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.On_AddTo_MemberKey_And_MemberDefinition_Cache(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Build up the cache for the type and its base types and interfaces.
            </summary>
            <param name="_TypeDefinition">The type to add and build up the cache for.</param>
            <returns>True if the type got added to the cache; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.AddTypeToNameLookUp(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Add the _TypeDefinition to the FullName to TypeKey List look up dictionary.
            </summary>
            <param name="_TypeDefinition">The type to add.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.BuildBaseHierarchy(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Build up the base type hierarchy for the type.
            </summary>
            <param name="_TypeDefinition">The type to build up the hierarchy for.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.BuildInterfaceHierarchy(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Build up the interfaces for the type.
            </summary>
            <param name="_TypeDefinition">The type to build up the interfaces for.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.BaseTypeDictionary">
            <summary>
            Extendend Type Full Name, Extendend Base Type Full Name..
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.InterfacesDictionary">
            <summary>
            Extendend Type Full Name, Extendend Interface Full Name List.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.HasInterface(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey)">
            <summary>
            Search if the _TypeDefinition implements the _Interface.
            </summary>
            <param name="_TypeDefinition">The type to search for the interface.</param>
            <param name="_Interface">The interface to search for.</param>
            <returns>True if the type implements the interface; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.HasInterface(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,System.Collections.Generic.HashSet{GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey})">
            <summary>
            Search if the _Type implements the _Interface.
            </summary>
            <param name="_Type">The type to search for the interface.</param>
            <param name="_Interface">The interface to search for.</param>
            <param name="_AlreadySearchedTypes">A hash set of already searched types to prevent cyclic dependencies.</param>
            <returns>True if the type implements the interface; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.InheritesFrom(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,System.Boolean)">
            <summary>
            Check here if a _TypeDefinition inherits from _FromType (Base type or interfaces). The assembly, namespace and type name will be compared.
            </summary>
            <param name="_TypeDefinition">The type to check if it inherits from _FromType.</param>
            <param name="_FromType">The type to check if it is inherited from.</param>
            <param name="_CheckInterfaces">True if the interfaces should be checked; otherwise false.</param>
            <returns>True if the type inherits from the _FromType; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.InheritesFrom(GUPS.Mono.Cecil.TypeDefinition,System.String,System.Boolean)">
            <summary>
            Check here if a _TypeDefinition inherits from type with original _FullName. Only the namespace and type name will be compared.
            </summary>
            <param name="_TypeDefinition">The type to check if it inherits from _FullName.</param>
            <param name="_FullName">The full name of the type to check if it is inherited from.</param>
            <param name="_CheckInterfaces">True if the interfaces should be checked; otherwise false.</param>
            <returns>Ttrue if the type inherits from the _FullName; otherwise false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper">
            <summary>
            Provides functionality for cloning and creating various member types during obfuscation.
            Supports cloning of types, methods, fields, properties, and events with proper reference handling.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCreateEmptySubType(GUPS.Mono.Cecil.TypeDefinition,System.String,System.String,GUPS.Mono.Cecil.TypeDefinition@)">
            <summary>
            Attempts to create a derived type that inherits from the specified base type.
            The new type will be created with the specified namespace and name, and includes an empty constructor.
            </summary>
            <param name="_BaseType">The base type to inherit from.</param>
            <param name="_SubTypeNamespace">The namespace for the new derived type.</param>
            <param name="_SubTypeName">The name for the new derived type.</param>
            <param name="_SubType">When this method returns, contains the created derived type if successful; otherwise, null.</param>
            <returns>True if the derived type was created successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.MakeTypeGeneric(GUPS.Mono.Cecil.TypeReference,GUPS.Mono.Cecil.TypeReference[])">
            <summary>
            Creates a generic instance type from a type reference with the specified generic arguments.
            Constructs a parameterized generic type by associating type arguments with generic parameters.
            </summary>
            <param name="_Self">The generic type definition to create an instance of.</param>
            <param name="_GenericArguments">The type arguments to apply to the generic type parameters.</param>
            <returns>A generic instance type with the specified type arguments applied.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Self or _GenericArguments is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the number of arguments doesn't match the number of generic parameters.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneType(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String,GUPS.Mono.Cecil.TypeDefinition@)">
            <summary>
            Attempts to create a complete clone of a type definition with a new namespace and name.
            Creates a deep copy of all type members including fields, methods, properties, and events.
            The cloned type is not automatically added to any assembly and must be manually added.
            </summary>
            <param name="_TargetAssemblyDefinition">The assembly that will contain the cloned type (used for reference resolution).</param>
            <param name="_Source">The source type definition to clone.</param>
            <param name="_TargetNamespace">The namespace for the cloned type.</param>
            <param name="_TargetName">The name for the cloned type.</param>
            <param name="_Target">When this method returns, contains the cloned type if successful; otherwise, null.</param>
            <returns>True if the type was successfully cloned; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneField(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.FieldDefinition,System.String,GUPS.Mono.Cecil.FieldDefinition@)">
            <summary>
            Tries to clone a field. It will NOT be added to some type!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneMethod(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.MethodDefinition,System.String,GUPS.Mono.Cecil.MethodDefinition@)">
            <summary>
            Tries to clone a method. It will NOT be added to some type!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodGenericParameter(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones the GenericParameters from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodVariables(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones the variables from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodParameters(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clone the method paramter from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodInstructions(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones all the Instruction from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodInstruction(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.Cil.Instruction)">
            <summary>
            Clones the _Instruction in _TargetAssemblyDefinition context.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Instruction"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodExceptionHandler(GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.Cil.ExceptionHandler)">
            <summary>
            Clones and returns a _SourceExceptionHandler.
            </summary>
            <param name="_Source"></param>
            <param name="_Target"></param>
            <param name="_SourceExceptionHandler"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneProperty(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.PropertyDefinition,System.String,GUPS.Mono.Cecil.PropertyDefinition@)">
            <summary>
            Tries to clone a property. It will NOT be added to some type!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneEvent(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.EventDefinition,System.String,GUPS.Mono.Cecil.EventDefinition@)">
            <summary>
            Tries to clone an event. It will NOT be added to some type!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneParameterDefinition(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.ParameterDefinition)">
            <summary>
            Clone the given parameter definition.
            </summary>
            <param name="_TargetAssemblyDefinition">Target assembly.</param>
            <param name="_ParameterDefinition">The original parameter definition.</param>
            <returns>A clone of the original parameter definition.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneCustomAttribute(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.CustomAttribute)">
            <summary>
            Clone the given custom attribute.
            </summary>
            <param name="_TargetAssemblyDefinition">Target assembly</param>
            <param name="_CustomAttribute">The original custom attribute.</param>
            <returns>A clone of the original custom attribute.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneGenericParameter(GUPS.Mono.Cecil.AssemblyDefinition,GUPS.Mono.Cecil.IGenericParameterProvider,GUPS.Mono.Cecil.GenericParameter)">
            <summary>
            Clone the given generic parameter.
            </summary>
            <param name="_TargetAssemblyDefinition">Target assembly.</param>
            <param name="_Target">Target parameter owner.</param>
            <param name="_GenericParameter">The original generic parameter.</param>
            <returns>A clone of the original generic parameter.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType">
            <summary>
            Defines the different types of members that can be present in a .NET assembly.
            Used to categorize members during obfuscation processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType.Namespace">
            <summary>
            Represents a namespace that contains types and other namespaces.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType.Type">
            <summary>
            Represents a type (class, interface, struct, enum, delegate, etc.).
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType.Method">
            <summary>
            Represents a method (including constructors, destructors, and operators).
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType.Field">
            <summary>
            Represents a field (instance or static variable).
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType.Property">
            <summary>
            Represents a property with getter and/or setter methods.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType.Event">
            <summary>
            Represents an event with add and remove methods.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.IMemberDefinitionExtension">
            <summary>
            Extension class for IMemberDefinition.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension">
            <summary>
            Extension class for IMemberDefinition.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.TryToResolve(GUPS.Mono.Cecil.MemberReference,GUPS.Mono.Cecil.IMemberDefinition@)">
            <summary>
            Tries to resolve _MemberReference. If failed, returns false.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.TryToResolve``1(GUPS.Mono.Cecil.MemberReference,``0@)">
            <summary>
            Tries to resolve _MemberReference. If failed, returns false.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.GetExtendedFullName(GUPS.Mono.Cecil.MemberReference)">
            <summary>
            Returns the extended full name of a MemberReference.
            Looks like: '[AssemblyName] FullName'.
            </summary>
            <param name="_MemberReference"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.GetExtendedOriginalFullName(GUPS.Mono.Cecil.MemberReference,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache)">
            <summary>
            Returns the extended original full name of a MemberReference.
            Looks like: '[AssemblyName] Original FullName'.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_BelongingCache"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.TypeDefinitionExtension">
            <summary>
            Provides extension methods for TypeDefinition objects to enhance their functionality in the obfuscation process.
            This class is currently a placeholder for future TypeDefinition-specific extension methods.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey">
            <summary>
            Represents a unique identifier for event members during obfuscation processing.
            Provides a stable key that includes event name, declaring type, and assembly information
            to uniquely identify events across different obfuscation stages.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.#ctor">
            <summary>
            Initializes a new instance of the EventKey class.
            This parameterless constructor is required for deserialization scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.#ctor(GUPS.Mono.Cecil.EventReference)">
            <summary>
            Initializes a new instance of the EventKey class from an EventReference.
            Resolves the event reference and extracts identifying information.
            </summary>
            <param name="_EventReference">The event reference to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _EventReference is null.</exception>
            <exception cref="T:System.Exception">Thrown when the event reference cannot be resolved.</exception>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey">
            <summary>
            Represents a unique identifier for field members during obfuscation processing.
            Provides a stable key that includes field name, declaring type, and assembly information
            to uniquely identify fields across different obfuscation stages.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.#ctor">
            <summary>
            Initializes a new instance of the FieldKey class.
            This parameterless constructor is required for deserialization scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.#ctor(GUPS.Mono.Cecil.FieldReference)">
            <summary>
            Initializes a new instance of the FieldKey class from a FieldReference.
            Resolves the field reference and extracts identifying information.
            </summary>
            <param name="_FieldReference">The field reference to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _FieldReference is null.</exception>
            <exception cref="T:System.Exception">Thrown when the field reference cannot be resolved.</exception>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper">
            <summary>
            Provides static helper methods for creating and managing member keys.
            Offers factory methods to create appropriate member key types based on member definitions
            and references, with proper error handling and type detection.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper.TryToCreateMemberKey(GUPS.Mono.Cecil.MemberReference,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey@)">
            <summary>
            Attempts to create the appropriate member key for the specified member reference.
            Automatically detects the member type and creates the corresponding key implementation.
            </summary>
            <param name="_MemberReference">The member reference to create a key for.</param>
            <param name="_MemberKey">When this method returns, contains the created member key if successful; otherwise, null.</param>
            <returns>True if a member key was successfully created; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper.TryToCreateMemberKey(GUPS.Mono.Cecil.IMemberDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey@)">
            <summary>
            Returns the matching _MemberKey for _MemberDefinition.
            </summary>
            <param name="_MemberDefinition"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper.TryToCreateMemberKey(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey@)">
            <summary>
            Tries to create a _MemberKey based on _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey">
            <summary>
            Defines the contract for member keys used to uniquely identify members during obfuscation.
            Member keys provide a stable, serializable identifier that includes assembly, name, and other
            identifying information needed to match members across different processing stages.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Assembly">
            <summary>
            Gets the simplified name of the assembly containing this member.
            Used to distinguish members with the same name from different assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.FullName">
            <summary>
            Gets the full qualified name of the member, including namespace and declaring type information.
            This provides the complete path to uniquely identify the member within its assembly.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Name">
            <summary>
            Gets the simple name of the member without namespace or type qualification.
            This is the actual member name that will be subject to obfuscation.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Serialize(System.String@)">
            <summary>
            Serializes this member key to a string representation for storage or transmission.
            Implementations must support round-trip serialization/deserialization.
            </summary>
            <param name="_Value">When this method returns, contains the serialized string representation of the key.</param>
            <returns>True if serialization was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Deserialize(System.String)">
            <summary>
            Deserializes a member key from its string representation.
            Implementations must provide a parameterless constructor for deserialization scenarios.
            </summary>
            <param name="_Value">The serialized string representation to deserialize from.</param>
            <returns>True if deserialization was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey">
            <summary>
            Represents a unique identifier for method members during obfuscation processing.
            Provides a stable key that includes method name, declaring type, generic parameters,
            and assembly information to uniquely identify methods across different obfuscation stages.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.#ctor">
            <summary>
            Initializes a new instance of the MethodKey class.
            This parameterless constructor is required for deserialization scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.#ctor(GUPS.Mono.Cecil.MethodReference)">
            <summary>
            Initializes a new instance of the MethodKey class from a MethodReference.
            Resolves the method reference and extracts identifying information including generic parameters.
            </summary>
            <param name="_MethodReference">The method reference to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _MethodReference is null.</exception>
            <exception cref="T:System.Exception">Thrown when the method reference cannot be resolved.</exception>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.GenericParameterCount">
            <summary>
            Returns the count of GenericParameters the Method has.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Serialization_FullName">
            <summary>
            Get: Creates Property Serialization_FullName and assigns to Field serialization_FullName.
            Set: Extracts and assigns to Field FullName, Name and GenericParameterCount.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey">
            <summary>
            Represents a unique identifier for property members during obfuscation processing.
            Provides a stable key that includes property name, declaring type, and assembly information
            to uniquely identify properties across different obfuscation stages.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.#ctor">
            <summary>
            Initializes a new instance of the PropertyKey class.
            This parameterless constructor is required for deserialization scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.#ctor(GUPS.Mono.Cecil.PropertyReference)">
            <summary>
            Initializes a new instance of the PropertyKey class from a PropertyReference.
            Resolves the property reference and extracts identifying information.
            </summary>
            <param name="_PropertyReference">The property reference to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _PropertyReference is null.</exception>
            <exception cref="T:System.Exception">Thrown when the property reference cannot be resolved.</exception>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey">
            <summary>
            Represents a unique identifier for types in the obfuscation process.
            Provides a stable key that includes assembly, namespace, and type name information.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor">
            <summary>
            Initializes a new instance of the TypeKey class.
            This parameterless constructor is used for deserialization scenarios.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor(GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Initializes a new instance of the TypeKey class from a TypeReference.
            Resolves the reference and extracts assembly and type information.
            </summary>
            <param name="_TypeReference">The type reference to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _TypeReference is null.</exception>
            <exception cref="T:System.Exception">Thrown when the type reference cannot be resolved.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Initializes a new instance of the TypeKey class from a TypeDefinition.
            Extracts assembly, namespace, and type name information directly from the definition.
            </summary>
            <param name="_TypeDefinition">The type definition to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _TypeDefinition is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the TypeKey class from a .NET reflection Type.
            Converts .NET type information to the obfuscation key format.
            </summary>
            <param name="_Type">The .NET type to create the key from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _Type is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TypeKey class from assembly name and full type name.
            Parses the full name to extract namespace and type name components.
            </summary>
            <param name="_Assembly">The name of the assembly containing the type.</param>
            <param name="_FullName">The full name of the type including namespace.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _Assembly or _FullName is null or empty.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TypeKey class from individual components.
            Creates a type key from explicitly provided assembly, namespace, and name values.
            </summary>
            <param name="_Assembly">The name of the assembly containing the type.</param>
            <param name="_Namespace">The namespace of the type (can be null or empty).</param>
            <param name="_Name">The name of the type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when _Assembly or _Name is null or empty.</exception>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Assembly">
            <summary>
            Gets the simplified name of the assembly containing this type.
            This excludes version, culture, and public key token information.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.FullName">
            <summary>
            Gets the full name of this type, including namespace.
            For nested types, uses '/' as the separator instead of '+'.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Namespace">
            <summary>
            Gets the namespace of the type.
            For nested types, this will be empty as they inherit their parent's namespace.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Name">
            <summary>
            Gets the name of the type without namespace or assembly information.
            For generic types, includes the generic parameter count suffix (e.g., 'MyType`2').
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.GenericParameterCount">
            <summary>
            Gets the number of generic parameters that this type has.
            Returns 0 for non-generic types.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Serialize(System.String@)">
            <summary>
            Serializes this TypeKey to a string representation.
            Creates a pipe-delimited string containing assembly and full name information.
            </summary>
            <param name="_Value">When this method returns, contains the serialized string representation.</param>
            <returns>Always returns true to indicate successful serialization.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Deserialize(System.String)">
            <summary>
            Deserializes a TypeKey from its string representation.
            Parses a pipe-delimited string to restore assembly and type information.
            </summary>
            <param name="_Value">The serialized string representation to deserialize from.</param>
            <returns>True if deserialization was successful; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Value is null.</exception>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping">
            <summary>
            Defines the contract for mapping member keys to their obfuscated name values.
            Provides functionality to store, retrieve, and manage the mapping between original member identifiers
            and their corresponding obfuscated names during the obfuscation process.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.Add(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Adds or updates a mapping between a member key and its obfuscated name.
            </summary>
            <param name="_Key">The original member key to map from.</param>
            <param name="_Value">The obfuscated name to map to.</param>
            <param name="_Override">If true, overwrites existing mappings; if false, preserves existing mappings.</param>
            <returns>True if the mapping was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.Get(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Retrieves the obfuscated name associated with the specified member key.
            </summary>
            <param name="_Key">The member key to retrieve the obfuscated name for.</param>
            <returns>The obfuscated name if found; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.GetAllMemberKeys(System.String)">
            <summary>
            Retrieves all member keys that are mapped to the same obfuscated name.
            Useful for identifying member groups that share the same obfuscated identifier.
            </summary>
            <param name="_Value">The obfuscated name to find all mapped keys for.</param>
            <returns>A list of all member keys mapped to the specified obfuscated name.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.GetAllMemberKeys``1(System.String)">
            <summary>
            Retrieves all member keys of a specific type that are mapped to the same obfuscated name.
            Provides type-safe access to member keys with filtering by key type.
            </summary>
            <typeparam name="TMemberKey">The specific member key type to filter by.</typeparam>
            <param name="_Value">The obfuscated name to find all mapped keys for.</param>
            <returns>A list of all member keys of the specified type mapped to the obfuscated name.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberReferenceMapping`2">
            <summary>
            Defines a generic contract for mapping member references to associated value objects.
            Provides a flexible mapping mechanism that can associate any type of value with member references.
            </summary>
            <typeparam name="TMemberReference">The type of member reference to use as mapping keys.</typeparam>
            <typeparam name="TObject">The type of object to associate with member references.</typeparam>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberReferenceMapping`2.Add(`0,`1,System.Boolean)">
            <summary>
            Adds or updates a mapping between a member reference and its associated value object.
            </summary>
            <param name="_Reference">The member reference to use as the mapping key.</param>
            <param name="_Value">The value object to associate with the member reference.</param>
            <param name="_Override">If true, overwrites existing mappings; if false, preserves existing mappings.</param>
            <returns>True if the mapping was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping">
            <summary>
            Manages the mapping between original member keys and their obfuscated names.
            Provides storage, retrieval, and serialization capabilities for member name mappings during obfuscation.
            Supports JSON serialization for persistence and supports grouping of related members.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.#ctor(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Initializes a new instance of the MemberKeyMapping class for the specified member type.
            </summary>
            <param name="_MemberType">The type of members this mapping will handle.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.MemberType">
            <summary>
            Gets the type of members that this mapping handles.
            Used to categorize and filter mappings by member type during obfuscation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.memberKeyToObfuscatedNameDictionary">
            <summary>
            Dictionary mapping original member keys to their obfuscated names.
            Stores the core mapping data for member name obfuscation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.obfuscatedSimplifiedNameToMemberKeyListDictionary">
            <summary>
            Obfuscated Name without generic suffix (simplified), List of (Original) Member Full Name.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.Add(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Add or override an obfuscated name for a extended full name.
            For example: System.Void Method().
            </summary>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.Get(GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Get the obfuscated name for a member based on its original full name.
            For example: System.Void Method().
            </summary>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.GetAllMemberKeys(System.String)">
            <summary>
            Returns a list of all members original keys by its obfuscated name or simplified obfuscated name.
            If there is none, returns an empty list.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.GetAllMemberKeys``1(System.String)">
            <summary>
            Returns a list of all members original keys as TMemberKey by its obfuscated name or simplified obfuscated name.
            If there is none, returns an empty list.
            </summary>
            <typeparam name="TMemberKey"></typeparam>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.GetEnumerator">
            <summary>
            Enumerator for mapping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.OnCustomSerialization">
            <summary>
            Serialize to custom json object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.OnCustomDeserialization(GUPS.Serialization.Json.JsonObject)">
            <summary>
            Deserialize from custom json object.
            </summary>
            <param name="_JsonObject"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberReferenceMapping`2">
            <summary>
            Implements mapping functionality for associating member references with their original member keys.
            Maintains a collection of reference-to-key pairs to track the relationship between member references
            and their resolved member definitions during obfuscation processing.
            </summary>
            <typeparam name="TMemberReference">The type of member reference to map from.</typeparam>
            <typeparam name="TMemberKey">The type of member key to map to.</typeparam>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberReferenceMapping`2.ReferenceList">
            <summary>
            Gets the collection of member reference to member key pairs.
            Each pair represents the mapping between a member reference and its resolved original member key.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberReferenceMapping`2.Add(`0,`1,System.Boolean)">
            <summary>
            Adds a mapping between a member reference and its resolved definition's original member key.
            </summary>
            <param name="_Reference">The member reference to add to the mapping.</param>
            <param name="_OriginalMemberKey">The original member key of the resolved definition.</param>
            <param name="_Override">If true, allows overwriting existing mappings (currently not implemented).</param>
            <returns>True if the mapping was successfully added.</returns>
            <exception cref="T:System.NotImplementedException">Thrown when _Override is true, as override functionality is not implemented.</exception>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.EventMatchHelper">
            <summary>
            Provides functionality for comparing and matching event definitions during obfuscation.
            Used to determine if events have compatible signatures for grouping and inheritance analysis.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.EventMatchHelper.EventMatch(GUPS.Mono.Cecil.EventDefinition,GUPS.Mono.Cecil.EventDefinition)">
            <summary>
            Determines whether two event definitions have matching signatures.
            Compares event name and event type for compatibility, ignoring accessor method differences.
            </summary>
            <param name="candidate">The first event to compare.</param>
            <param name="@event">The second event to compare.</param>
            <returns>True if the events have matching signatures; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.MethodMatchHelper">
            <summary>
            Provides functionality for comparing and matching method definitions during obfuscation.
            Used to determine if methods have compatible signatures for grouping and inheritance analysis.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.MethodMatchHelper.MethodMatch(GUPS.Mono.Cecil.MethodDefinition,GUPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Determines whether two method definitions have matching signatures.
            Compares method name, return type, and parameter types for compatibility.
            </summary>
            <param name="_Method_A">The first method to compare.</param>
            <param name="_Method_B">The second method to compare.</param>
            <returns>True if the methods have matching signatures; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.PropertyMatchHelper">
            <summary>
            Provides functionality for comparing and matching property definitions during obfuscation.
            Used to determine if properties have compatible signatures for grouping and inheritance analysis.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.PropertyMatchHelper.PropertyMatch(GUPS.Mono.Cecil.PropertyDefinition,GUPS.Mono.Cecil.PropertyDefinition)">
            <summary>
            Determines whether two property definitions have matching signatures.
            Compares property name and property type for compatibility, ignoring accessor method differences.
            </summary>
            <param name="candidate">The first property to compare.</param>
            <param name="property">The second property to compare.</param>
            <returns>True if the properties have matching signatures; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.TypeMatchHelper">
            <summary>
            Provides comprehensive type matching functionality for comparing various type references during obfuscation.
            Handles complex type scenarios including generic types, type specifications, modifiers, and generic parameters.
            Used throughout the obfuscation system to determine type compatibility and signature matching.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.TypeMatchHelper.TypeMatch(GUPS.Mono.Cecil.IModifierType,GUPS.Mono.Cecil.IModifierType)">
            <summary>
            Determines whether two modifier types match by comparing their modifier type and element type.
            </summary>
            <param name="a">The first modifier type to compare.</param>
            <param name="b">The second modifier type to compare.</param>
            <returns>True if both the modifier and element types match; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.TypeMatchHelper.TypeMatch(GUPS.Mono.Cecil.TypeSpecification,GUPS.Mono.Cecil.TypeSpecification)">
            <summary>
            Determines whether two type specifications match by analyzing their specific type categories.
            Handles generic instance types, modifier types, and other type specifications.
            </summary>
            <param name="a">The first type specification to compare.</param>
            <param name="b">The second type specification to compare.</param>
            <returns>True if the type specifications match according to their specific type rules; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.TypeMatchHelper.TypeMatch(GUPS.Mono.Cecil.GenericInstanceType,GUPS.Mono.Cecil.GenericInstanceType)">
            <summary>
            Determines whether two generic instance types match by comparing their element type and generic arguments.
            Verifies that both types have the same number of generic arguments and that each argument matches.
            </summary>
            <param name="a">The first generic instance type to compare.</param>
            <param name="b">The second generic instance type to compare.</param>
            <returns>True if the generic instance types have matching element types and generic arguments; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Mono.Member.Match.TypeMatchHelper.TypeMatch(GUPS.Mono.Cecil.TypeReference,GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Determines whether two type references match using the appropriate matching strategy.
            Handles generic parameters (always matching), type specifications, and regular type references.
            </summary>
            <param name="a">The first type reference to compare.</param>
            <param name="b">The second type reference to compare.</param>
            <returns>True if the type references match according to their specific type rules; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Params.AssemblyReaderParameters">
            <summary>
            Contains parameters for reading assemblies during the obfuscation process.
            This class is currently a placeholder for future assembly reading configuration options
            that may be needed during assembly loading and processing operations.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Mono.Params.AssemblyWriterParameters">
            <summary>
            Contains parameters for writing assemblies during the obfuscation process.
            Configures assembly signing and output options for the final obfuscated assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Params.AssemblyWriterParameters.SignAssembly">
            <summary>
            Gets or sets a value indicating whether the output assembly should be digitally signed.
            When true, the assembly will be signed using the specified private key for authenticity verification.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assembly.Mono.Params.AssemblyWriterParameters.PrivateKeyFilePath">
            <summary>
            Gets or sets the file path to the private key used for assembly signing.
            This should point to a valid private key file (.pfx, .snk, etc.) used for digital signing.
            Only used when SignAssembly is true.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper">
            <summary>
            Helper class for working with Unity's AssemblyDefinition assets.
            Provides utilities for finding and analyzing Unity assembly definitions.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.FindAllAssemblyDefinitionFiles">
            <summary>
            Retrieves a list of all assembly definitions in the Unity project.
            Uses Unity's CompilationPipeline to get player assemblies.
            </summary>
            <returns>A list of all assembly definitions in the project.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.IsTestAssembly(UnityEditor.Compilation.Assembly)">
            <summary>
            Determines whether an assembly is a test assembly.
            Checks if the assembly references UnityEngine.TestRunner.
            Note: This applies only for Unity 2019.2 or later, as earlier versions don't include test assemblies in UnityEditor.Compilation.
            </summary>
            <param name="_AssemblyDefinitionFile">The assembly to check.</param>
            <returns>True if the assembly is a test assembly; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.IsAssemblyDefinitionFileAssembly(System.String)">
            <summary>
            Determines whether an assembly is defined by an Assembly Definition file in the Unity project.
            Checks if the assembly name matches any of the assembly definitions found in the project.
            </summary>
            <param name="_AssemblyName">The name or path of the assembly to check.</param>
            <returns>True if the assembly is defined by an Assembly Definition file; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.IsPreCompiledAssembly(System.String)">
            <summary>
            Determines whether an assembly is a pre-compiled (external) assembly.
            An assembly is considered pre-compiled if it is not defined by an Assembly Definition file.
            </summary>
            <param name="_AssemblyName">The name or path of the assembly to check.</param>
            <returns>True if the assembly is pre-compiled; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.FieldDefinitionHelper">
            <summary>
            Helper class for working with Unity-specific field definitions.
            Provides utilities for checking Unity-specific attributes and behaviors on fields.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.FieldDefinitionHelper.IsFieldSerializeAble(GUPS.Mono.Cecil.FieldDefinition)">
            <summary>
            Determines whether a field is serializable by Unity.
            Checks if the field has the Unity [SerializeField] attribute.
            </summary>
            <param name="_Field">The field to check.</param>
            <returns>True if the field has the SerializeField attribute; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper">
            <summary>
            Helper class for Unity-specific type definitions and operations.
            Provides methods to check if types inherit from Unity base classes and to analyze serialization capabilities.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsMonoBehaviour(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.MonoBehaviour.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from MonoBehaviour; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsNetworkBehaviour(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Networking.NetworkBehaviour.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from NetworkBehaviour; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsScriptableObject(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.ScriptableObject.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from ScriptableObject; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsPlayable(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Playables.Playable.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from Playable; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsPlayableAsset(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Playables.PlayableAsset.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from PlayableAsset; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsPlayableBehaviour(GUPS.Mono.Cecil.TypeDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Playables.PlayableBehaviour.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from PlayableBehaviour; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsSomeFieldInTypeSerializable(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines whether a type has any fields that are serializable by Unity.
            Checks all fields in the type for the SerializeField attribute.
            </summary>
            <param name="_TypeDefinition">The type to check for serializable fields.</param>
            <returns>True if the type has at least one serializable field; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _TypeDefinition is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsSomeFieldInTypeOrBaseSerializable(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines whether a type or any of its base types has any fields that are serializable by Unity.
            Recursively checks the type hierarchy for serializable fields.
            </summary>
            <param name="_TypeDefinition">The type to check for serializable fields.</param>
            <returns>True if the type or any of its base types has at least one serializable field; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _TypeDefinition is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Extension.TypeReferenceExtension.GetScopeName(GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Returns the simplified name for the assembly where a type can be found,
            for example, a type whose module is "Assembly.dll", "Assembly" would be 
            returned.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache">
            <summary>
            A cache for Unity assets that provides fast access to assets by file extension.
            Collects and organizes assets from the Unity project based on specified file extensions.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.#ctor(System.String[])">
            <summary>
            Instantiate a new <see cref="T:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache"/> with the given extensions.
            </summary>
            <param name="_ExtensionToIterateArray">The extensions to include in the cache.</param>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.extensionToIterateArray">
            <summary>
            The file extensions to include in the cache.
            Each extension should include the dot (e.g., ".prefab", ".asset").
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.extensionToAssetPathArrayDictionary">
            <summary>
            Dictionary mapping file extensions to lists of asset references.
            Keys are extensions (including the dot, e.g., ".prefab") and values are lists of asset references.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.CreateCache">
            <summary>
            Create the asset cache based on the given extensions.
            </summary>
            <returns>True if the cache was created successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.GetUnityAssetReferences(System.String)">
            <summary>
            Gets all asset references for a specific file extension.
            </summary>
            <param name="_Extension">The file extension to get assets for (including the dot, e.g., ".prefab").</param>
            <returns>A list of asset references matching the specified extension, or an empty list if none are found.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.GetUnityAssetReferences">
            <summary>
            Gets all cached asset references organized by file extension.
            </summary>
            <returns>A dictionary mapping file extensions to lists of asset references.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.Load">
            <summary>
            Loads the asset cache by finding all assets with the specified extensions in the project.
            </summary>
            <returns>True if the cache was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.Unload">
            <summary>
            Unloads the asset cache by clearing all cached references.
            </summary>
            <returns>True if the cache was unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference">
            <summary>
            Represents a reference to a Unity asset file.
            Provides access to the asset's path, name, and extension information.
            Implements IFileReference to support standard file operations.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.RelativeFilePath">
            <summary>
            Gets the relative path of the asset including name and extension.
            Format: Assets/[Directory]/[Asset][Extension]
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.GUPS#Editor#IO#File#IFileReference#FilePath">
            <summary>
            Gets the file path as required by the IFileReference interface.
            Returns the same value as RelativeFilePath.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.FileName">
            <summary>
            Gets the name of the asset file without the extension.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.FileExtension">
            <summary>
            Gets the file extension of the asset, including the dot (e.g., ".prefab", ".asset").
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference"/> class.
            Parses the provided path to extract file name and extension information.
            </summary>
            <param name="_RelativeFilePath">The relative path to the Unity asset file.</param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow">
            <summary>
            Editor window for deobfuscating stack traces using a mapping file.
            Allows users to paste obfuscated stack traces and convert them back to their original form.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.LoadMapping">
            <summary>
            Loads the obfuscation mapping file from the specified path.
            </summary>
            <returns>True if the mapping was successfully loaded; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.LoadContainer">
            <summary>
            Initializes the UI container with all required elements.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.DeObfuscateStackTrace">
            <summary>
            Deobfuscates the stack trace using the loaded mapping file.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.ShowWindow">
            <summary>
            Shows the ErrorStackWindow editor window.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.Load">
            <summary>
            Loads the window settings and initializes the container.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.mappingFilePath">
            <summary>
            Value / Full file path.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.stackTrace">
            <summary>
            Value / The stack trace..
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.scrollPosition">
            <summary>
            Scrollview position 2d.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.OnGUI">
            <summary>
            Draws the GUI for the ErrorStackWindow.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.IterateStackTraceLines">
            <summary>
            Processes each line of the stack trace and deobfuscates it.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.PrepareStackTraceLine(System.String)">
            <summary>
            Prepares a stack trace line for processing by removing unnecessary parts and formatting it.
            </summary>
            <param name="_Line">The stack trace line to prepare.</param>
            <returns>The prepared stack trace line.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.MethodInfo">
            <summary>
            Contains information about a method extracted from a stack trace line.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.CreateMethodInfo(System.String)">
            <summary>
            Creates a MethodInfo object from a prepared stack trace line.
            </summary>
            <param name="_Line">The prepared stack trace line.</param>
            <returns>A MethodInfo object containing the parsed information.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.FindOriginalFullName(GUPS.Obfuscator.Editor.Gui.ErrorStackWindow.MethodInfo)">
            <summary>
            Finds the original full name of a method from the mapping file.
            </summary>
            <param name="_MethodInfo">The method information to find the original name for.</param>
            <returns>The deobfuscated full name of the method.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorContainer.ComponentSettings">
            <summary>
            The settings belonging to this component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorContainer.IsPro">
            <summary>
            Is a pro setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorContent.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorContent.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorContent.GuiRow(System.Int32)">
            <summary>
            Renders the row at _Index.
            </summary>
            <param name="_Index"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorContent.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorDescription.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorDescription.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorDescription.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.HeaderText">
            <summary>
            Text the header shows.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.ComponentSettings">
            <summary>
            Settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.Load">
            <summary>
            Load content by settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.Save">
            <summary>
            Store content to settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.IsActivateAble">
            <summary>
            Is activate able header.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.ActivateAbleSettingId">
            <summary>
            Settings used to active/deactive.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.IsActive">
            <summary>
            The header checkbox value.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.Height">
            <summary>
            Height of the header.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.FoldOut">
            <summary>
            Is foldout or not.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.FoldOut_Texture_In">
            <summary>
            Foldin texture.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.FoldOut_Texture_Out">
            <summary>
            Foldout texture.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.checkbox">
            <summary>
            Checkbox for the activation.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.ObfuscatorHeader.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.EObfuscatorCategory">
            <summary>
            Represents the different categories in the obfuscator settings window.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Obfuscation">
            <summary>
            Settings related to core obfuscation features.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Security">
            <summary>
            Settings related to security features.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Compatibility">
            <summary>
            Settings related to compatibility with other systems.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Optional">
            <summary>
            Optional settings that can be enabled or disabled.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.AccessHelper">
            <summary>
            Helper class for determining access levels and feature availability.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.AccessHelper.IsProActive">
            <summary>
            Determines if the Pro version of the obfuscator is active.
            </summary>
            <returns>True if the Pro version is active; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.SettingsWindow">
            <summary>
            Unity Editor settings window for the global project wide Obfuscator configuration.
            Provides a tabbed interface for obfuscation settings organized by category:
            Obfuscation, Security, Compatibility, and Optional features.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.CreateObfuscatorSettingsProvider">
            <summary>
            Creates a Unity SettingsProvider for the Obfuscator settings in Project Settings.
            Handles GUI rendering, settings persistence, and lifecycle management.
            </summary>
            <returns>Configured SettingsProvider for Unity's Project Settings integration.</returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.settings">
            <summary>
            The current obfuscator settings instance containing all configuration data.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.Load_Settings">
            <summary>
            Loads the obfuscator settings from persistent storage.
            Creates default settings if no file exists.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.Save_Settings">
            <summary>
            Saves the current obfuscator settings to persistent storage.
            Called automatically when changes are detected or window is deactivated.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.rateTexture">
            <summary>
            Cached texture for the Asset Store rating button.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.bugQuestionTexture">
            <summary>
            Cached texture for the bug report/support button.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.headerIconTexture">
            <summary>
            Cached texture for the header icon.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.obfuscationIconTexture">
            <summary>
            Cached texture for the Obfuscation tab icon.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.securityIconTexture">
            <summary>
            Cached texture for the Security tab icon.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.compatibilityIconTexture">
            <summary>
            Cached texture for the Compatibility tab icon.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.optionalIconTexture">
            <summary>
            Cached texture for the Optional tab icon.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.Load_Textures">
            <summary>
            Loads all required textures once to avoid repeated file I/O during GUI rendering.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.categoryContainerListDictionary">
            <summary>
            Dictionary mapping obfuscation categories to their respective GUI container lists.
            Used for organizing settings into tabs (Obfuscation, Security, Compatibility, Optional).
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.Load_Containers">
            <summary>
            Loads and organizes all available GUI containers by their respective categories.
            Dynamically discovers components and creates their GUI containers.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.scrollPosition">
            <summary>
            Current scroll position for the settings window's scrollable content area.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.row_Obfuscator">
            <summary>
            GUI row component displaying the obfuscator version information.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.row_GlobalObfuscation">
            <summary>
            GUI row component for the global obfuscation enable/disable toggle.
            Controls whether all other obfuscation settings are active.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.SettingsWindow.tabIndex">
            <summary>
            Current active tab index for the settings window's tabbed interface.
            0=Obfuscation, 1=Security, 2=Compatibility, 3=Optional.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.Setup_Gui">
            <summary>
            Initializes all GUI elements for the settings window.
            Creates version display, global toggle, and loads all GUI containers.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Gui.SettingsWindow.GetGui(System.String)">
            <summary>
            Renders the complete obfuscator settings GUI interface.
            Handles container updates, header rendering, tabbed interface, and auto-save.
            </summary>
            <param name="_SearchContext">Unity's search context string (currently unused).</param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle">
            <summary>
            Standard obfuscator GUI style with blue branding theme.
            Extends DefaultStyle with custom container header styling.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle.Style">
            <summary>
            Static ObfuscatorStyle reference.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle.Container_Header_Background_Texture">
            <summary>
            Cached texture for the container header background to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle.Container_Header_Background">
            <summary>
            Gets the container header background style with blue branding color.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle.Container_Header_Label">
            <summary>
            Gets the container header label style with white text for blue background.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro">
            <summary>
            Professional obfuscator GUI style with golden branding theme.
            Extends ObfuscatorStyle with enhanced Pro version styling and custom textures.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Style">
            <summary>
            Static ObfuscatorStyle_Pro reference.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Container_Header_Background_Texture">
            <summary>
            Cached texture for the container header background to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Container_Header_Background">
            <summary>
            Gets the container header background style with golden Pro branding color.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Container_Header_Label">
            <summary>
            Gets the container header label style with black text for golden background.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Row_Background_Light_Texture">
            <summary>
            Cached texture for the light row background to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Row_Background_Light">
            <summary>
            Gets the light row background style with subtle golden Pro branding.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Row_Background_Dark_Texture">
            <summary>
            Cached texture for the dark row background to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Row_Background_Dark">
            <summary>
            Gets the dark row background style with enhanced golden Pro branding.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.CheckBox_On_Texture">
            <summary>
            Cached texture for the checked checkbox state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.CheckBox_On">
            <summary>
            Gets the Pro version texture for checked checkboxes.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.FoldOut_In_Texture">
            <summary>
            Cached texture for the collapsed foldout state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.FoldOut_In">
            <summary>
            Gets the Pro version texture for collapsed foldout controls.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.FoldOut_Out_Texture">
            <summary>
            Cached texture for the expanded foldout state to avoid repeated loading.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.FoldOut_Out">
            <summary>
            Gets the Pro version texture for expanded foldout controls.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Component.Gui.Helper.GuiComponentHelper">
            <summary>
            Helper class for working with GUI components in the obfuscator.
            Provides utility methods to collect and manage GUI components from various parts of the obfuscator system.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Component.Gui.Helper.GuiComponentHelper.GetGuiComponents">
            <summary>
            Gets all available GUI components from different parts of the obfuscator.
            Collects components from PreBuild, PostAssemblyBuild, and other pipelines that implement IGuiComponent.
            </summary>
            <returns>A consolidated list of all GUI components from across the obfuscator system.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Component.Gui.IGuiComponent">
            <summary>
            Interface for components that provide a graphical user interface element in the obfuscator.
            Extends the base IComponent interface with GUI-specific functionality.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Component.Gui.IGuiComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            Used to identify and retrieve component-specific settings from the configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Component.Gui.IGuiComponent.ObfuscatorCategory">
            <summary>
            The category in the obfuscator settings window where this component should be displayed.
            Determines the grouping and placement of the component in the UI.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Component.Gui.IGuiComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container to be shown in the obfuscator settings window.
            </summary>
            <param name="_ComponentSettings">The component settings to use for configuring the GUI elements.</param>
            <returns>An ObfuscatorContainer with the component's GUI elements.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.Component.Helper.ComponentHelper">
            <summary>
            Helper class providing utility methods for working with obfuscator components.
            Contains static methods to assist with component management and operations.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent">
            <summary>
            Abstract base class for compatibility components in the obfuscator.
            Provides common functionality for components that ensure compatibility with various frameworks and libraries.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.ObfuscatorCategory">
            <summary>
            The ObfuscatorCategory of a CompatibilityComponent is always Compatibility.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container to be shown in the obfuscator settings window.
            Allows configuration of compatibility settings for this component.
            </summary>
            <param name="_ComponentSettings">The component settings to use for configuring the GUI elements.</param>
            <returns>An ObfuscatorContainer with the component's GUI elements.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.ToString">
            <summary>
            Returns a string representation of the compatibility component.
            </summary>
            <returns>The name of the compatibility component.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent">
            <summary>
            The compatibility component for Chartboost.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.CSkip_Chartboost">
            <summary>
            The settings key for the skip Chartboost setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.Helper_Has_SkipChartboostActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Chartboost setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent">
            <summary>
            The compatibility component for the DOTween (HOTween v2) from Demigiant.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.CSkip_DOTween">
            <summary>
            The settings key for the skip DOTween setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.Helper_Has_SkipDOTweenActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip DOTween setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent">
            <summary>
            The compatibility component for Google Sdks.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.CSkip_Google">
            <summary>
            The settings key for the skip Google setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.Helper_Has_SkipGoogleActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Google setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent">
            <summary>
            The compatibility component for Json Sdks.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.attributeToSkip">
            <summary>
            The list of attributes to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.IsFieldRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.String@)">
            <summary>
            Returns true if the field renaming is allowed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ApplyFieldRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.IsPropertyRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.String@)">
            <summary>
            Returns true if the property renaming is allowed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ApplyPropertyRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.CSkip_Json">
            <summary>
            The settings key for the skip Json setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.Helper_Has_SkipJsonActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Json setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent">
            <summary>
            The compatibility component for Meta Sdks.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.metaAssemblyToSkip">
            <summary>
            The meta assemblies to skip.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.facebookAssemblyToSkip">
            <summary>
            The facebook assemblies to skip.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.oculusAssemblyToSkip">
            <summary>
            The oculus assemblies to skip.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSkip_Meta_Assemblies">
            <summary>
            The settings key for the skip Meta assembly setting.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSkip_Facebook_Assemblies">
            <summary>
            The settings key for the skip Facebook assembly setting.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSkip_Oculus_Assemblies">
            <summary>
            The settings key for the skip Oculus assembly setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Helper_Has_SkipMetaAssembliesActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Meta assemblies setting.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Helper_Has_SkipFacebookAssembliesActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Facebook assemblies setting.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Helper_Has_OculusFacebookAssembliesActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Facebook assemblies setting.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent">
            <summary>
            The compatibility component for the PlayFab Sdk.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'PlayFab' namespaces.
            </summary>
            <returns>True if the whole namespace should be skipped; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.inheritanceTypeToSkip">
            <summary>
            The list of types, if inheriting from, should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.SkipWholeType(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole types that inherite from the 'PlayFab' request or response classes.
            </summary>
            <returns>True if the whole type should be skipped; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.IsTypeRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.ApplyTypeRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.CSkip_PlayFab">
            <summary>
            The settings key for the skip PlayFab setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.Helper_Has_SkipPlayFabActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip PlayFab setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent">
            <summary>
            The compatibility component for Photon Sdks.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusionAssemblyToSkip">
            <summary>
            The photon fusion assembly namespace to skip.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.quantumAssemblyToSkip">
            <summary>
            The photon quantum assembly namespace to skip.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip (legacy photon).
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.typesToSkip">
            <summary>
            The types to skip (legacy photon).
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.SkipWholeType(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsTypeRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the type should be renamed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyTypeRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusinFieldAttributesToSkip">
            <summary>
            The photon fusion field attributes to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsFieldRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.String@)">
            <summary>
            Returns true if the field should be renamed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyFieldRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusinPropertyAttributesToSkip">
            <summary>
            The photon fusion property attributes to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsPropertyRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.String@)">
            <summary>
            Returns true if the property should be renamed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyPropertyRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.methodsToSkip">
            <summary>
            The methods to skip (legacy photon).
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusinMethodAttributesToSkip">
            <summary>
            The photon fusion method attributes to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsMethodRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.MethodDefinition,System.String@)">
            <summary>
            Returns true if the method should be renamed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyMethodRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.MethodDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSkip_Photon">
            <summary>
            The settings key for the skip Photon setting.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSkip_Photon_Fusion_Assemblies">
            <summary>
            The settings key for the skip Photon Fusion assembly setting.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSkip_Photon_Quantum_Assemblies">
            <summary>
            The settings key for the skip Photon Quantum assembly setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Helper_Has_SkipPhotonActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Photon setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Helper_Has_SkipPhotonFusionActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Photon Fusion setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Helper_Has_SkipPhotonQuantumActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Photon Quantum setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent">
            <summary>
            Component for PixelCrushers assets (Dialogue System &amp; Quest Machine) compatibility.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.namespaceToSkip">
            <summary>
            The PixelCrushers namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'PixelCrushers' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the namespace renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom namespace renaming filter. Return a custom name for the namespace if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.CSkip_PixelCrushers">
            <summary>
            The settings key for the skip PixelCrushers setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.Helper_Has_SkipPixelCrushersActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip PixelCrushers setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent">
            <summary>
            The compatibility component for the PlayMaker Sdk.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.typesToSkip">
            <summary>
            The types to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.SkipWholeType(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole type should be skipped.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.IsTypeRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.ApplyTypeRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.CSkip_PlayMaker">
            <summary>
            The settings key for the skip PlayMaker setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.Helper_Has_SkipPlayMakerActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip PlayMaker setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent">
            <summary>
            Component for MongoDB Realms compatibility.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IRealmObjectBase(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IRealmObjectBase'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IRealmObjectBase', otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IAsymmetricObject(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IAsymmetricObject'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IAsymmetricObject', otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IEmbeddedObject(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IEmbeddedObject'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IEmbeddedObject', otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IRealmObject(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IRealmObject'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IRealmObject', otherwise false.</returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.namespaceToSkip">
            <summary>
            The realms namespace to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'Realms' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the namespace renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom namespace renaming filter. Return a custom name for the namespace if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.SkipWholeType(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole type (including the namespace name) if it is a Realm object.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the type (including the namespace name) should be skipped, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.IsTypeRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the type renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.ApplyTypeRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom type renaming filter. Return a custom name for the type if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.CSkip_Realms">
            <summary>
            The settings key for the skip Realms setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_Has_SkipRealmsActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Realms setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Helper_Setting_Obfuscate_Class_Serializable(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            False: Either Obfuscator Free or CObfuscate_Class_Serializable is false.
            True: CObfuscate_Class_Serializable is true.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Helper_Setting_Obfuscate_Field_Serializable(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            False: Either Obfuscator Free or CObfuscate_Field_Serializable is false.
            True: CObfuscate_Field_Serializable is true.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Helper_Setting_Obfuscate_Field_Public_Unity(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            False: Either Obfuscator Free or CObfuscate_Field_Public_Unity is false.
            True: CObfuscate_Field_Public_Unity is true.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.namespaceToSkip">
            <summary>
            The Unity-Core namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'UnityEngine' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.SkipWholeType(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Determines whether the entire type should be skipped from obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the type.</param>
            <param name="_TypeDefinition">The type definition to check.</param>
            <param name="_Cause">Outputs the reason for skipping, if applicable.</param>
            <returns>True if the type should be skipped from obfuscation; otherwise, false.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent">
            <summary>
            Component for Unity IAP (in-app purchases) package compatibility. More infos about package here: https://docs.unity3d.com/Packages/com.unity.purchasing@5.0/manual/index.html
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.namespaceToSkip">
            <summary>
            The Unity IAP namespaces to skip.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'UnityEngine.Purchasing' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the namespace renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom namespace renaming filter. Return a custom name for the namespace if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.CSkip_UnityPurchasing">
            <summary>
            The settings key for the skip Unity IAP setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.Helper_Has_SkipUnityPurchasingActivated(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Unity IAP setting.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Helper.ComponentHelper">
            <summary>
            Helper class for managing and retrieving compatibility components.
            Provides methods to get built-in and plugin compatibility components for the obfuscator.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Helper.ComponentHelper.GetObfuscationCompatibilityComponentList">
            <summary>
            Returns a comprehensive list of all obfuscator compatibility components.
            Includes built-in components for .NET, Unity, and various third-party frameworks,
            as well as any user-defined plugin components.
            </summary>
            <returns>A list containing all available compatibility components.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Helper.ComponentHelper.GetObfuscationCompatibilityPluginComponents">
            <summary>
            Discovers and instantiates all user-defined compatibility plugin components.
            Uses reflection to find all non-abstract classes implementing IObfuscationCompatibilityPluginComponent
            and creates instances of them.
            </summary>
            <returns>A list of instantiated user-defined compatibility plugin components.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IEventCompatibility">
            <summary>
            Interface for compatibility components that handle event-related compatibility during obfuscation.
            Provides methods to determine if events can be renamed and to filter event names to ensure compatibility.
            Implementations ensure that event obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IEventCompatibility.IsEventRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.EventDefinition,System.String@)">
            <summary>
            Determines whether the specified event can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the event.</param>
            <param name="_EventDefinition">The event definition to check for renaming eligibility.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the event can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IEventCompatibility.ApplyEventRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.EventDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated event name, allowing compatibility components to modify it if necessary.
            This enables special handling for events that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the event.</param>
            <param name="_EventDefinition">The event definition being renamed.</param>
            <param name="_OriginalName">The original name of the event before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the event after filtering.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IFieldCompatibility">
            <summary>
            Interface for compatibility components that handle field-related compatibility during obfuscation.
            Provides methods to determine if fields can be renamed and to filter field names to ensure compatibility.
            Implementations ensure that field obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IFieldCompatibility.IsFieldRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.String@)">
            <summary>
            Determines whether the specified field can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the field.</param>
            <param name="_FieldDefinition">The field definition to check for renaming eligibility.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the field can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IFieldCompatibility.ApplyFieldRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated field name, allowing compatibility components to modify it if necessary.
            This enables special handling for fields that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the field.</param>
            <param name="_FieldDefinition">The field definition being renamed.</param>
            <param name="_OriginalName">The original name of the field before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the field after filtering.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IMethodCompatibility">
            <summary>
            Interface for compatibility components that handle method-related compatibility during obfuscation.
            Provides methods to determine if methods can be renamed and to filter method names to ensure compatibility.
            Implementations ensure that method obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IMethodCompatibility.IsMethodRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.MethodDefinition,System.String@)">
            <summary>
            Determines whether the specified method can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the method.</param>
            <param name="_MethodDefinition">The method definition to check for renaming eligibility.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the method can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IMethodCompatibility.ApplyMethodRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.MethodDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated method name, allowing compatibility components to modify it if necessary.
            This enables special handling for methods that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the method.</param>
            <param name="_MethodDefinition">The method definition being renamed.</param>
            <param name="_OriginalName">The original name of the method before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the method after filtering.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility">
            <summary>
            Interface for compatibility components that handle namespace-related compatibility during obfuscation.
            Provides methods to determine if namespaces can be renamed or should be skipped entirely.
            Implementations ensure that namespace obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility.SkipWholeNamespace(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Determines whether an entire namespace and all its members should be skipped during obfuscation.
            Used to exclude critical namespaces that must remain unchanged for framework compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the namespace.</param>
            <param name="_TypeDefinition">A type definition within the namespace to check.</param>
            <param name="_Cause">When the method returns true, contains the reason why the namespace should be skipped.</param>
            <returns>True if the entire namespace should be skipped; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility.IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Determines whether the specified namespace can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the namespace.</param>
            <param name="_TypeDefinition">A type definition within the namespace to check.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the namespace can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility.ApplyNamespaceRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated namespace name, allowing compatibility components to modify it if necessary.
            This enables special handling for namespaces that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the namespace.</param>
            <param name="_TypeDefinition">A type definition within the namespace being renamed.</param>
            <param name="_OriginalName">The original name of the namespace before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the namespace after filtering.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IPropertyCompatibility">
            <summary>
            Interface for compatibility components that handle property-related compatibility during obfuscation.
            Provides methods to determine if properties can be renamed and to filter property names to ensure compatibility.
            Implementations ensure that property obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IPropertyCompatibility.IsPropertyRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.String@)">
            <summary>
            Determines whether the specified property can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the property.</param>
            <param name="_PropertyDefinition">The property definition to check for renaming eligibility.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the property can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IPropertyCompatibility.ApplyPropertyRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated property name, allowing compatibility components to modify it if necessary.
            This enables special handling for properties that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the property.</param>
            <param name="_PropertyDefinition">The property definition being renamed.</param>
            <param name="_OriginalName">The original name of the property before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the property after filtering.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility">
            <summary>
            Interface for compatibility components that handle type-related compatibility during obfuscation.
            Provides methods to determine if types can be renamed or should be skipped entirely.
            Implementations ensure that type obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility.SkipWholeType(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Determines whether an entire type and all its members should be skipped during obfuscation.
            Used to exclude critical types that must remain unchanged for framework compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the type.</param>
            <param name="_TypeDefinition">The type definition to check for skipping.</param>
            <param name="_Cause">When the method returns true, contains the reason why the type should be skipped.</param>
            <returns>True if the entire type should be skipped; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility.IsTypeRenamingAllowed(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Determines whether the specified type can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the type.</param>
            <param name="_TypeDefinition">The type definition to check for renaming eligibility.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the type can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility.ApplyTypeRenamingFilter(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated type name, allowing compatibility components to modify it if necessary.
            This enables special handling for types that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the type.</param>
            <param name="_TypeDefinition">The type definition being renamed.</param>
            <param name="_OriginalName">The original name of the type before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the type after filtering.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IObfuscationCompatibilityComponent">
            <summary>
            Interface for compatibility components that ensure proper functionality of obfuscated code with various frameworks and libraries.
            These components operate independently from the main pipeline process and provide compatibility checks and fixes.
            All compatibility components are called by their corresponding member obfuscation components during the obfuscation process.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IObfuscationCompatibilityPluginComponent">
            <summary>
            Interface for plugin-specific compatibility components that operate independently from the main pipeline process.
            Extends the base IObfuscationCompatibilityComponent interface to specifically handle plugin compatibility.
            These components are called by their corresponding member obfuscation components to ensure proper plugin functionality after obfuscation.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer">
            <summary>
            Contains all the data the obfuscation project needs.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.ComponentList">
            <summary>
            All pipeline obfuscator components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.CompatibilityComponentList">
            <summary>
            All obfuscator compatibility components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.AssemblyLoadInfoList">
            <summary>
            Information about to load assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.AssemblyDependencyDirectoryPathList">
            <summary>
            Directory path to all assembly dependencies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.ObfuscateAssemblyList">
            <summary>
            Contains the to obfuscate assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.HelperAssemblyList">
            <summary>
            Contains the helper assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.AssemblyResolver">
            <summary>
            Used to resolve assemblies and their types.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.CacheDictionary">
            <summary>
            MemberType, Cache
            Contains the cache of all members.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.RenameManager">
            <summary>
            Manages what types/members should or should not get obfuscated. And their renaming mapping.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent">
            <summary>
            Abstract base class for post-assembly build obfuscation components.
            Provides common functionality and access to pipeline resources for all obfuscation components.
            Each component implements specific obfuscation operations within the pipeline.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.Pipeline">
            <summary>
            Gets the post-assembly build pipeline that this component belongs to.
            Provides access to other pipeline components and shared resources.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.DataContainer">
            <summary>
            Gets the data container of the pipeline.
            Provides access to assemblies, caches, mappings, and other shared obfuscation data.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.Step">
            <summary>
            Gets the post-assembly build step that this pipeline and component belong to.
            Provides access to step-level configuration and operations.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.CanBeProcessedByComponent(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Determines whether the specified assembly should be processed by this component.
            Default implementation only processes assemblies marked for obfuscation.
            Derived classes can override this to implement component-specific filtering logic.
            </summary>
            <param name="_AssemblyLoadInfo">The assembly load information to evaluate for processing eligibility.</param>
            <returns>True if the assembly should be processed by this component; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.PreLoad_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Performs preprocessing operations on assembly load information before the assembly is loaded into memory.
            This special hook is called independently from the main pipeline process and allows components
            to modify load parameters, validate assembly information, or perform setup operations.
            Default implementation returns true (success) without performing any operations.
            </summary>
            <param name="_AssemblyLoadInfo">The assembly load information to preprocess before loading.</param>
            <returns>True if preprocessing was successful and the assembly can be loaded; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.PreSave_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs preprocessing operations on the assembly immediately before it is saved to disk.
            This method is called after all obfuscation operations are complete but before the assembly
            is written to the file system, allowing for final validation, cleanup, or last-minute modifications.
            Default implementation returns true (success) without performing any operations.
            </summary>
            <param name="_AssemblyInfo">The assembly information to preprocess before saving.</param>
            <returns>True if preprocessing was successful and the assembly can be saved; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.PostSave_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs postprocessing operations after the assembly has been obfuscated and saved to disk.
            This special hook is called independently from the main pipeline process and allows components
            to perform cleanup, logging, verification, or additional processing on the saved assembly.
            Default implementation returns true (success) without performing any operations.
            </summary>
            <param name="_AssemblyInfo">The assembly information that was processed and saved.</param>
            <returns>True if postprocessing was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent">
            <summary>
            Core component responsible for assembly-level obfuscation operations and assembly provisioning.
            Manages the loading of assemblies to be obfuscated, configures assembly processing settings,
            and provides the foundational assembly information needed by other pipeline components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the assembly settings component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.Description">
            <summary>
            Gets a description of what this component does.
            Explains the component's role in assembly management and configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent">
            <summary>
            Handles compatibility and obfuscation of Unity Addressable asset bundles after assembly processing.
            Updates addressable catalogs and bundle references to maintain functionality when assembly
            names and types are obfuscated, ensuring addressable assets continue to load correctly.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CEnable_Try_Obfuscate_Addressables">
            <summary>
            The settings key to obfuscate addressables.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CCustom_Addressable_Paths">
            <summary>
            The settings key for custom addressable paths.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The gui container.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.BUILD_TARGET_PLACEHOLDER">
            <summary>
            The placeholder for the build target in the custom addressable paths.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.buildTargetMapping">
            <summary>
            Maps the build target to the Addressables platform subfolder.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetAddressablesPlatformPathInternal(UnityEditor.BuildTarget)">
            <summary>
            Maps the build target to the Addressables platform subfolder. If the build target is not found in the mapping, it will return the build target as a string.
            </summary>
            <param name="_Target">The build target to get the Addressables platform subfolder for.</param>
            <returns>The Addressables platform subfolder for the build target.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetPlatformPathSubFolder">
            <summary>
            Retrieves the Addressables platform subfolder of the build platform that is targeted.
            </summary>
            <remarks>
            For example: 
            - StandaloneWindows, StandaloneWindows64 > Windows <br />
            - StandaloneOSX > OSX <br />
            - StandaloneLinux64 > Linux <br />
            ...
            </remarks>
            <returns>Returns the Addressables platform subfolder of the build platform that is targeted.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CatalogBuildPath">
            <summary>
            The catalog while always be build inside the default build path.
            </summary>
            <remarks>
            If older 2021.2: Assets/StreamingAssets/aa/[SubPlatform].<br />
            If newer 2021.2: Library/com.unity.addressables/aa/[SubPlatform].<br />
            ...
            </remarks>
            <returns>Returns the default build path for the catalog file build.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.DefaultBuildPath">
            <summary>
            Retrieves the default build path for the Addressables build.
            </summary>
            <remarks>
            If older 2021.2: Assets/StreamingAssets/aa/[SubPlatform]/[Platform].<br />
            If newer 2021.2: Library/com.unity.addressables/aa/[SubPlatform]/[Platform].<br />
            ...
            </remarks>
            <returns>Returns the default build path for the Addressables build.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent">
            <summary>
            Provides compatibility support for Unity Animation system during obfuscation.
            Protects animation-related methods from being obfuscated to ensure Unity's animation
            system can continue to invoke methods through reflection and string-based lookups.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the animation compatibility component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods">
            <summary>
            The settings key to enable the try find inspector animation methods.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods_In_Models">
            <summary>
            The settings key to enable the try find inspector animation methods in models.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods_In_AnimationClips">
            <summary>
            The settings key to enable the try find inspector animation methods in animations.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods_In_AnimatorControllers">
            <summary>
            The settings key to enable the try find inspector animation methods in animator controllers.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            The gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ReferencedAnimationMethodHashSet">
            <summary>
            A hashset of all references animation methods.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ReferencedStateMachineBehaviourList">
            <summary>
            A list of all references StateMachineBehaviour classes.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.OnAnalyse_A_Skip_StateMachineBehaviour_Types(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse for referenced StateMachineBehaviour types. Skip those types and serializeable fields.
            </summary>
            <param name="_AssemblyInfo">The assembly info to analyse.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.OnAnalyse_A_Skip_Animiation_Methods(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse for referenced animation methods. Skip those methods.
            </summary>
            <param name="_AssemblyInfo">The assembly info to analyse.</param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent">
            <summary>
            Provides compatibility support for string-based reflection and coroutine operations.
            Analyzes IL code to identify members accessed through string literals and protects them
            from obfuscation to maintain runtime functionality that depends on original member names.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the string reflection compatibility component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.IsActive">
            <summary>
            True: StringReflectionComponent is active.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.stringHashSet">
            <summary>
            HashSet of all strings inside the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.OnAnalyse_A_FindStringsInMethods(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Methods strings.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.OnAnalyse_A_Skip_TypesAndMethods(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Types and Methods to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent">
            <summary>
            Provides compatibility support for Unity Event system during obfuscation.
            Protects methods referenced by Unity Events from being obfuscated to ensure
            the event system can continue to invoke methods through serialized references.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the Unity Event compatibility component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CEnable_Try_Find_Inspector_Unity_Event_Methods">
            <summary>
            The settings key to enable the try find inspector unity event methods.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CEnable_Try_Find_Inspector_Unity_Event_Methods_In_Scenes">
            <summary>
            The settings key to enable the try find inspector unity event methods in scenes.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CEnable_Try_Find_Inspector_Unity_Event_Methods_In_Prefabs">
            <summary>
            The settings key to enable the try find inspector unity event methods in prefabs.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            The gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.ReferencedEventMethodHashSet">
            <summary>
            A list of all references unity event methods.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            Reads the analysed unity event methods from the preprocessing step.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Search methods to skip.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnAnalyse_A_Skip_Methods(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Methods to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Does nothing.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Does nothing.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Does nothing.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent">
            <summary>
            Debug component that tracks and reports reasons why members were not obfuscated.
            Provides detailed analysis and logging of obfuscation exclusions to help developers
            understand why certain members remained unchanged during the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the obfuscation exclusion tracking component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent">
            <summary>
            Removes obfuscator-specific attributes from assemblies after obfuscation is complete.
            Cleans up custom attributes that were used during the obfuscation process to ensure
            the final build doesn't contain obfuscator implementation details or references.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the attribute removal component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent.Description">
            <summary>
            Gets a description of what this component does.
            Explains the component's role in cleaning up obfuscator references from the final build.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent">
            <summary>
            Provides comprehensive logging and reporting functionality for the obfuscation process.
            Tracks obfuscation progress, member processing statistics, and generates detailed reports
            about what was obfuscated and what was excluded during the process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the logging and reporting component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Provides helper methods for managing and retrieving post-assembly build pipeline components.
            Offers centralized access to all built-in obfuscation components and supports plugin component discovery.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Helper.ComponentHelper.GetObfuscatorPipelineComponentList">
            <summary>
            Retrieves a complete list of all available post-assembly build pipeline components.
            Includes built-in components for assembly processing, member obfuscation, compatibility,
            security features, and optional enhancements in the correct execution order.
            </summary>
            <returns>A list of all pipeline components ready for use in the obfuscation process.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Helper.ComponentHelper.GetPostAssemblyBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent">
            <summary>
            Defines the contract for components that perform assembly processing operations during obfuscation.
            Provides a structured pipeline for analyzing, obfuscating, and post-processing assemblies
            with distinct phases for different types of operations.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis of an assembly during the first analysis phase.
            This phase is used for gathering information and preparing for obfuscation operations.
            </summary>
            <param name="_AssemblyInfo">The assembly information to analyze.</param>
            <returns>True if analysis was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs secondary analysis of an assembly after all components have completed their initial analysis.
            This phase allows components to make decisions based on the complete analysis context.
            </summary>
            <param name="_AssemblyInfo">The assembly information to post-analyze.</param>
            <returns>True if post-analysis was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Applies obfuscation transformations to the specified assembly.
            This is the main obfuscation phase where actual code modifications are performed.
            </summary>
            <param name="_AssemblyInfo">The assembly information to obfuscate.</param>
            <returns>True if obfuscation was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs cleanup and finalization operations after assembly obfuscation is complete.
            This phase is used for validation, cleanup, and any final adjustments needed.
            </summary>
            <param name="_AssemblyInfo">The assembly information that was obfuscated.</param>
            <returns>True if post-obfuscation processing was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProvidingComponent">
            <summary>
            Defines the contract for components that provide assemblies and their dependencies for obfuscation processing.
            These components are responsible for discovering and configuring which assemblies should be obfuscated
            and where their dependencies can be found.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProvidingComponent.GetAssemblyLoadInfoList">
            <summary>
            Retrieves a list of all assemblies that should be included in the obfuscation process.
            This includes both assemblies to be obfuscated and helper assemblies needed for reference resolution.
            </summary>
            <returns>A list of assembly load information for all assemblies to be processed.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProvidingComponent.GetAssemblyReferenceDirectoryList">
            <summary>
            Retrieves a list of directories containing assemblies referenced by the assemblies being obfuscated.
            These directories are used for dependency resolution during the obfuscation process.
            </summary>
            <returns>A list of directory paths where referenced assemblies can be found.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent">
            <summary>
            Defines the contract for post-assembly build obfuscation components.
            Components implement this interface to participate in the obfuscation pipeline
            and provide assembly preprocessing and postprocessing capabilities.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.CanBeProcessedByComponent(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Determines whether the specified assembly can be processed by this component.
            Used to filter which assemblies each component should handle based on their characteristics.
            </summary>
            <param name="_AssemblyLoadInfo">The assembly load information to evaluate.</param>
            <returns>True if the component can process the assembly; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.PreLoad_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Performs preprocessing operations on assembly load information before the assembly is loaded.
            This special hook allows components to modify load parameters or perform setup operations.
            </summary>
            <param name="_AssemblyLoadInfo">The assembly load information to preprocess.</param>
            <returns>True if preprocessing was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.PreSave_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs postprocessing operations on the assembly before it is saved to disk.
            Allows components to make final modifications or validations before persistence.
            </summary>
            <param name="_AssemblyInfo">The assembly information to postprocess.</param>
            <returns>True if postprocessing was successful; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.PostSave_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs cleanup or finalization operations after the assembly has been obfuscated and saved.
            This special hook allows components to perform cleanup, logging, or additional processing.
            </summary>
            <param name="_AssemblyInfo">The assembly information that was processed and saved.</param>
            <returns>True if post-save processing was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildPluginComponent">
            <summary>
            Defines the contract for custom plugin components in the post-assembly build pipeline.
            Extends IAssemblyProcessingComponent to provide plugin developers with a standardized way
            to integrate custom obfuscation logic into the processing pipeline.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2">
            <summary>
            Abstract base class for components that obfuscate specific types of members.
            Provides a comprehensive framework for member analysis, name generation, compatibility checking,
            and reference updating with strong typing for member-specific operations.
            </summary>
            <typeparam name="TMemberReference">The type of member reference this component works with (e.g., MethodReference, FieldReference).</typeparam>
            <typeparam name="TMemberKey">The type of member key used to identify and track the references during obfuscation.</typeparam>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Shown gui in the obfuscator settings window.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.MemberReferenceMapping">
            <summary>
            Contains a mapping of all member references inside the to obfuscate assemblies.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnAnalyse_A_ResolveAndAddToMapping(`0)">
            <summary>
            Add a _MemberReference to the memberReferenceMapping if _MemberReference can be resolved and is in to obfuscate assemblies.
            </summary>
            <param name="_MemberReference"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnAnalyse_A_FindMemberReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Return all the references this component will obfuscate too.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnAnalyse_A_FindMemberToNotRename(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Mark the Members to not rename here.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Obfuscate the member and references with the previous found names.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent">
            <summary>
            Component responsible for obfuscating event definitions and their references.
            Handles event name generation, compatibility checking with event-sensitive frameworks,
            and updating all event references throughout the processed assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the event obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnAnalyse_Helper_SkipEvent(GUPS.Mono.Cecil.EventDefinition,System.String)">
            <summary>
            Skip the _EventDefinition with _Cause.
            If Event belongs to a Field, skip Field too!
            </summary>
            <param name="_EventDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnAnalyse_Helper_SkipEventMethods(GUPS.Mono.Cecil.EventDefinition,System.String)">
            <summary>
            Skip the _EventDefinition add and remove methods with _Cause.
            </summary>
            <param name="_EventDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnAnalyse_A_FindEventDefinitionShouldBeNotRenamed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Properties to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Analyse_A_Helper_Compatibility_IsEventRenamingAllowed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.EventDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_EventDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Analyse_AnalyseEventGroups(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Method groups.
            And check if some other Method in group getting skipped.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent">
            <summary>
            Component responsible for obfuscating field definitions and their references.
            Handles field name generation, compatibility checking with reflection-sensitive code,
            and updating all field references throughout the processed assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the field obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_A_FindAllModuleMethodReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetMemberReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_A_FindAllInstructionMethodReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find the FieldReference inside the Instructions of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_Helper_SkipField(GUPS.Mono.Cecil.FieldDefinition,System.String)">
            <summary>
            Skip _FieldDefinition with _Cause.
            If Field belongs to a Property, skip Property too!
            </summary>
            <param name="_FieldDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_Helper_SkipPropertyMethods(GUPS.Mono.Cecil.PropertyDefinition,System.String)">
            <summary>
            Skip the _PropertyDefinitions get and set methods with _Cause.
            </summary>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_Helper_SkipEventMethods(GUPS.Mono.Cecil.EventDefinition,System.String)">
            <summary>
            Skip the _EventDefinition add and remove methods with _Cause.
            </summary>
            <param name="_EventDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_A_FindFieldDefinitionShouldBeNotRenamed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Fields to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.Analyse_A_Helper_Compatibility_IsFieldRenamingAllowed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.FieldDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_FieldDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.IMemberObfuscationComponent">
            <summary>
            Defines the contract for components that perform member-specific obfuscation operations.
            Extends the assembly processing interface with additional member name discovery capabilities
            that are executed between the analysis and obfuscation phases.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.IMemberObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs member name discovery and assignment during the pipeline processing.
            This phase occurs after analysis but before obfuscation, allowing components to
            generate and assign obfuscated names based on the complete analysis context.
            </summary>
            <param name="_AssemblyInfo">The assembly information to process for member name assignment.</param>
            <returns>True if member name discovery was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent">
            <summary>
            Component responsible for obfuscating method definitions and their references.
            Handles method name generation, virtual method grouping, compatibility checking with
            reflection-sensitive frameworks, and updating all method references throughout the processed assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the method obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnAnalyse_A_FindAllModuleMethodReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetMemberReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnAnalyse_A_FindAllInstructionMethodReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find the MethodReferences inside the Overrides and Instructions of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnAnalyse_A_FindMethodDefinitionShouldBeNotRenamed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Methods to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Analyse_A_Helper_Compatibility_IsMethodRenamingAllowed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.MethodDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_MethodDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Analyse_AnalyseMethodGroups(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Method groups.
            And check if some other Method in group getting skipped.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent">
            <summary>
            Component responsible for obfuscating property definitions and their references.
            Handles property name generation, virtual property grouping, compatibility checking with
            serialization and reflection systems, and updating all property references throughout the processed assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the property obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnAnalyse_Helper_SkipProperty(GUPS.Mono.Cecil.PropertyDefinition,System.String)">
            <summary>
            Skip the _PropertyDefinition with _Cause.
            If Property belongs to a Field, skip Field too!
            </summary>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnAnalyse_Helper_SkipPropertyMethods(GUPS.Mono.Cecil.PropertyDefinition,System.String)">
            <summary>
            Skip the _PropertyDefinitions get and set methods with _Cause.
            </summary>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnAnalyse_A_FindPropertyDefinitionShouldBeNotRenamed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Properties to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Analyse_A_Helper_Compatibility_IsPropertyRenamingAllowed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.PropertyDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_PropertyDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Analyse_AnalysePropertyGroups(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Method groups.
            And check if some other Method in group getting skipped.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeCacheReplaceComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeCacheReplaceComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeCacheReplaceComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent">
            <summary>
            Obfuscation of MonoBehaviours by renaming. 
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.CanBeProcessedByComponent(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            True: The _AssemblyLoadInfo should be processed by this component.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.CMonobehaviourObfuscationMapping">
            <summary>
            The step data key for the MonoBehaviour rename mapping.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.MonobehaviourObfuscationMapping">
            <summary>
            A mapping of the original monobehaviour type to the obfuscated monobehaviour type.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Validate if MonoBehaviours are obfuscatable in general.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnAnalyse_A_CheckMonoBehaviour(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Check if MonoBehaviours in general should be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Validates if the namespace and class name getting obfuscated.
            Only both together can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns just true.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Map the unobfuscated MonoBehaviours to the obfuscated MonoBehaviours.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostObfuscate_Assemblies_FindMonoBehaviourMapping(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Process only if MonoBehaviour, not generic and not abstract!
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostPipelineProcess(GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Adds the unobfuscated MonoBehaviours to the obfuscated MonoBehaviours map to the _StepOutput.
            </summary>
            <param name="_StepOutput"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindAllModuleTypeReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetTypeReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindAllCustomAttributeTypeReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'Custom Attributes' TypeReferences of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_Assembly(GUPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Returns a list of all TypeReference in _AssemblyDefinition CustomAttributes.
            </summary>
            <param name="_AssemblyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_TypeDefinition(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a list of all TypeReference of the CustomAttributes in _TypeDefinition, and its members.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttribute_Collection(GUPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            CustomAttributes have ConstructorArguments and Properties and Fields.
            CustomAttributes having a Value. If it is a TypeReference, it is a reference.
            CustomAttributeNamedArgument have a Name and an Argument. The Name has to be overriden if the belonging Property or Field got obfuscated.
            The Argument does maybe recursive reference a TypeReference. 
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttributeArgument(GUPS.Mono.Cecil.CustomAttributeArgument)">
            <summary>
            If the Value of _CustomAttributeArgument is a TypeReference return it else null.
            </summary>
            <param name="_CustomAttributeArgument"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindTypeDefinitionNamespacesShouldBeSkipped(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Checks if the whole Type and members should be skipped!
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Analyse_A_Helper_Compatibility_SkipWholeNamespace(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Skip the whole namespace?
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindTypeDefinitionNamespacesShouldBeNotRenamed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Types to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Analyse_A_Helper_Compatibility_IsNamespaceRenamingAllowed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.OnAnalyse_A_CheckPlayable(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Check if Playables in general should be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.OnAnalyse_A_CheckScriptableObject(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Check if ScriptableObjects in general should be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent">
            <summary>
            Component responsible for obfuscating type definitions and their references.
            Handles type name generation, namespace management, compatibility checking with
            reflection and serialization systems, and updating all type references throughout the processed assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the type obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindAllModuleTypeReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetTypeReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindAllCustomAttributeTypeReferences(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'Custom Attributes' TypeReferences of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_Assembly(GUPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Returns a list of all TypeReference in _AssemblyDefinition CustomAttributes.
            </summary>
            <param name="_AssemblyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_TypeDefinition(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a list of all TypeReference of the CustomAttributes in _TypeDefinition, and its members.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttribute_Collection(GUPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            CustomAttributes have ConstructorArguments and Properties and Fields.
            CustomAttributes having a Value. If it is a TypeReference, it is a reference.
            CustomAttributeNamedArgument have a Name and an Argument. The Name has to be overriden if the belonging Property or Field got obfuscated.
            The Argument does maybe recursive reference a TypeReference. 
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttributeArgument(GUPS.Mono.Cecil.CustomAttributeArgument)">
            <summary>
            If the Value of _CustomAttributeArgument is a TypeReference return it else null.
            </summary>
            <param name="_CustomAttributeArgument"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindTypeDefinitionsShouldBeSkipped(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Checks if the whole Type and members should be skipped!
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Analyse_A_Helper_Compatibility_SkipWholeType(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Skip the whole type?
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindTypeDefinitionsShouldBeNotRenamed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Types to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo">The assembly to analyse.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Analyse_A_Helper_Compatibility_IsTypeRenamingAllowed(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnFindMemberNames_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent">
            <summary>
            Provides configuration and management for obfuscated name generation patterns and mapping strategies.
            Allows customization of character sets, naming patterns, and mapping persistence options
            to control how obfuscated names are generated and stored throughout the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.Name">
            <summary>
            Gets the display name of this component.
            Used in the GUI and logging to identify the renaming configuration component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.Description">
            <summary>
            Gets a description of what this component does.
            Explains the component's role in configuring obfuscated name generation and mapping.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Before the pipeline process, load the renaming pattern and mapping.
            </summary>
            <param name="_StepInput">The step input.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.OnPostPipelineProcess(GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            After the pipeline process, save the mapping.
            </summary>
            <param name="_StepOutput">The step output.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent">
            <summary>
            First step of two-phase anti-tampering protection system.
            Injects runtime integrity check code into assemblies during obfuscation.
            Hash generation for final assemblies occurs separately in PostBuild phase.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.Name">
            <summary>
            Gets the display name of this runtime injection component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.Description">
            <summary>
            Gets a detailed description of the runtime injection functionality.
            Explains how the component embeds integrity check code into assemblies.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.ShortDescription">
            <summary>
            Gets a brief description of the runtime injection feature.
            Used for quick reference in the GUI.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.CSettingsKey">
            <summary>
            Configuration key for anti-tampering runtime injection settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.SettingsKey">
            <summary>
            Gets the configuration key used to identify runtime injection settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.CEnable_AntiTampering_Protection">
            <summary>
            Configuration key for enabling/disabling runtime injection.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.ObfuscatorCategory">
            <summary>
            Gets the security category for GUI organization.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates GUI container for configuring runtime injection settings.
            </summary>
            <param name="_ComponentSettings">Component settings to bind to GUI controls.</param>
            <returns>Configured GUI container with runtime injection options.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.IsActive">
            <summary>
            Gets whether runtime injection is enabled in settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis for runtime injection preparation.
            Currently performs no specific analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to analyze.</param>
            <returns>Always returns true indicating analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-analysis processing for runtime injection preparation.
            Currently performs no specific post-analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-analyze.</param>
            <returns>Always returns true indicating post-analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs the main obfuscation step for runtime injection.
            Currently performs no modifications during the obfuscation phase.
            </summary>
            <param name="_AssemblyInfo">Assembly information to obfuscate.</param>
            <returns>Always returns true indicating obfuscation completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Injects runtime integrity checking code into assemblies.
            Phase 1 of 2: Embeds detection runtime. Hash generation occurs in PostBuild phase.
            </summary>
            <param name="_AssemblyInfo">Assembly to inject runtime code into.</param>
            <returns>True if runtime injection was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingRuntime">
            <summary>
            Runtime anti-tampering protection system that performs assembly integrity checks.
            Validates assembly hashes at runtime to detect unauthorized modifications.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingRuntime.Initialize">
            <summary>
            Initializes anti-tampering protection. Performs assembly integrity 
            verification by comparing calculated hashes with stored reference 
            hashes to detect tampering attempts.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent">
            <summary>
            Security component for signing assemblies with a strong name key pair.
            Provides cryptographic signing to help prevent assembly tampering and replacement attacks.
            Supports RSA key pair generation and management for Mono builds.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.Name">
            <summary>
            Gets the display name of this component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.Description">
            <summary>
            Gets a detailed description of the component's functionality.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.ShortDescription">
            <summary>
            Gets a brief description of the component.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.CSettingsKey">
            <summary>
            Configuration key for component settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.SettingsKey">
            <summary>
            Gets the configuration key used to identify this component's settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.CEnable_SignAssembly">
            <summary>
            Configuration key for enabling/disabling this component.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.CKeyPairFilePath">
            <summary>
            Configuration key for the strong name key pair file path.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.ObfuscatorCategory">
            <summary>
            Gets the category that this component belongs to for GUI organization.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.keyPairFileRow">
            <summary>
            GUI row control for key pair file path input and generation button.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container for configuring settings.
            </summary>
            <param name="_ComponentSettings">The component settings to bind to the GUI controls.</param>
            <returns>A configured GUI container with settings options.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.GenerateKeyPair">
            <summary>
            Generates a new RSA 2048-bit key pair for assembly signing.
            Creates the key file at the default path and updates the GUI text field.
            Shows a confirmation dialog before generating to prevent accidental overwrites.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.CanBeProcessedByComponent(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Determines whether the specified assembly can be processed by this signing component.
            Only supports Mono builds as IL2CPP builds handle security differently.
            </summary>
            <param name="_AssemblyLoadInfo">Assembly information to evaluate for compatibility.</param>
            <returns>True if the assembly can be processed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis of the assembly for signing preparation.
            Currently performs no specific analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to analyze.</param>
            <returns>Always returns true indicating analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-analysis processing for signing preparation.
            Currently performs no specific post-analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-analyze.</param>
            <returns>Always returns true indicating post-analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs assembly obfuscation processing for signing.
            Currently performs no specific obfuscation and always succeeds.
            The actual signing occurs in the PreSave phase.
            </summary>
            <param name="_AssemblyInfo">Assembly information to obfuscate.</param>
            <returns>Always returns true indicating obfuscation completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-obfuscation processing for signing.
            Currently performs no specific post-obfuscation and always succeeds.
            The actual signing occurs in the PreSave phase.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-obfuscate.</param>
            <returns>Always returns true indicating post-obfuscation completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SignAssemblyComponent.PreSave_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Configures assembly signing parameters before saving the assembly.
            Validates the key pair file path and sets up signing if enabled.
            Reports errors for missing or invalid key files.
            </summary>
            <param name="_AssemblyInfo">Assembly information containing writer parameters to configure.</param>
            <returns>Always returns true, with signing status set in assembly writer parameters.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent">
            <summary>
            Security component that adds SuppressIldasmAttribute to assemblies to prevent disassembly.
            Protects compiled code by blocking the use of ILDASM (IL Disassembler) and similar tools
            that could be used to reverse engineer the application.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.Name">
            <summary>
            Gets the display name of this ILDASM suppression component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.Description">
            <summary>
            Gets a detailed description of the ILDASM suppression functionality.
            Explains how the component prevents disassembly tools from examining the code.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.ShortDescription">
            <summary>
            Gets a brief description of the ILDASM suppression feature.
            Used for quick reference in the GUI.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.CSettingsKey">
            <summary>
            Configuration key for ILDASM suppression settings in the obfuscator configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.SettingsKey">
            <summary>
            Gets the configuration key used to identify this component's settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.CEnable_Assembly_Suppress_ILDasm">
            <summary>
            Configuration key for enabling/disabling ILDASM suppression.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.ObfuscatorCategory">
            <summary>
            Gets the security category that this component belongs to for GUI organization.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container for configuring ILDASM suppression settings.
            </summary>
            <param name="_ComponentSettings">The component settings to bind to the GUI controls.</param>
            <returns>A configured GUI container with ILDASM suppression options.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis of the assembly for ILDASM suppression.
            Currently performs no specific analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to analyze.</param>
            <returns>Always returns true indicating analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-analysis processing for ILDASM suppression.
            Currently performs no specific post-analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-analyze.</param>
            <returns>Always returns true indicating post-analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Adds the SuppressIldasmAttribute to the assembly to prevent disassembly.
            Checks if the attribute is already present to avoid duplicates.
            </summary>
            <param name="_AssemblyInfo">Assembly information to add the attribute to.</param>
            <returns>True if the attribute was added or already present; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-obfuscation processing for ILDASM suppression.
            Currently performs no specific post-obfuscation and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-process.</param>
            <returns>Always returns true indicating post-obfuscation completed successfully.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent">
            <summary>
            Security component that generates obfuscated code by cloning and randomizing existing methods.
            Creates fake methods with randomized instructions to increase code complexity and
            make reverse engineering more difficult by adding noise to the assembly.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.Name">
            <summary>
            Gets the display name of this method cloning security component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.Description">
            <summary>
            Gets a detailed description of the method cloning functionality.
            Explains how the component generates fake code to obfuscate the assembly.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.ShortDescription">
            <summary>
            Gets a brief description of the method cloning feature.
            Used for quick reference in the GUI.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.CSettingsKey">
            <summary>
            Configuration key for method cloning settings in the obfuscator configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.SettingsKey">
            <summary>
            Gets the configuration key used to identify this component's settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.CEnable_Add_Random_Code">
            <summary>
            Configuration key for enabling/disabling random code generation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.CEnable_Force_Add_Random_Code">
            <summary>
            Configuration key for forcing random code generation even for non-obfuscated classes.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.ObfuscatorCategory">
            <summary>
            Gets the security category that this component belongs to for GUI organization.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container for configuring method cloning settings.
            </summary>
            <param name="_ComponentSettings">The component settings to bind to the GUI controls.</param>
            <returns>A configured GUI container with method cloning options.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis of the assembly for method cloning.
            Currently performs no specific analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to analyze.</param>
            <returns>Always returns true indicating analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-analysis processing for method cloning.
            Currently performs no specific post-analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-analyze.</param>
            <returns>Always returns true indicating post-analysis completed successfully.</returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.random">
            <summary>
            Random number generator used for creating randomized method clones.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Executes method cloning obfuscation by generating fake methods based on existing ones.
            Creates randomized copies of methods to increase code complexity and obfuscation.
            </summary>
            <param name="_AssemblyInfo">Assembly information to apply method cloning to.</param>
            <returns>True if method cloning was applied successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-obfuscation processing for method cloning.
            Currently performs no specific post-obfuscation and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-process.</param>
            <returns>Always returns true indicating post-obfuscation completed successfully.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent">
            <summary>
            Security component that applies control flow obfuscation to method bodies.
            Transforms linear code execution into complex control flow patterns using jumps, switches,
            and conditional branches to make reverse engineering significantly more difficult.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.Name">
            <summary>
            Gets the display name of this control flow obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.Description">
            <summary>
            Gets a detailed description of the control flow obfuscation functionality.
            Explains how the component transforms linear code execution into complex patterns.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.ShortDescription">
            <summary>
            Gets a brief description of the control flow obfuscation feature.
            Used for quick reference in the GUI.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.CSettingsKey">
            <summary>
            Configuration key for control flow obfuscation settings in the obfuscator configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.SettingsKey">
            <summary>
            Gets the configuration key used to identify this component's settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.CEnable_Method_ControlFlow">
            <summary>
            Configuration key for enabling/disabling control flow obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.ObfuscatorCategory">
            <summary>
            Gets the security category that this component belongs to for GUI organization.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container for configuring control flow obfuscation settings.
            </summary>
            <param name="_ComponentSettings">The component settings to bind to the GUI controls.</param>
            <returns>A configured GUI container with control flow obfuscation options.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.CanBeProcessedByComponent(GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Determines whether the specified assembly can be processed by this control flow component.
            Only supports Mono builds as IL2CPP builds handle control flow differently.
            </summary>
            <param name="_AssemblyLoadInfo">Assembly information to evaluate for compatibility.</param>
            <returns>True if the assembly can be processed; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis of the assembly for control flow obfuscation.
            Currently performs no specific analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to analyze.</param>
            <returns>Always returns true indicating analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-analysis processing for control flow obfuscation.
            Currently performs no specific post-analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-analyze.</param>
            <returns>Always returns true indicating post-analysis completed successfully.</returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.random">
            <summary>
            Random number generator used for control flow randomization.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Executes control flow obfuscation by transforming method instruction sequences.
            Parses methods into blocks and reorganizes them with complex branching logic.
            </summary>
            <param name="_AssemblyInfo">Assembly information to apply control flow obfuscation to.</param>
            <returns>True if control flow obfuscation was applied successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-obfuscation processing for control flow obfuscation.
            Currently performs no specific post-obfuscation and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-process.</param>
            <returns>Always returns true indicating post-obfuscation completed successfully.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent">
            <summary>
            Security component that obfuscates string literals within method bodies to protect sensitive data.
            Encrypts string constants and replaces them with runtime decryption calls to prevent
            easy extraction of strings from compiled assemblies through static analysis.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.Name">
            <summary>
            Gets the display name of this string obfuscation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.Description">
            <summary>
            Gets a detailed description of the string obfuscation functionality.
            Explains how the component encrypts string literals to protect sensitive data.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.ShortDescription">
            <summary>
            Gets a brief description of the string obfuscation feature.
            Used for quick reference in the GUI.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.CSettingsKey">
            <summary>
            Configuration key for string obfuscation settings in the obfuscator configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.SettingsKey">
            <summary>
            Gets the configuration key used to identify this component's settings.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.CEnable_String_Obfuscation">
            <summary>
            Configuration key for enabling/disabling string obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.ObfuscatorCategory">
            <summary>
            Gets the security category that this component belongs to for GUI organization.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.GetGuiContainer(GUPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container for configuring string obfuscation settings.
            </summary>
            <param name="_ComponentSettings">The component settings to bind to the GUI controls.</param>
            <returns>A configured GUI container with string obfuscation options.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.OnAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs initial analysis of the assembly for string obfuscation.
            Currently performs no specific analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to analyze.</param>
            <returns>Always returns true indicating analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.OnPostAnalyse_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-analysis processing for string obfuscation.
            Currently performs no specific post-analysis and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-analyze.</param>
            <returns>Always returns true indicating post-analysis completed successfully.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.OnObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Executes string obfuscation by encrypting string literals throughout the assembly.
            Processes all methods to replace string constants with encrypted equivalents.
            </summary>
            <param name="_AssemblyInfo">Assembly information to apply string obfuscation to.</param>
            <returns>True if string obfuscation was applied successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.OnPostObfuscate_Assemblies(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Performs post-obfuscation processing for string obfuscation.
            Currently performs no specific post-obfuscation and always succeeds.
            </summary>
            <param name="_AssemblyInfo">Assembly information to post-process.</param>
            <returns>Always returns true indicating post-obfuscation completed successfully.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline">
            <summary>
            The main pipeline for post-assembly build obfuscation processing.
            Coordinates the execution of all obfuscation components in the correct order,
            managing assembly loading, processing, and saving operations.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the <see cref="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline"/> class.
            </summary>
            <param name="_Step">The post-assembly build step that this pipeline belongs to.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.Step">
            <summary>
            Gets the post-assembly build step that this pipeline belongs to.
            Provides access to the step's data container and configuration.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole obfuscation pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput">
            <summary>
            Contains the output data and results from the post-assembly build obfuscation step.
            Provides a flexible data storage mechanism for components to share information
            and track the success or failure of the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Data">
            <summary>
            Gets the dictionary that stores dynamic data produced during the obfuscation process.
            Components can use this to share information and store results using string keys.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Has(System.String)">
            <summary>
            Determines whether the output contains data for the specified key.
            </summary>
            <param name="_Key">The key to check for in the data container.</param>
            <returns>True if data exists for the specified key; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Adds or updates data in the output container for the specified key.
            Allows components to store results and share information across the obfuscation process.
            </summary>
            <typeparam name="TDataType">The type of data being stored.</typeparam>
            <param name="_Key">The key to associate with the data.</param>
            <param name="_Data">The data to store.</param>
            <param name="_Override">If true, overwrites existing data; if false, preserves existing data.</param>
            <returns>True if the data was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Get``1(System.String,``0)">
            <summary>
            Retrieves data from the output container for the specified key.
            Returns a default value if no data exists for the key.
            </summary>
            <typeparam name="TDataType">The expected type of the stored data.</typeparam>
            <param name="_Key">The key to retrieve data for.</param>
            <param name="_Default">The default value to return if no data exists for the key.</param>
            <returns>The stored data if found; otherwise, the default value.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Failed">
            <summary>
            Gets or sets a value indicating whether the obfuscation pipeline processing failed.
            Used to track the overall success or failure of the obfuscation operation.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep">
            <summary>
            Core step responsible for post-compilation assembly obfuscation in the Unity build pipeline.
            Orchestrates the complete obfuscation workflow including assembly loading, component processing,
            cache management, and obfuscated assembly generation with comprehensive error handling.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.#ctor(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PostAssemblyBuildStep with required configuration settings.
            Sets up the obfuscation pipeline with editor and build-specific parameters.
            </summary>
            <param name="_EditorSettings">Editor configuration settings for platform-specific behavior.</param>
            <param name="_BuildSettings">Build configuration settings including target platform and assembly list.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Name">
            <summary>
            Gets the display name identifier for this post-assembly build step.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.EditorSettings">
            <summary>
            Gets the editor settings that define platform-specific obfuscation behavior and configurations.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.BuildSettings">
            <summary>
            Gets the build settings that specify target platform, assembly lists, and build-specific configurations.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.DataContainer">
            <summary>
            Gets the data container that holds all runtime state for the obfuscation process.
            Contains assemblies, components, caches, and other shared obfuscation data.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadDataContainer">
            <summary>
            Initializes and loads the data container for storing obfuscation runtime state.
            Creates a new instance to hold assemblies, components, and processing data.
            </summary>
            <returns>True if the data container was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadDataContainer">
            <summary>
            Unloads and cleans up the data container, releasing all held resources.
            Ensures proper disposal of obfuscation runtime state and memory cleanup.
            </summary>
            <returns>True if the data container was unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Settings">
            <summary>
            Gets the obfuscator settings that control component behavior and obfuscation parameters.
            Contains configuration for all obfuscation components and their specific options.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadObfuscatorSettings">
            <summary>
            Loads and initializes the obfuscator settings from configuration files.
            Applies build platform-specific modifications to the loaded settings.
            </summary>
            <returns>True if settings were loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unloads and cleans up the obfuscator settings, freeing associated resources.
            Ensures proper disposal of configuration data and memory cleanup.
            </summary>
            <returns>True if settings were unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadComponents">
            <summary>
            Discovers and loads all available obfuscation and compatibility components.
            Initializes the component pipeline with both obfuscation and compatibility processors.
            </summary>
            <returns>True if components were loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetComponentsAssemblyLoadInfoList">
            <summary>
            Retrieves assembly load information from all components that provide assemblies.
            Collects assembly paths and metadata from IAssemblyProvidingComponent instances.
            </summary>
            <returns>List of assembly load information from all assembly-providing components.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadComponentsAssemblyDependencyDirectories(System.Collections.Generic.List{System.String}@)">
            <summary>
            Collects assembly dependency directories from all components that provide dependencies.
            Gathers reference paths needed for assembly resolution during obfuscation.
            </summary>
            <param name="_AssemblyDependencyDirectoryList">Output list of dependency directory paths.</param>
            <returns>True if dependency directories were collected successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PreLoadAssemblyLoadInfoList(System.Collections.Generic.List{GUPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo})">
            <summary>
            Executes pre-load preparation on assembly load information for all active processing components.
            Allows components to prepare and validate assemblies before the main loading phase.
            </summary>
            <param name="_AssemblyLoadInfoList">List of assembly load information to prepare.</param>
            <returns>True if all components successfully prepared the assemblies; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetCompatibilityComponents``1">
            <summary>
            Retrieves all loaded compatibility components of the specified type.
            Filters the compatibility component list to return only instances of the requested type.
            </summary>
            <typeparam name="TObfuscationCompatibilityComponent">The specific compatibility component type to retrieve.</typeparam>
            <returns>List of compatibility components matching the specified type.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PreSaveAssemblyLoadInfoList(System.Collections.Generic.List{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Executes pre-save processing on assembly information for all active processing components.
            Allows components to perform final modifications before assemblies are written to disk.
            </summary>
            <param name="_AssemblyInfoList">List of processed assembly information to prepare for saving.</param>
            <returns>True if all components successfully pre-processed the assemblies; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PostSaveAssemblyLoadInfoList(System.Collections.Generic.List{GUPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Executes post-save processing on assembly information for all active processing components.
            Allows components to perform cleanup and finalization after assemblies are written to disk.
            </summary>
            <param name="_AssemblyInfoList">List of saved assembly information to post-process.</param>
            <returns>True if all components successfully post-processed the assemblies; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadComponents">
            <summary>
            Unloads and cleans up all loaded components, freeing associated resources.
            Clears both obfuscation and compatibility component lists.
            </summary>
            <returns>True if components were unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Pipeline">
            <summary>
            Gets the obfuscation pipeline that orchestrates component execution and processing flow.
            Manages the sequential execution of all obfuscation components.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadPipeline">
            <summary>
            Initializes and loads the obfuscation pipeline with all available components.
            Creates the pipeline instance and registers all loaded components for processing.
            </summary>
            <returns>True if the pipeline was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadPipeline">
            <summary>
            Unloads and cleans up the obfuscation pipeline, freeing associated resources.
            Ensures proper disposal of the pipeline and all registered components.
            </summary>
            <returns>True if the pipeline was unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblyLoadInfos">
            <summary>
            Loads assembly load information from either custom build settings or component providers.
            Determines which assemblies need to be processed for obfuscation.
            </summary>
            <returns>True if assembly load information was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblyDependencyDirectories">
            <summary>
            Collects and loads all assembly dependency directories from various sources.
            Gathers reference paths from domain assemblies, Unity compilation pipeline, platforms, and components.
            </summary>
            <returns>True if dependency directories were loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblies">
            <summary>
            Loads and prepares all assemblies for obfuscation processing.
            Separates assemblies into helper and obfuscation categories based on configuration.
            Requires assembly resolver to be initialized for dependency resolution.
            </summary>
            <returns>True if assemblies were loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.SaveAssemblies">
            <summary>
            Saves all obfuscated assemblies to disk after processing is complete.
            Executes pre-save and post-save component processing for final assembly modifications.
            </summary>
            <returns>True if all assemblies were saved successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadAssemblies">
            <summary>
            Unloads and disposes all loaded assemblies, freeing memory and resources.
            Properly disposes both obfuscation target and helper assembly definitions.
            </summary>
            <returns>True if assemblies were unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.IsAssemblyInObfuscateAssemblies(System.String)">
            <summary>
            Determines whether the specified assembly name is included in the obfuscation target list.
            Checks if an assembly is scheduled for obfuscation processing.
            </summary>
            <param name="_AssemblyName">The name of the assembly to check.</param>
            <returns>True if the assembly is in the obfuscation target list; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetAssemblyFromObfuscateAssemblies(System.String)">
            <summary>
            Retrieves the assembly information for the specified assembly name from the obfuscation target list.
            Returns the AssemblyInfo instance if found in the obfuscation assemblies.
            </summary>
            <param name="_AssemblyName">The name of the assembly to retrieve.</param>
            <returns>AssemblyInfo instance if found; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblyResolver">
            <summary>
            Initializes the assembly resolver with dependency directories and search paths.
            Configures resolution paths for all loaded assemblies and their dependencies.
            Requires AssemblyDependencyDirectoryPathList and AssemblyLoadInfoList to be populated.
            </summary>
            <returns>True if the assembly resolver was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadAssemblyResolver">
            <summary>
            Unloads and disposes the assembly resolver, freeing associated resources.
            Ensures proper cleanup of assembly resolution infrastructure.
            </summary>
            <returns>True if the assembly resolver was unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadCache">
            <summary>
            Initializes and loads all member caches for efficient type and member lookup during obfuscation.
            Creates caches for types, methods, fields, properties, and events.
            </summary>
            <returns>True if caches were loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetCache``1">
            <summary>
            Retrieves the member cache instance for the specified cache type.
            Provides type-safe access to specific member caches (type, method, field, property, event).
            </summary>
            <typeparam name="TCache">The specific cache type to retrieve (e.g., TypeCache, MethodCache).</typeparam>
            <returns>The requested cache instance, or default value if not found.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadCache">
            <summary>
            Unloads and cleans up all member caches, freeing associated memory and resources.
            Clears the cache dictionary and releases all cached type and member information.
            </summary>
            <returns>True if caches were unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadRenameManager">
            <summary>
            Initializes and loads the rename manager for handling member name obfuscation.
            Sets up the infrastructure for generating obfuscated names and tracking renames.
            </summary>
            <returns>True if the rename manager was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadRenameManager">
            <summary>
            Unloads and cleans up the rename manager, freeing associated resources.
            Ensures proper disposal of rename tracking and generation infrastructure.
            </summary>
            <returns>True if the rename manager was unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetAssembly(GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Retrieves the assembly information for the specified type definition from obfuscation targets.
            Returns the AssemblyInfo if the type belongs to an assembly being obfuscated.
            </summary>
            <param name="_TypeDefinition">The type definition to find the assembly for.</param>
            <returns>AssemblyInfo if the type is in an obfuscation target assembly; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.IsTypeInObfuscateAssemblies(GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Determines whether the specified type reference belongs to an assembly being obfuscated.
            Checks if the type's scope/assembly is in the obfuscation target list.
            </summary>
            <param name="_TypeReference">The type reference to check.</param>
            <returns>True if the type is in an obfuscation target assembly; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Resolve_TypeDefinition(GUPS.Mono.Cecil.TypeReference)">
            <summary>
            Attempts to resolve a type reference to its concrete type definition.
            Searches through all loaded assemblies and their dependencies for the type.
            </summary>
            <param name="_TypeReference">The type reference to resolve.</param>
            <returns>The resolved TypeDefinition if found; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Add_TypeDefinition(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Adds a type definition to the main module of the specified assembly.
            Also registers the type in the type cache for efficient lookup.
            </summary>
            <param name="_AssemblyInfo">The assembly to add the type to.</param>
            <param name="_TypeDefinition">The type definition to add.</param>
            <returns>True if the type was added successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Add_TypeDefinition(GUPS.Obfuscator.Editor.Assembly.AssemblyInfo,GUPS.Mono.Cecil.ModuleDefinition,GUPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Adds a type definition to the specified module of the assembly.
            Also registers the type in the type cache for efficient lookup and validates uniqueness.
            </summary>
            <param name="_AssemblyInfo">The assembly containing the target module.</param>
            <param name="_ModuleDefinition">The module to add the type to.</param>
            <param name="_TypeDefinition">The type definition to add.</param>
            <returns>True if the type was added successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.OnLoad">
            <summary>
            Executes the complete initialization sequence for the post-assembly build step.
            Loads all required components, settings, assemblies, caches, and infrastructure in proper order.
            </summary>
            <returns>True if all initialization steps completed successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PostProcess(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput)">
            <summary>
            Executes post-processing operations after the main obfuscation pipeline completes.
            Saves obfuscated assemblies to disk if processing was successful, otherwise logs errors.
            </summary>
            <param name="_StepOutput">The output containing processing results and status information.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.OnUnload">
            <summary>
            Executes the complete cleanup sequence for the post-assembly build step.
            Unloads all components, assemblies, caches, and infrastructure in reverse initialization order.
            </summary>
            <returns>True indicating cleanup completion (individual failures are logged but don't stop cleanup).</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ACharset">
            <summary>
            Abstract base class for character sets used in obfuscated name generation.
            Defines the contract for providing character collections that can be used
            to generate obfuscated identifiers with different styles and languages.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ACharset.#ctor">
            <summary>
            Initializes a new instance of the ACharset class.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ACharset.Characters">
            <summary>
            Gets the string containing all characters available for obfuscated name generation.
            Derived classes must provide the specific character set to use for name generation.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.DefaultCharset">
            <summary>
            Provides the default character set for obfuscated name generation.
            Uses lowercase Latin letters to ensure compatibility across platforms and avoid
            case-sensitivity issues that can occur in Unity's editor platform.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.DefaultCharset.Characters">
            <summary>
            Gets the default character set containing lowercase Latin letters.
            Uses only lowercase letters to prevent case-sensitivity issues in Unity's editor platform
            where uppercase and lowercase filenames are treated as identical.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ECharset">
            <summary>
            Defines the available character sets for obfuscated name generation.
            Each character set provides a different style or language for generated identifiers.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ECharset.Default">
            <summary>
            Default character set using standard Latin letters.
            Provides good compatibility and readability.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ECharset.Unicode">
            <summary>
            Unicode character set with extended character support.
            Provides maximum obfuscation effectiveness through diverse characters.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ECharset.Common_Chinese">
            <summary>
            Common Chinese character set for generating Chinese-style identifiers.
            Provides cultural localization and enhanced obfuscation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ECharset.Common_Korean">
            <summary>
            Common Korean character set for generating Korean-style identifiers.
            Provides cultural localization and enhanced obfuscation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ECharset.Custom">
            <summary>
            Custom character set defined by the user.
            Allows complete control over the characters used in obfuscated names.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping">
            <summary>
            Defines the contract for rename mappings that manage the relationship between original member keys and obfuscated names.
            Provides a unified interface for storing and retrieving name mappings across all member types during obfuscation.
            Supports versioning to maintain compatibility with different obfuscator versions.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.GetMapping(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Retrieves the member key mapping for the specified member type.
            </summary>
            <param name="_MemberType">The type of members to get the mapping for.</param>
            <returns>The member key mapping for the specified type.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.Add(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Adds or updates a mapping between a member key and its obfuscated name for the specified member type.
            </summary>
            <param name="_MemberType">The type of member being mapped.</param>
            <param name="_MemberKey">The original member key to map from.</param>
            <param name="_Name">The obfuscated name to map to.</param>
            <param name="_Override">If true, overwrites existing mappings; if false, preserves existing mappings.</param>
            <returns>True if the mapping was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.Get(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Retrieves the obfuscated name for the specified member key and member type.
            </summary>
            <param name="_MemberType">The type of member to look up.</param>
            <param name="_MemberKey">The member key to get the obfuscated name for.</param>
            <returns>The obfuscated name if found; otherwise, null.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.GetAllMemberKeys(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Retrieves all member keys that are mapped to the same obfuscated name for the specified member type.
            Useful for identifying member groups that share the same obfuscated identifier.
            </summary>
            <param name="_MemberType">The type of members to search within.</param>
            <param name="_Name">The obfuscated name to find all mapped keys for.</param>
            <returns>A list of all member keys mapped to the specified obfuscated name.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.GetAllMemberKeys(System.String)">
            <summary>
            Retrieves all member keys across all member types that are mapped to the same obfuscated name.
            Provides a global view of name collisions and shared names across different member types.
            </summary>
            <param name="_Name">The obfuscated name to find all mapped keys for.</param>
            <returns>A list of all member keys across all types mapped to the specified obfuscated name.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator">
            <summary>
            Generates obfuscated names for members during the obfuscation process.
            Uses configurable character sets and maintains separate indexing for different member types
            to ensure unique and consistent name generation across the entire obfuscation operation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.uniqueChars">
            <summary>
            Contains all unique characters available for generating obfuscated names.
            The character set determines the style and appearance of generated names.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.numUniqueChars">
            <summary>
            Stores the number of unique characters in the current character set.
            Used for calculations when generating sequential obfuscated names.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.UseCharSet(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ACharset)">
            <summary>
            Assigns a character set to be used for generating obfuscated names.
            The character set determines what characters can appear in the generated names.
            </summary>
            <param name="_Charset"></param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.UseGlobalIndexer">
            <summary>
            True: No obfuscated member will share the same name.
            False: Obfuscated member of different member types may share the same name.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.globalRenamingIndex">
            <summary>
            Global index for obfuscation.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.groupedRenamingIndexDictionary">
            <summary>
            Dictionary between member and its index.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextIndex(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the next index.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextName(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Generate a next name for a member using a predefined pattern.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextName(System.UInt32)">
            <summary>
            Generate a next name under a specific index using a predefined pattern.
            Use with caution! Watch out for same names in the same type.
            </summary>
            <param name="_Index"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextName(System.UInt32,System.String)">
            <summary>
            Generate a new name under a specific index using a predefined pattern.
            After each character a _Seperator can/will be added.
            Use with caution! Watch out for same names in the same type.
            </summary>
            <param name="_Index"></param>
            <param name="_Seperator"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping">
            <summary>
            Reprensents the Obfuscator pre version 4.0 mapping.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Version">
            <summary>
            Always Version 3.0.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.LoadFromVersion``1(``0)">
            <summary>
            Not needed.
            </summary>
            <typeparam name="TVersionAble"></typeparam>
            <param name="_VersionAble"></param>
            <returns></returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.memberMappingDictionary">
            <summary>
            Dictionary of a mapping, which maps keys to obfuscated names.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.AddMapping(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping)">
            <summary>
            Add a _MemberType to _MemberKeyMapping entry.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKeyMapping"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.GetMapping(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the IMemberKeyMapping belonging to _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Add(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Not needed.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Get(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Not needed.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.GetAllMemberKeys(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Not needed.
            </summary>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.GetAllMemberKeys(System.String)">
            <summary>
            Not needed.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Deserialize(System.String)">
            <summary>
            Loads the mapping from a file content.
            </summary>
            <param name="_FileContent">The content of the file.</param>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping">
            <summary>
            Reprensents the Obfuscator after version 4.0 mapping.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Version">
            <summary>
            Always Version 4.0.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.LoadFromVersion``1(``0)">
            <summary>
            Load this version 4.0 mapping from another older version.
            </summary>
            <typeparam name="TRenameMapping"></typeparam>
            <param name="_RenameMapping"></param>
            <returns></returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.memberMappingDictionary">
            <summary>
            Dictionary of a mapping, which maps keys to obfuscated names.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.AddMapping(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping)">
            <summary>
            Add a _MemberType to _MemberKeyMapping entry.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKeyMapping"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.GetMapping(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the IMemberKeyMapping belonging to _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Add(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Add _MemberKey with obfuscated _Name to mapping of _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Add(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping)">
            <summary>
            Add a whole _MemberKeyMapping to IMemberKeyMapping for _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKeyMapping"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Get(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Returns the obfuscated name for _MemberKey in mapping of _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.GetAllMemberKeys(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Returns all IMemberKey sharing the same _Name in _MemberType mapping.
            </summary>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.GetAllMemberKeys(System.String)">
            <summary>
            Returns all IMemberKey sharing the same _Name in all MemberType to IMemberKeyMapping Mappings.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager">
            <summary>
            Manages the renaming process for members during obfuscation.
            Coordinates name generation, mapping storage, and compatibility checking to ensure
            safe and effective member renaming while maintaining code functionality.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.#ctor(GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Initializes a new instance of the RenameManager class.
            Associates the manager with a specific post-assembly build step.
            </summary>
            <param name="_Step">The post-assembly build step that owns this rename manager.</param>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.step">
            <summary>
            The post-assembly build step that this rename manager belongs to.
            Provides access to assemblies, components, and obfuscation configuration.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.Load">
            <summary>
            Load the RenameManager.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.Unload">
            <summary>
            Unload the Renamemanager.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.doNotObfuscateDictionary">
            <summary>
            Member Type, Dictionary of Original Keys and a List of not obfuscation cause.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.AddDoNotObfuscate(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition,System.String)">
            <summary>
            Do not obfuscate _MemberDefinition of _MemberType with _Cause of not obfuscation.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetDoNotObfuscate(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns if the _MemberDefinition of _MemberType will be not obfuscated.
            True: Getting NOT obfuscated.
            False: Getting obfuscated.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetDoNotObfuscateCause(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the list of not obfuscation cause.
            If there is no cause null will be returned.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetCountOfDoNotObfuscate(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the count of the to not obfuscate member per type.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.OriginalMapping">
            <summary>
            The original mapping (from original key to name) of the assembly members.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.CurrentMapping">
            <summary>
            The current obfuscation mapping.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadedMapping">
            <summary>
            The loaded obfuscation mapping.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SetupOriginalMapping">
            <summary>
            Setup the original mapping.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetUniqueObfuscatedName(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition,System.Int32)">
            <summary>
            Get a unique name for _MemberDefinition of _MemberType.
            Will check the loaded, current or original mapping with _Tries for a unique name.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <param name="_Tries"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.AddObfuscated(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition,System.String)">
            <summary>
            Add _ObfuscatedName for _MemberDefinition of _MemberType to the current mapping. 
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <param name="_ObfuscatedName"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetObfuscated(GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,GUPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the obfuscated name of _MemberDefinition of _MemberType.
            The method first checks in the current mapping, if there is a obfuscated name, and returns it.
            If there is none, it checks the loaded mapping and returns it.
            If non found, returns null.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadMappingFromFile(System.String)">
            <summary>
            Load a mapping from a file.
            </summary>
            <param name="_FilePath">The full or relative path to the mapping file.</param>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.CVersionParameter">
            <summary>
            When loading the mapping from an url, the version parameter in the url is replaced with the current version of the app.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadMappingFromUrl(System.String)">
            <summary>
            Load a mapping from an url. The url must return the mapping as json.
            </summary>
            <param name="_Url">The url to the mapping file.</param>
            <remarks>
            You can use optional the {version} parameter in the url to replace it with the current version of the app (Application.version).
            </remarks>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadMapping(System.String)">
            <summary>
            Load a mapping from a string.
            </summary>
            <param name="_FileContent">The content of the mapping file.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SaveMappingToFile(System.String)">
            <summary>
            Save the current mapping to a file.
            </summary>
            <param name="_FilePath">The full or relative path to the mapping file.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SaveMappingToUrl(System.String)">
            <summary>
            Save the current mapping to an url. The url must accept a post request with the mapping as json.
            </summary>
            <param name="_Url">The url to the mapping file.</param>
            <exception cref="T:System.Exception">Throws an exception if the request was not successful.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SaveMappingToTempPath">
            <summary>
            Save the current mapping to the temp path.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.IsNameFree(GUPS.Mono.Cecil.IMemberDefinition,GUPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Returns true if the _Name is free and not used either in the loaded, current or original mapping.
            </summary>
            <param name="_MemberDefinition"></param>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.NameGenerator">
            <summary>
            Used to generate obfuscated names.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.DataContainer.PostAssetsBuildDataContainer">
            <summary>
            Data container for the post assets build process.
            Stores all components and data needed for processing Unity assets after assembly obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.DataContainer.PostAssetsBuildDataContainer.ComponentList">
            <summary>
            List of all post assets build pipeline components.
            These components handle updating Unity assets to match obfuscated code.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent">
            <summary>
            Abstract base class for components in the post assets build pipeline.
            Provides common functionality for components that process Unity assets after assembly obfuscation.
            These components are responsible for updating asset references to match obfuscated types and members.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent.Pipeline">
            <summary>
            The post assets build pipeline this component belongs to.
            Provides access to the pipeline for coordination between components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent.Step">
            <summary>
            Returns the post assets build step that this pipeline belongs to.
            Provides access to the step for coordination and data sharing between components.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent.OnPostAssetsBuild">
            <summary>
            Called after the project assets are processed during the build.
            Implement this method to perform asset-specific processing after assembly obfuscation.
            </summary>
            <returns>True if the post assets build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the post build step.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.Helper.ComponentHelper.GetComponents">
            <summary>
            Returns all post build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.Helper.ComponentHelper.GetPreBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.IPostAssetsBuildComponent">
            <summary>
            Interface for components in the post assets build pipeline.
            Defines the contract for components that process Unity assets after assembly obfuscation.
            Implementations handle updating asset references to match obfuscated types and members.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.IPostAssetsBuildComponent.OnPostAssetsBuild">
            <summary>
            Called after the project assets are processed during the build.
            Implement this method to perform asset-specific processing after assembly obfuscation.
            </summary>
            <returns>True if the post assets build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.IPostAssetsBuildPluginComponent">
            <summary>
            Interface over a custom post assets build plugin component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.MonobehaviourObfuscationMapping">
            <summary>
            A mapping of the original monobehaviour type to the obfuscated monobehaviour type.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            Reads the monobehaviour obfuscation mapping from the step input.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPostAssetsBuild">
            <summary>
            Does nothing in the free version.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole post build pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildOutput">
            <summary>
            Output object for the post assets build step.
            Extends the PostAssemblyBuildOutput to include results from processing Unity assets.
            Contains information about the success or failure of updating Unity assets to match obfuscated code.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep">
            <summary>
            Step responsible for processing Unity assets after assembly obfuscation.
            Updates asset references to match obfuscated types and members.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.#ctor(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PostAssetsBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadPipeline">
            <summary>
            Load the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadPipeline">
            <summary>
            Unload the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.DataContainer.PostBuildDataContainer">
            <summary>
            Data container for the post build process.
            Stores all components and data needed for final processing after assembly and asset obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.DataContainer.PostBuildDataContainer.ComponentList">
            <summary>
            List of all post build pipeline components.
            These components handle final processing and cleanup after assembly and asset obfuscation.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent">
            <summary>
            Abstract base class for components in the post build pipeline.
            Provides common functionality for components that perform final processing after assembly and asset obfuscation.
            These components handle cleanup, reporting, and any final tasks required to complete the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent.Pipeline">
            <summary>
            The post build pipeline this component belongs to.
            Provides access to the pipeline for coordination between components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent.Step">
            <summary>
            Returns the post build step that this pipeline belongs to.
            Provides access to the step for coordination and data sharing between components.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent.OnPostBuild">
            <summary>
            Called after the project has been built and all assembly and asset obfuscation is complete.
            Implement this method to perform final processing, cleanup, or reporting tasks.
            </summary>
            <returns>True if the post build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the post build step.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Helper.ComponentHelper.GetComponents">
            <summary>
            Returns all post build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Helper.ComponentHelper.GetPreBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.IPostBuildComponent">
            <summary>
            Interface for components in the post build pipeline.
            Defines the contract for components that perform final processing after assembly and asset obfuscation.
            Implementations handle cleanup, reporting, and any final tasks required to complete the obfuscation process.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.IPostBuildComponent.OnPostBuild">
            <summary>
            Called after the project has been built and all assembly and asset obfuscation is complete.
            Implement this method to perform final processing, cleanup, or reporting tasks.
            </summary>
            <returns>True if the post build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.IPostBuildPluginComponent">
            <summary>
            Interface over a custom pre build plugin component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.MonobehaviourObfuscationMapping">
            <summary>
            A mapping of the original monobehaviour type to the obfuscated monobehaviour type.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPrePipelineProcess(GUPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            Reads the monobehaviour obfuscation mapping from the step input.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPostBuild">
            <summary>
            Does nothing in the free version.
            </summary>
            <returns>Always true.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent">
            <summary>
            Second step of two-phase anti-tampering protection system.
            Post-build component that generates integrity hash files for all final assemblies.
            Creates verification data used by runtime anti-tampering checks to detect code modification.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.Name">
            <summary>
            Gets the display name of this hash generation component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.Description">
            <summary>
            Gets a detailed description of the hash generation functionality.
            Explains how the component creates integrity verification files for runtime checks.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.ShortDescription">
            <summary>
            Gets a brief description of the hash generation feature.
            Used for quick reference in the GUI.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.IsActive">
            <summary>
            Gets whether hash generation is enabled based on anti-tampering settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.OnPostBuild">
            <summary>
            Generates SHA256 hash files for all assemblies in the final build directory.
            Creates verification data in StreamingAssets/Cache for runtime integrity checks.
            </summary>
            <returns>True if hash generation completed successfully; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.OnPostBuild_CreateAssemblyHashFile(System.String,System.String)">
            <summary>
            Calculates SHA256 hash of an assembly and creates verification file.
            </summary>
            <param name="_StreamingAssetsDirectory">Target directory for hash files.</param>
            <param name="_AssemblyPath">Path to assembly file to hash.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Security.AntiTamperingComponent.OnPostBuild_GetBuildDataDirectory">
            <summary>
            Gets the build data directory path based on the target platform.
            </summary>
            <returns>Path to the data directory containing assemblies and resources.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole post build pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput">
            <summary>
            Output object for the post build step.
            Contains the results of the final processing after assembly and asset obfuscation.
            Provides data about the success or failure of the overall obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Failed">
            <summary>
            Returns if the pipeline processing failed!
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep">
            <summary>
            Step responsible for final processing after both assembly and asset obfuscation.
            Performs any final cleanup or processing tasks required after the build is complete.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.#ctor(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PostBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadPipeline">
            <summary>
            Load the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadPipeline">
            <summary>
            Unload the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.DataContainer.PreBuildDataContainer">
            <summary>
            Data container for the pre-build process.
            Stores all components and data needed for analyzing the project before obfuscation begins.
            Contains information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.DataContainer.PreBuildDataContainer.ComponentList">
            <summary>
            List of all pre-build pipeline components.
            These components analyze the project and gather information needed for the obfuscation process.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.DataContainer.PreBuildDataContainer.UnityAssetCache">
            <summary>
            Cache of all Unity assets needed by asset processing components.
            Provides efficient access to asset data for analysis during the pre-build phase.
            Contains assets like animations, prefabs, and scripts that need to be analyzed before obfuscation.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent">
            <summary>
            Abstract base class for components in the pre-build pipeline.
            Provides common functionality for components that analyze the project before obfuscation begins.
            These components gather information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent.Pipeline">
            <summary>
            The pre-build pipeline this component belongs to.
            Provides access to the pipeline for coordination between components.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent.Step">
            <summary>
            Returns the pre-build step that this pipeline belongs to.
            Provides access to the step for coordination and data sharing between components.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent.OnPreBuild">
            <summary>
            Called before the project is built and obfuscation begins.
            Implement this method to analyze the project and gather information needed for obfuscation.
            </summary>
            <returns>True if the pre-build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent">
            <summary>
            Analyse model files, animation clips and controllers for animation methods and classes.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.CAnimation_ReferencedAnimationMethodHashSet">
            <summary>
            The step output data key for the ReferencedAnimationMethodHashSet.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.ReferencedAnimationMethodHashSet">
            <summary>
            A list of all references animation methods.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.CAnimation_ReferencedStateMachineBehaviourList">
            <summary>
            The step output data key for the ReferencedStateMachineBehaviourList.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.ReferencedStateMachineBehaviourList">
            <summary>
            A list of all references StateMachineBehaviour types.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.modelFileExtension">
            <summary>
            Extensions of supported model files.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.animationFileExtension">
            <summary>
            Extensions of supported animation files.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.controllerFileExtension">
            <summary>
            Extensions of supported controller files.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.AssetExtensionsToProcess">
            <summary>
            Returns all asset extensions to process by this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Process the asset and search for animation methods.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets_ModelFile(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse model files and search for animation methods.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets_AnimationClip(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse animation clip files and search for animation methods.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.GetMethodsInAnimationClip(UnityEngine.AnimationClip)">
            <summary>
            Returns a duplicate free list of methods in _AnimationClip.
            </summary>
            <param name="_AnimationClip"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets_AnimationController(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse animation controller files and search for StateMachineBehaviours.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnProcess_Assets(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Does nothing.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnPostPipelineProcess(GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            After the pipeline process, add the found animation methods and the found animator classes to the datacontainer.
            </summary>
            <param name="_StepOutput"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent">
            <summary>
            A interface for a component, which processes assets.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent.AssetExtensionsToProcess">
            <summary>
            Return the extensions of assets, should be processed by this component.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent.OnAnalyse_Assets(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse Assets pre build.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent.OnProcess_Assets(GUPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Process Assets pre build but after 'OnAnalyse_Assets(...)'.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent">
            <summary>
            Analyse or manipulate a Unity Component pre build.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.ProcessScenes">
            <summary>
            Get if the component should process scenes.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.ProcessPrefabs">
            <summary>
            Get if the component should process prefabs.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.OnAnalyse_Component(UnityEngine.Component)">
            <summary>
            Analyse a Unity Component before the build starts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.OnProcess_Component(UnityEngine.Component)">
            <summary>
            Process a Unity Component before the build starts but directly after 'OnAnalyse_Component(...)'.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ProcessScenes">
            <summary>
            The component is not required at the moment, so it does not need to process scenes.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ProcessPrefabs">
            <summary>
            The component is not required at the moment, so it does not need to process prefabs.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.CReferencedMonoScriptTypeListKey">
            <summary>
            The step output data key for the ReferencedMonoScriptTypeList.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ReferencedMonoScriptTypeList">
            <summary>
            A list of all referenced types of unity mono scripts in the scene and prefabs.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent">
            <summary>
            This component analyses Unity Components for Unity Events.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnPreBuild">
            <summary>
            Does nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ProcessScenes">
            <summary>
            Process scenes for Unity Events if enabled. Default is true.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ProcessPrefabs">
            <summary>
            Process prefabs for Unity Events if enabled. Default is true.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.CReferencedEventMethodHashSet">
            <summary>
            The step output data key for the ReferencedEventMethodHashSet.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ReferencedEventMethodHashSet">
            <summary>
            A list of all references event methods.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.alreadySearchedObjects">
            <summary>
            Contains a list of already searched objects as hash, so they will not be iterated twice.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnAnalyse_Component(UnityEngine.Component)">
            <summary>
            Searchs the passed _Component for Unity Events, to later skip their refered method names.
            </summary>
            <param name="_Component"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.GetUnityEvents(System.Object,System.Int32)">
            <summary>
            Search the passed _Object for Unity Events.
            </summary>
            <param name="_Object">The object to search for Unity Events.</param>
            <param name="_Depth">The depth of the search. If zero is reached, it will return an empty list.</param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnAnalyse_Component_IterateEvent(UnityEngine.Component,UnityEngine.Events.UnityEventBase)">
            <summary>
            Adds the found methods in the passed _UnityEventBase to the ReferencedEventMethodHashSet.
            </summary>
            <param name="_Component"></param>
            <param name="_UnityEventBase"></param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnProcess_Component(UnityEngine.Component)">
            <summary>
            Does nothing.
            </summary>
            <param name="_Component"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnPostPipelineProcess(GUPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Stores the ReferencedEventMethodHashSet in the _StepOutput.
            </summary>
            <param name="_StepOutput"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the pre build step.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.Helper.ComponentHelper.GetComponents">
            <summary>
            Returns all pre build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.Helper.ComponentHelper.GetPreBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IPreBuildComponent">
            <summary>
            Interface for components in the pre-build pipeline.
            Defines the contract for components that analyze the project before obfuscation begins.
            Implementations gather information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IPreBuildComponent.OnPreBuild">
            <summary>
            Called before the project is built and obfuscation begins.
            Implement this method to analyze the project and gather information needed for obfuscation.
            </summary>
            <returns>True if the pre-build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IPreBuildPluginComponent">
            <summary>
            Interface over a custom pre build plugin component.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole pre build pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Assets_Analyse">
            <summary>
            The second step of the pipeline is to analyse all assets from the asset cache.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Assets_Process">
            <summary>
            The third step of the pipeline is to process all assets from the asset cache. Processing means to edit the assets if required for the obfuscation.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Component_Analyse_And_Manipulate(System.Collections.Generic.List{UnityEngine.Component})">
            <summary>
            Analyse and manipulate all passed components.
            </summary>
            <param name="_ComponentList">The list of components to analyse and manipulate.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Component_IterateBuildSceneComponents">
            <summary>
            The fourth step of the pipeline is to iterate all components in the scenes included in the build settings and analyses and edits them, if the obfuscation requires it.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Component_IteratePrefabComponents">
            <summary>
            The fifth step of the pipeline is to iterate all components in the prefabs in the project and analyses and edits them, if the obfuscation requires it.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_GetLoadedScenes">
            <summary>
            Get all scenes currently open in the editor.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_GetScenesInBuild">
            <summary>
            Get all enabled scenes in Build Settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_LoadScenes(System.Collections.Generic.List{System.String})">
            <summary>
            Load multiple scenes in the editor.
            </summary>
            <param name="_Scenes">The scenes to load.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_GetAllComponentsInScene(UnityEngine.SceneManagement.Scene)">
            <summary>
            Returns a list of all components in _Scene.
            </summary>
            <param name="_Scene">The scene to get the components from.</param>
            <returns>A list of all components in _Scene.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput">
            <summary>
            Input object for the pre build step.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput">
            <summary>
            Output object for the pre build step.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Failed">
            <summary>
            Returns if the pipeline processing failed!
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep">
            <summary>
            Step responsible for analyzing the project before obfuscation begins.
            Gathers information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.#ctor(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PreBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadPipeline">
            <summary>
            Load the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadPipeline">
            <summary>
            Unload the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.GetComponentAssetProcessingExtensionList">
            <summary>
            Get the extensions should be processed by the IAssetProcessingComponent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadAssetCache">
            <summary>
            Loads the Unity asset cache with assets that need to be processed.
            </summary>
            <returns>True if the asset cache was successfully loaded; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadAssetCache">
            <summary>
            Unloads the Unity asset cache.
            </summary>
            <returns>True if the asset cache was successfully unloaded; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform">
            <summary>
            Default implementation of a build platform for the obfuscator.
            Provides platform-specific settings and behaviors.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process.
            </summary>
            <returns>A list of additional directory paths for assembly resolution.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform.ModifiedSettings(GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings)">
            <summary>
            Modifies the obfuscator settings based on the platform-specific requirements.
            In the free version, this disables certain obfuscation features.
            </summary>
            <param name="_Settings">The obfuscator settings to modify.</param>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform.ToString">
            <summary>
            Returns a string representation of the build platform.
            </summary>
            <returns>The name of the build platform.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Build.WindowsStoreAppBuildPlatform">
            <summary>
            Build platform implementation for Windows Store Apps (UWP).
            Provides platform-specific settings and behaviors for the Windows Store platform.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Build.WindowsStoreAppBuildPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process.
            For Windows Store Apps, this includes various .NET and UWP-specific directories.
            </summary>
            <returns>A list of additional directory paths for assembly resolution.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Build.WindowsStoreAppBuildPlatform.ToString">
            <summary>
            Returns a string representation of the Windows Store App build platform.
            </summary>
            <returns>The name of the build platform.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Editor.DefaultEditorPlatform">
            <summary>
            Default implementation of an editor platform for the obfuscator.
            Provides platform-specific settings and behaviors for the Unity Editor.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.DefaultEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process.
            </summary>
            <returns>A list of additional directory paths for assembly resolution.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.DefaultEditorPlatform.ToString">
            <summary>
            Returns a string representation of the editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Editor.EEditorPlatform">
            <summary>
            Enumeration of platforms the Unity editor can run on.
            Used to identify the current operating system for platform-specific operations.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Editor.LinuxEditorPlatform">
            <summary>
            Linux-specific implementation of the editor platform.
            Provides Linux-specific paths and behaviors for the obfuscator when running in the Linux Unity editor.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.LinuxEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process on Linux.
            Includes the Unity Editor's Managed directory.
            </summary>
            <returns>A list of additional directory paths for assembly resolution specific to Linux.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.LinuxEditorPlatform.ToString">
            <summary>
            Returns a string representation of the Linux editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Editor.MacEditorPlatform">
            <summary>
            Mac-specific implementation of the editor platform.
            Provides Mac-specific paths and behaviors for the obfuscator when running in the macOS Unity editor.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.MacEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process on macOS.
            Includes the Unity Editor's Managed directory.
            </summary>
            <returns>A list of additional directory paths for assembly resolution specific to macOS.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.MacEditorPlatform.ToString">
            <summary>
            Returns a string representation of the Mac editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Editor.WindowsEditorPlatform">
            <summary>
            Windows-specific implementation of the editor platform.
            Provides Windows-specific paths and behaviors for the obfuscator when running in the Windows Unity editor.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.WindowsEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process on Windows.
            Includes the Unity Editor's Managed directory.
            </summary>
            <returns>A list of additional directory paths for assembly resolution specific to Windows.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Editor.WindowsEditorPlatform.ToString">
            <summary>
            Returns a string representation of the Windows editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Platform.Helper.EditorPlatformHelper">
            <summary>
            Helper class for determining and working with the current editor platform.
            Provides utility methods to detect the operating system the Unity editor is running on.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Platform.Helper.EditorPlatformHelper.RunningPlatform">
            <summary>
            Detects and returns the current operating system platform the Unity editor is running on.
            Uses environment and directory checks to accurately identify the platform.
            </summary>
            <returns>The detected editor platform (Windows, Mac, or Linux).</returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Serialization.Unity.Helper.SerializedPropertyHelper">
            <summary>
            Helper class for Unity SerializedProperties.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Serialization.Unity.Helper.SerializedPropertyHelper.GetAllMonoScriptReferences(UnityEngine.Object)">
            <summary>
            Returns all MonoScript references in _Object without duplicates.
            </summary>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Serialization.Unity.Helper.SerializedPropertyHelper.SearchVariablesWithSerializedObject(UnityEngine.Object)">
            <summary>
            Search through variables of an object with SerializedObject.
            Returns found MonoScripts.
            </summary>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings">
            <summary>
            Settings class for the obfuscator that can be serialized to and from JSON.
            Contains all configuration options for the obfuscation process.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Global_Enable_Obfuscation">
            <summary>
            Setting key for the global obfuscation enable/disable option.
            </summary>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Global_Obfuscator_Version_Value">
            <summary>
            Current version of the obfuscator.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Version">
            <summary>
            Obfuscator Settings Version.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.LoadFromVersion``1(``0)">
            <summary>
            Loads settings from another version of the settings.
            </summary>
            <typeparam name="TVersionAble">The type of the versioned object to load from.</typeparam>
            <param name="_VersionAble">The versioned object to load from.</param>
            <returns>True if the settings were successfully loaded; otherwise, false.</returns>
        </member>
        <member name="F:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.componentSettings_Array">
            <summary>
            All Component Settings.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_Or_Create_ComponentSettings(System.String)">
            <summary>
            Get or Create and Get the ComponentSettings with _Settings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_ComponentSettings_As_Bool(System.String,System.String,System.Boolean)">
            <summary>
            Return _Setting as boolean from ComponentSettings with name _ComponentSettings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <param name="_Setting"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_ComponentSettings_As_String(System.String,System.String,System.String)">
            <summary>
            Return _Setting as string from ComponentSettings with name _ComponentSettings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <param name="_Setting"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_ComponentSettings_As_Array(System.String,System.String)">
            <summary>
            Return _Setting as array from ComponentSettings with name _ComponentSettings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <param name="_Setting"></param>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.GetSettingsFilePath">
            <summary>
            Returns the file path of the setting file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Save">
            <summary>
            Stores the settings to a file.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Load">
            <summary>
            Loads the settings from a file.
            If the files does not exists, returns an empty default setting.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings">
            <summary>
            Obfuscator unity build settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsDevelopmentBuild">
            <summary>
            The build is a development build.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsStandaloneBuildTarget">
            <summary>
            Returns if is a standalone build target (Windows, Linux, OSX).
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsMobileBuildTarget">
            <summary>
            Returns if is a mobile build target (Android, iOS).
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsIOSBuildTarget">
            <summary>
            Returns if is an iOS build target.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.BuildPlatform">
            <summary>
            The platform built to.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.AssemblyDependencyDirectoryPathList">
            <summary>
            Additional dependencies. Enter the full path of the directory of the dependency.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.AssemblyLoadInfoList">
            <summary>
            Assemblies used in the obfuscation process.
            Either you can add all the assemblies you want to obfuscate here,
            or the obfuscator adds them based on the obfuscation settings.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings">
            <summary>
            Obfuscator Editor Settings.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings.EditorPlatform">
            <summary>
            Active editor platform.
            </summary>
        </member>
        <member name="T:GUPS.Obfuscator.Editor.Obfuscator">
            <summary>
            The main entry point and controller for the Unity code obfuscation process.
            Manages the complete obfuscation workflow including pre-build, assembly processing, 
            asset updates, and post-build operations.
            Implements the AProject base class to utilize the project's step-based execution model.
            </summary>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Obfuscator.Singleton">
            <summary>
            Gets or sets the singleton instance of the Obfuscator.
            A new instance should be initialized for each build to ensure a clean state.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.#cctor">
            <summary>
            Static constructor that initializes the Obfuscator singleton instance.
            Called automatically when the Obfuscator class is first accessed.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.Init">
            <summary>
            Initializes the Obfuscator by creating a new singleton instance.
            Can be called explicitly to reset the obfuscator state.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.LoadEditorPlatform">
            <summary>
            Creates and configures the appropriate editor platform implementation based on the current operating system.
            Supports Windows, Mac, and Linux platforms with specialized implementations.
            </summary>
            <returns>A platform-specific editor platform implementation.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.LoadBuildPlatform(UnityEditor.BuildTarget)">
            <summary>
            Creates and configures the appropriate build platform implementation based on the Unity build target.
            Provides specialized handling for specific platforms like Windows Store Apps.
            </summary>
            <param name="_BuildTarget">The Unity build target to create a platform implementation for.</param>
            <returns>A build target-specific platform implementation.</returns>
        </member>
        <member name="P:GUPS.Obfuscator.Editor.Obfuscator.Report">
            <summary>
            Gets or sets the active report for the obfuscation process.
            Provides a centralized logging mechanism accessible throughout the obfuscation process.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.GetReportDirectoryPath">
            <summary>
            Gets the default directory path where obfuscation log files are stored.
            </summary>
            <returns>The full path to the obfuscator log directory.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.GetReportFilePath">
            <summary>
            Determines the appropriate file path for the obfuscation log file.
            Attempts to use a custom path from settings if configured, falling back to default or temporary paths if needed.
            </summary>
            <returns>The full path where the obfuscation log file should be saved.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.RemoveReportFile">
            <summary>
            Removes any existing report file and its associated meta file.
            Ensures that each obfuscation run creates a fresh log file.
            </summary>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.ValidateReportPath(System.String)">
            <summary>
            Validates whether a file path is valid on the current system.
            Checks if the path can be used to create a FileInfo object without exceptions.
            </summary>
            <param name="_FilePath">The file path to validate.</param>
            <returns>True if the path is valid; otherwise, false.</returns>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.PreBuild(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the pre-build phase of the obfuscation process.
            Prepares the environment for obfuscation by setting up necessary configurations and validating conditions.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the pre-build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.PostAssemblyBuild(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the post-assembly build phase of the obfuscation process.
            Performs the actual obfuscation of assemblies after they have been built by Unity.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the post-assembly build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.PostBuild(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the post-build phase of the obfuscation process.
            Performs final processing after the Unity build has completed.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the post-build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
        <member name="M:GUPS.Obfuscator.Editor.Obfuscator.PostAssetsBuild(GUPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,GUPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the post-assets build phase of the obfuscation process.
            Updates Unity asset files to maintain compatibility with obfuscated code.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the post-assets build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
    </members>
</doc>
